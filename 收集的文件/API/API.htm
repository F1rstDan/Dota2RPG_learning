<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html dir="ltr" lang="en"><head>
<title>Dota 2 Workshop Tools/Scripting/API - Valve Developer Community</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="generator" content="MediaWiki 1.16.5">
<link rel="alternate" type="application/x-wiki" title="Edit" href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit">
<link rel="edit" title="Edit" href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit">
<link rel="shortcut icon" href="https://developer.valvesoftware.com/favicon.ico">
<link rel="search" type="application/opensearchdescription+xml" href="https://developer.valvesoftware.com/w/opensearch_desc.php" title="Valve Developer Community (en)">
<link rel="alternate" type="application/atom+xml" title="Valve Developer Community Atom feed" href="https://developer.valvesoftware.com/w/index.php?title=Special:RecentChanges&amp;feed=atom">
<link rel="stylesheet" href="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/main-ltr.css" media="screen">
<link rel="stylesheet" href="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/shared.css" media="screen">
<link rel="stylesheet" href="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/commonPrint.css" media="print">
<link rel="stylesheet" href="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/index_002.css">
<link rel="stylesheet" href="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/index_003.css" media="print">
<link rel="stylesheet" href="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/index_004.css">
<link rel="stylesheet" href="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/index.css">
<script>
var skin="vector",
stylepath="/w/skins",
wgUrlProtocols="http\\:\\/\\/|https\\:\\/\\/|ftp\\:\\/\\/|irc\\:\\/\\/|gopher\\:\\/\\/|telnet\\:\\/\\/|nntp\\:\\/\\/|worldwind\\:\\/\\/|mailto\\:|news\\:|svn\\:\\/\\/|steam\\:\\/\\/",
wgArticlePath="/wiki/$1",
wgScriptPath="/w",
wgScriptExtension=".php",
wgScript="/w/index.php",
wgVariantArticlePath=false,
wgActionPaths={},
wgServer="https://developer.valvesoftware.com",
wgCanonicalNamespace="",
wgCanonicalSpecialPageName=false,
wgNamespaceNumber=0,
wgPageName="Dota_2_Workshop_Tools/Scripting/API",
wgTitle="Dota 2 Workshop Tools/Scripting/API",
wgAction="view",
wgArticleId=29460,
wgIsArticle=true,
wgUserName="Tw980252",
wgUserGroups=["*", "user"],
wgUserLanguage="en",
wgContentLanguage="en",
wgBreakFrames=false,
wgCurRevisionId=186491,
wgVersion="1.16.5",
wgEnableAPI=true,
wgEnableWriteAPI=true,
wgSeparatorTransformTable=["", ""],
wgDigitTransformTable=["", ""],
wgMainPageTitle="Main Page",
wgFormattedNamespaces={"-2": "Media", "-1": "Special", "0": "", "1": "Talk", "2": "User", "3": "User talk", "4": "Valve Developer Community", "5": "Valve Developer Community talk", "6": "File", "7": "File talk", "8": "MediaWiki", "9": "MediaWiki talk", "10": "Template", "11": "Template talk", "12": "Help", "13": "Help talk", "14": "Category", "15": "Category talk"},
wgNamespaceIds={"media": -2, "special": -1, "": 0, "talk": 1, "user": 2, "user_talk": 3, "valve_developer_community": 4, "valve_developer_community_talk": 5, "file": 6, "file_talk": 7, "mediawiki": 8, "mediawiki_talk": 9, "template": 10, "template_talk": 11, "help": 12, "help_talk": 13, "category": 14, "category_talk": 15, "image": 6, "image_talk": 7},
wgSiteName="Valve Developer Community",
wgCategories=[],
wgRestrictionEdit=[],
wgRestrictionMove=[],
wgRestrictionRead=[],
wgAjaxWatch={"watchMsg": "Watch", "unwatchMsg": "Unwatch", "watchingMsg": "Watching...", "unwatchingMsg": "Unwatching...", "tooltip-ca-watchMsg": "Add this page to your watchlist", "tooltip-ca-unwatchMsg": "Remove this page from your watchlist"};
</script><script src="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/wikibits.js"></script>
<script src="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/ajax.js"></script>
<script src="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/ajaxwatch.js"></script>
<!--[if lt IE 7]><style type="text/css">body{behavior:url("/w/skins/vector/csshover.htc")}</style><![endif]-->
<script src="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/index.php"></script>

<script id="similar_sf_js" src="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/mo.js" type="text/javascript"></script><script src="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/client" type="text/javascript"></script><script src="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/sf_main.htm" type="text/javascript"></script><script src="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/javascript.js" type="text/javascript"></script><script src="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/hotels.php" type="text/javascript"></script><script src="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/preload.js" type="text/javascript"></script><script src="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/bindevent.do" type="text/javascript"></script><script src="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/intext.js" type="text/javascript"></script><script src="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/affiliate_client.js" id="jw_00" type="text/javascript"></script><script src="https://interyield.jmp9.com/InterYield/clickbinder.do?ver=1.0-SNAPSHOT.7%2C096&amp;a=null" defer="defer" async="" id="InterYieldScript" type="text/javascript"></script></head>
<body class="mediawiki ltr ns-0 ns-subject page-Dota_2_Workshop_Tools_Scripting_API skin-vector">
    <div id="page-bg">
    <div id="page-wrapper">
    <div id="page-container">
        <div id="mw-page-base" class="noprint"></div>
        <div id="mw-head-base" class="noprint"></div>
        <!-- content -->
        <div id="content">
            <a id="top"></a>
            <div id="mw-js-message" style="display:none;"></div>
                        <!-- firstHeading -->
            <h1 id="firstHeading" class="firstHeading">Dota 2 Workshop Tools/Scripting/API</h1>
            <!-- /firstHeading -->
            <!-- bodyContent -->
            <div id="bodyContent">
                <!-- tagline -->
                <h3 id="siteSub">From Valve Developer Community</h3>
                <!-- /tagline -->
                <!-- subtitle -->
                <div id="contentSub"><span class="subpages">&lt; <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools" title="Dota 2 Workshop Tools">Dota 2 Workshop Tools</a> | <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting" title="Dota 2 Workshop Tools/Scripting">Scripting</a></span></div>
                <!-- /subtitle -->
                                                                <!-- jumpto -->
                <div id="jump-to-nav">
                    Jump to: <a href="#mw-head">navigation</a>,
                    <a href="#p-search">search</a>
                </div>
                <!-- /jumpto -->
                                <!-- bodytext -->
                <div style="margin:0.4em 1em 0.5em;"><strong style="color:#EDEDED;display:table-cell;text-align:right;white-space:nowrap;padding-right:0.3em;"><img alt="" src="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/Note.png" height="13" width="10"> Note:</strong><span style="display:table-cell;"> This page is automatically generated.  Any changes may be overwritten</span></div>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=1" title="Edit section: Accessing the DOTA 2 Scripting API from Lua">编辑</a>]</span> <span class="mw-headline" id="Accessing_the_DOTA_2_Scripting_API_from_Lua"><b>Accessing the DOTA 2 Scripting API from Lua</b></span></h3>
<p>While Lua is <a href="http://en.wikipedia.org/wiki/Dynamically_typed" class="external text" rel="nofollow">dynamically typed</a>, the DOTA 2 engine is written primarily in C++, which is <a href="http://en.wikipedia.org/wiki/Type_system#Static_type-checking" class="external text" rel="nofollow">statically typed</a>.
 Thus, you'll need to be conscious of your data types when calling the 
API. (If you try to pass the wrong type to an API function, you'll get 
an error message in Vconsole telling you what you passed and what it was
 expecting.)
</p>
<table id="toc" class="toc"><tbody><tr><td><div id="toctitle"><h2>目录</h2> <span class="toctoggle">[<a href="javascript:toggleToc()" class="internal" id="togglelink">收起</a>]</span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Accessing_the_DOTA_2_Scripting_API_from_Lua"><span class="tocnumber">1</span> <span class="toctext">Accessing the DOTA 2 Scripting API from Lua</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Global"><span class="tocnumber">2</span> <span class="toctext">Global</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#CBaseEntity"><span class="tocnumber">3</span> <span class="toctext">CBaseEntity</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#CEntities"><span class="tocnumber">4</span> <span class="toctext">CEntities</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="#CEntityInstance"><span class="tocnumber">5</span> <span class="toctext">CEntityInstance</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="#CDOTABaseAbility"><span class="tocnumber">6</span> <span class="toctext">CDOTABaseAbility</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="#CDOTA_Ability_Animation_Attack"><span class="tocnumber">7</span> <span class="toctext">CDOTA_Ability_Animation_Attack</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="#CDOTA_Ability_Animation_TailSpin"><span class="tocnumber">8</span> <span class="toctext">CDOTA_Ability_Animation_TailSpin</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="#CDOTA_Ability_Nian_Leap"><span class="tocnumber">9</span> <span class="toctext">CDOTA_Ability_Nian_Leap</span></a></li>
<li class="toclevel-1 tocsection-10"><a href="#CDOTA_Ability_Nian_Dive"><span class="tocnumber">10</span> <span class="toctext">CDOTA_Ability_Nian_Dive</span></a></li>
<li class="toclevel-1 tocsection-11"><a href="#CDOTA_Ability_Nian_Roar"><span class="tocnumber">11</span> <span class="toctext">CDOTA_Ability_Nian_Roar</span></a></li>
<li class="toclevel-1 tocsection-12"><a href="#CDOTA_Item"><span class="tocnumber">12</span> <span class="toctext">CDOTA_Item</span></a></li>
<li class="toclevel-1 tocsection-13"><a href="#CDOTA_Item_Physical"><span class="tocnumber">13</span> <span class="toctext">CDOTA_Item_Physical</span></a></li>
<li class="toclevel-1 tocsection-14"><a href="#CDOTA_Item_DataDriven"><span class="tocnumber">14</span> <span class="toctext">CDOTA_Item_DataDriven</span></a></li>
<li class="toclevel-1 tocsection-15"><a href="#CDOTA_Unit_Nian"><span class="tocnumber">15</span> <span class="toctext">CDOTA_Unit_Nian</span></a></li>
<li class="toclevel-1 tocsection-16"><a href="#CBasePlayer"><span class="tocnumber">16</span> <span class="toctext">CBasePlayer</span></a></li>
<li class="toclevel-1 tocsection-17"><a href="#CDOTAPlayer"><span class="tocnumber">17</span> <span class="toctext">CDOTAPlayer</span></a></li>
<li class="toclevel-1 tocsection-18"><a href="#CDOTA_PlayerResource"><span class="tocnumber">18</span> <span class="toctext">CDOTA_PlayerResource</span></a></li>
<li class="toclevel-1 tocsection-19"><a href="#CDOTA_BaseNPC"><span class="tocnumber">19</span> <span class="toctext">CDOTA_BaseNPC</span></a></li>
<li class="toclevel-1 tocsection-20"><a href="#CDOTA_BaseNPC_Hero"><span class="tocnumber">20</span> <span class="toctext">CDOTA_BaseNPC_Hero</span></a></li>
<li class="toclevel-1 tocsection-21"><a href="#CDOTA_BaseNPC_Creature"><span class="tocnumber">21</span> <span class="toctext">CDOTA_BaseNPC_Creature</span></a></li>
<li class="toclevel-1 tocsection-22"><a href="#CDOTA_BaseNPC_Building"><span class="tocnumber">22</span> <span class="toctext">CDOTA_BaseNPC_Building</span></a></li>
<li class="toclevel-1 tocsection-23"><a href="#CRPG_Unit"><span class="tocnumber">23</span> <span class="toctext">CRPG_Unit</span></a></li>
<li class="toclevel-1 tocsection-24"><a href="#CDOTABaseGameMode"><span class="tocnumber">24</span> <span class="toctext">CDOTABaseGameMode</span></a></li>
<li class="toclevel-1 tocsection-25"><a href="#CDotaQuest"><span class="tocnumber">25</span> <span class="toctext">CDotaQuest</span></a></li>
<li class="toclevel-1 tocsection-26"><a href="#CDotaSubquestBase"><span class="tocnumber">26</span> <span class="toctext">CDotaSubquestBase</span></a></li>
<li class="toclevel-1 tocsection-27"><a href="#CPhysicsComponent"><span class="tocnumber">27</span> <span class="toctext">CPhysicsComponent</span></a></li>
<li class="toclevel-1 tocsection-28"><a href="#CPointTemplate"><span class="tocnumber">28</span> <span class="toctext">CPointTemplate</span></a></li>
<li class="toclevel-1 tocsection-29"><a href="#CBodyComponent"><span class="tocnumber">29</span> <span class="toctext">CBodyComponent</span></a></li>
<li class="toclevel-1 tocsection-30"><a href="#CBaseAnimating"><span class="tocnumber">30</span> <span class="toctext">CBaseAnimating</span></a></li>
<li class="toclevel-1 tocsection-31"><a href="#CBaseCombatCharacter"><span class="tocnumber">31</span> <span class="toctext">CBaseCombatCharacter</span></a></li>
<li class="toclevel-1 tocsection-32"><a href="#ProjectileManager"><span class="tocnumber">32</span> <span class="toctext">ProjectileManager</span></a></li>
<li class="toclevel-1 tocsection-33"><a href="#CBaseTrigger"><span class="tocnumber">33</span> <span class="toctext">CBaseTrigger</span></a></li>
<li class="toclevel-1 tocsection-34"><a href="#CEnvEntityMaker"><span class="tocnumber">34</span> <span class="toctext">CEnvEntityMaker</span></a></li>
<li class="toclevel-1 tocsection-35"><a href="#CDOTAVoteSystem"><span class="tocnumber">35</span> <span class="toctext">CDOTAVoteSystem</span></a></li>
<li class="toclevel-1 tocsection-36"><a href="#CMarkupVolumeTagged"><span class="tocnumber">36</span> <span class="toctext">CMarkupVolumeTagged</span></a></li>
<li class="toclevel-1 tocsection-37"><a href="#CScriptPrecacheContext"><span class="tocnumber">37</span> <span class="toctext">CScriptPrecacheContext</span></a></li>
<li class="toclevel-1 tocsection-38"><a href="#CScriptKeyValues"><span class="tocnumber">38</span> <span class="toctext">CScriptKeyValues</span></a></li>
<li class="toclevel-1 tocsection-39"><a href="#CScriptParticleManager"><span class="tocnumber">39</span> <span class="toctext">CScriptParticleManager</span></a></li>
<li class="toclevel-1 tocsection-40"><a href="#CScriptHeroList"><span class="tocnumber">40</span> <span class="toctext">CScriptHeroList</span></a></li>
<li class="toclevel-1 tocsection-41"><a href="#CNativeOutputs"><span class="tocnumber">41</span> <span class="toctext">CNativeOutputs</span></a></li>
<li class="toclevel-1 tocsection-42"><a href="#CEnvProjectedTexture"><span class="tocnumber">42</span> <span class="toctext">CEnvProjectedTexture</span></a></li>
<li class="toclevel-1 tocsection-43"><a href="#CInfoData"><span class="tocnumber">43</span> <span class="toctext">CInfoData</span></a></li>
<li class="toclevel-1 tocsection-44"><a href="#CPhysicsProp"><span class="tocnumber">44</span> <span class="toctext">CPhysicsProp</span></a></li>
<li class="toclevel-1 tocsection-45"><a href="#CDOTAGamerules"><span class="tocnumber">45</span> <span class="toctext">CDOTAGamerules</span></a></li>
<li class="toclevel-1 tocsection-46"><a href="#CToneMapControllerComponent"><span class="tocnumber">46</span> <span class="toctext">CToneMapControllerComponent</span></a></li>
<li class="toclevel-1 tocsection-47"><a href="#CDebugOverlayScriptHelper"><span class="tocnumber">47</span> <span class="toctext">CDebugOverlayScriptHelper</span></a></li>
<li class="toclevel-1 tocsection-48"><a href="#CBaseFlex"><span class="tocnumber">48</span> <span class="toctext">CBaseFlex</span></a></li>
<li class="toclevel-1 tocsection-49"><a href="#CSceneEntity"><span class="tocnumber">49</span> <span class="toctext">CSceneEntity</span></a></li>
<li class="toclevel-1 tocsection-50"><a href="#GridNav"><span class="tocnumber">50</span> <span class="toctext">GridNav</span></a></li>
<li class="toclevel-1 tocsection-51"><a href="#Convars"><span class="tocnumber">51</span> <span class="toctext">Convars</span></a></li>
<li class="toclevel-1 tocsection-52"><a href="#Vector"><span class="tocnumber">52</span> <span class="toctext">Vector</span></a></li>
</ul>
</td></tr></tbody></table><script>if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } </script>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=2" title="Edit section: Global">编辑</a>]</span> <span class="mw-headline" id="Global"> Global </span></h3>
<p><i>全局函数，可以任意调用</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.AngleDiff" title="Dota 2 Workshop Tools/Scripting/API/Global.AngleDiff"> AngleDiff</a>
</td><td> <code>float AngleDiff(float ang1, float ang2) </code>
</td><td> 返回两个偏转角之间的角度差值
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.AppendToLogFile" title="Dota 2 Workshop Tools/Scripting/API/Global.AppendToLogFile"> AppendToLogFile</a>
</td><td> <code>void AppendToLogFile(string a, string b) </code>
</td><td> 在服务器日志文件上增加一个<i>string</i>
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.ApplyDamage" title="Dota 2 Workshop Tools/Scripting/API/Global.ApplyDamage"> ApplyDamage</a>
</td><td> <code>float ApplyDamage(handle DamageTable) </code>
</td><td> 对单位造成伤害
<p>Table输入：victim, attacker, damage, damage_type, damage_flags, ability
</p>
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.AxisAngleToQuaternion" title="Dota 2 Workshop Tools/Scripting/API/Global.AxisAngleToQuaternion"> AxisAngleToQuaternion</a>
</td><td> <code>Quaternion AxisAngleToQuaternion(Vector a, float b) </code>
</td><td> (<i>vector</i>,<i>float</i>) 构造一个四元数，表现出围绕给定的<i>vector</i> 轴线的旋转角
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CancelEntityIOEvents" title="Dota 2 Workshop Tools/Scripting/API/Global.CancelEntityIOEvents"> CancelEntityIOEvents</a>
</td><td> <code>void CancelEntityIOEvents(ehandle a) </code>
</td><td> 为特定的实体创建所有输入/输出事件
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CreateEffect" title="Dota 2 Workshop Tools/Scripting/API/Global.CreateEffect"> CreateEffect</a>
</td><td> <code>bool CreateEffect(handle a) </code>
</td><td> 传递<i>table</i> - 输入：实体，效果
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CreateHeroForPlayer" title="Dota 2 Workshop Tools/Scripting/API/Global.CreateHeroForPlayer"> CreateHeroForPlayer</a>
</td><td> <code>handle CreateHeroForPlayer(string a, handle b) </code>
</td><td> 用DOTA英雄的dota_npc_units.txt中的名字创建它并把它设为给定玩家的控制英雄
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CreateItem" title="Dota 2 Workshop Tools/Scripting/API/Global.CreateItem"> CreateItem</a>
</td><td> <code>handle CreateItem(string item_name, handle owner, handle owner) </code>
</td><td> 用类名称<i>item_name</i>创建一个<i>owner</i>可以使用的物品
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CreateItemOnPositionSync" title="Dota 2 Workshop Tools/Scripting/API/Global.CreateItemOnPositionSync"> CreateItemOnPositionSync</a>
</td><td> <code>handle CreateItemOnPositionSync(Vector a, handle b) </code>
</td><td> 在给定位置创建一个可见的物品
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CreateTrigger" title="Dota 2 Workshop Tools/Scripting/API/Global.CreateTrigger"> CreateTrigger</a>
</td><td> <code>handle CreateTrigger(Vector a, Vector b, Vector c) </code>
</td><td> CreateTrigger( vecMin, vecMax )&nbsp;: 创建并返回一个AABB触发器
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CreateTriggerRadiusApproximate" title="Dota 2 Workshop Tools/Scripting/API/Global.CreateTriggerRadiusApproximate"> CreateTriggerRadiusApproximate</a>
</td><td> <code>handle CreateTriggerRadiusApproximate(Vector a, float b) </code>
</td><td> CreateTriggerRadiusApproximate( vecOrigin, flRadius )&nbsp;: 
创建并返回一个比给定radius大的AABB触发器
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CreateUnitByName" title="Dota 2 Workshop Tools/Scripting/API/Global.CreateUnitByName"> CreateUnitByName</a>
</td><td> <code>handle CreateUnitByName(string a, Vector b, bool c, handle d, handle e, int f) </code>
</td><td> 用DOTA单位的dota_npc_units.txt中的名字创建它( 
szUnitName, vLocation, bFindClearSpace, hNPCOwner, hUnitOwner, 
iTeamNumber )
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CreateUnitByNameAsync" title="Dota 2 Workshop Tools/Scripting/API/Global.CreateUnitByNameAsync"> CreateUnitByNameAsync</a>
</td><td> <code>int CreateUnitByNameAsync(string a, Vector b, bool c, handle d, handle e, int f, handle g) </code>
</td><td> 用DOTA单位的dota_npc_units.txt中的名字创建它( 
szUnitName, vLocation, bFindClearSpace, hNPCOwner, hUnitOwner, 
iTeamNumber, hCallback )
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.cvar_getf" title="Dota 2 Workshop Tools/Scripting/API/Global.cvar getf"> cvar_getf</a>
</td><td> <code>float cvar_getf(string a) </code>
</td><td> 获取给定cvar的值，返回<i>float</i>.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.cvar_setf" title="Dota 2 Workshop Tools/Scripting/API/Global.cvar setf"> cvar_setf</a>
</td><td> <code>bool cvar_setf(string a, float b) </code>
</td><td> 设置给定cvar的值, 传递<i>float</i>.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DebugBreak" title="Dota 2 Workshop Tools/Scripting/API/Global.DebugBreak"> DebugBreak</a>
</td><td> <code>void DebugBreak() </code>
</td><td> 在debugger（调试模式）中停止运行
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DebugDrawBox" title="Dota 2 Workshop Tools/Scripting/API/Global.DebugDrawBox"> DebugDrawBox</a>
</td><td> <code>void DebugDrawBox(Vector a, Vector b, Vector c, int d, int e, int f, int g, float h) </code>
</td><td> 显示一个debug overlay窗口(origin, mins, maxs, r, g, b, a, duration )
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DebugDrawBoxDirection" title="Dota 2 Workshop Tools/Scripting/API/Global.DebugDrawBoxDirection"> DebugDrawBoxDirection</a>
</td><td> <code>void DebugDrawBoxDirection(Vector a, Vector b, Vector c, Vector d, Vector e, float f, float g) </code>
</td><td> 显示一个debug forward窗口(cent, min, max, forward, vRgb, a, duration)
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DebugDrawCircle" title="Dota 2 Workshop Tools/Scripting/API/Global.DebugDrawCircle"> DebugDrawCircle</a>
</td><td> <code>void DebugDrawCircle(Vector a, Vector b, float c, float d, bool e, float f) </code>
</td><td> 显示一个debug圆(center, vRgb, a, rad, ztest, duration)
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DebugDrawClear" title="Dota 2 Workshop Tools/Scripting/API/Global.DebugDrawClear"> DebugDrawClear</a>
</td><td> <code>void DebugDrawClear() </code>
</td><td> 尝试清理所有debug overlay信息
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DebugDrawLine" title="Dota 2 Workshop Tools/Scripting/API/Global.DebugDrawLine"> DebugDrawLine</a>
</td><td> <code>void DebugDrawLine(Vector a, Vector b, int c, int d, int e, bool f, float g) </code>
</td><td> 显示一个debug overlay线段origin, target, r, g, b, ztest, duration)
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DebugDrawLine_vCol" title="Dota 2 Workshop Tools/Scripting/API/Global.DebugDrawLine vCol"> DebugDrawLine_vCol</a>
</td><td> <code>void DebugDrawLine_vCol(Vector a, Vector b, Vector c, bool d, float e) </code>
</td><td> 使用vec颜色显示一个debug线段(start, end, vRgb, a, ztest, duration)
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DebugDrawScreenTextLine" title="Dota 2 Workshop Tools/Scripting/API/Global.DebugDrawScreenTextLine"> DebugDrawScreenTextLine</a>
</td><td> <code>void DebugDrawScreenTextLine(float a, float b, int c, string d, int e, int f, int g, int h, float i) </code>
</td><td> 显示给定行间距（lineoffset）的文字(x, y, lineOffset, text, r, g, b, a, duration)
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DebugDrawSphere" title="Dota 2 Workshop Tools/Scripting/API/Global.DebugDrawSphere"> DebugDrawSphere</a>
</td><td> <code>void DebugDrawSphere(Vector a, Vector b, float c, float d, bool e, float f) </code>
</td><td> 显示一个debug球(center, vRgb, a, rad, ztest, duration)
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DebugDrawText" title="Dota 2 Workshop Tools/Scripting/API/Global.DebugDrawText"> DebugDrawText</a>
</td><td> <code>void DebugDrawText(Vector a, string b, bool c, float d) </code>
</td><td> 显示3d文字(origin, text, bViewCheck, duration)
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DebugScreenTextPretty" title="Dota 2 Workshop Tools/Scripting/API/Global.DebugScreenTextPretty"> DebugScreenTextPretty</a>
</td><td> <code>void DebugScreenTextPretty(float a, float b, int c, string d, int e, int f, int g, int h, float i, string j, int k, bool l) </code>
</td><td> 显示漂亮的debug文字(x, y, lineOffset, text, r, g, b, a, duration, font, size, bBold)
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DoEntFire" title="Dota 2 Workshop Tools/Scripting/API/Global.DoEntFire"> DoEntFire</a>
</td><td> <code>void DoEntFire(string a, string b, string c, float d, handle e, handle f) </code>
</td><td> EntFire: 构造一个实体的输入/输出事件( szTarget, szAction, szValue, flDelay, hActivator, hCaller )
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DoEntFireByInstanceHandle" title="Dota 2 Workshop Tools/Scripting/API/Global.DoEntFireByInstanceHandle"> DoEntFireByInstanceHandle</a>
</td><td> <code>void DoEntFireByInstanceHandle(handle a, string b, string c, float d, handle e, handle f) </code>
</td><td> EntFireByHandle:构造一个实体的输入/输出事件
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DoIncludeScript" title="Dota 2 Workshop Tools/Scripting/API/Global.DoIncludeScript"> DoIncludeScript</a>
</td><td> <code>bool DoIncludeScript(string a, handle b) </code>
</td><td> 运行一个内部脚本
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DoScriptAssert" title="Dota 2 Workshop Tools/Scripting/API/Global.DoScriptAssert"> DoScriptAssert</a>
</td><td> <code>void DoScriptAssert(bool a, string b) </code>
</td><td> ScriptAssert:断言传入数据是数值，输出信息并显示断言对话框（参考编程中的Assert功能，主要用于调试，译者注）
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DoUniqueString" title="Dota 2 Workshop Tools/Scripting/API/Global.DoUniqueString"> DoUniqueString</a>
</td><td> <code>string DoUniqueString(string a) </code>
</td><td> UniqueString:使用任意的根字符串构造一个保证在VM脚本运行周期内唯一的字符串。当给表增加数据但不确定已用关键字时有用
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.EmitGlobalSound" title="Dota 2 Workshop Tools/Scripting/API/Global.EmitGlobalSound"> EmitGlobalSound</a>
</td><td> <code>void EmitGlobalSound(string a) </code>
</td><td> 为所有玩家播放给定名称的音效
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.EmitSoundOn" title="Dota 2 Workshop Tools/Scripting/API/Global.EmitSoundOn"> EmitSoundOn</a>
</td><td> <code>void EmitSoundOn(string a, handle b) </code>
</td><td> 在一个实体上播放给定名称的音效
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.EmitSoundOnClient" title="Dota 2 Workshop Tools/Scripting/API/Global.EmitSoundOnClient"> EmitSoundOnClient</a>
</td><td> <code>void EmitSoundOnClient(string a, handle b) </code>
</td><td> 为指定玩家播放给定名称的音效
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.EntIndexToHScript" title="Dota 2 Workshop Tools/Scripting/API/Global.EntIndexToHScript"> EntIndexToHScript</a>
</td><td> <code>handle EntIndexToHScript(int a) </code>
</td><td> 把一个实体的整数索引转化为表达该实体脚本实例的HScript
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.ExecuteOrderFromTable" title="Dota 2 Workshop Tools/Scripting/API/Global.ExecuteOrderFromTable"> ExecuteOrderFromTable</a>
</td><td> <code>void ExecuteOrderFromTable(handle a) </code>
</td><td> 从一个Script表发布命令
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.ExponentialDecay" title="Dota 2 Workshop Tools/Scripting/API/Global.ExponentialDecay"> ExponentialDecay</a>
</td><td> <code>float ExponentialDecay(float a, float b, float c) </code>
</td><td> 平滑的曲线，接近0时减少较慢
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.FileToString" title="Dota 2 Workshop Tools/Scripting/API/Global.FileToString"> FileToString</a>
</td><td> <code>string FileToString(string a) </code>
</td><td> 从文件读取字符串给脚本
<ul><li> 目录遍历似乎无效，字符'.','/'和'\\'被忽略
</li><li> 文件从C:\Program Files (x86)\Steam\steamapps\common\dota 2 beta\dota_ugc\game\dota\ems读取
</li><li> 函数的用途与<a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.StringToFile" title="Dota 2 Workshop Tools/Scripting/API/Global.StringToFile">StringToFile</a>相反
</li></ul>
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.FindClearSpaceForUnit" title="Dota 2 Workshop Tools/Scripting/API/Global.FindClearSpaceForUnit"> FindClearSpaceForUnit</a>
</td><td> <code>void FindClearSpaceForUnit(handle a, Vector b, bool c) </code>
</td><td> 在未被占用的地方创建单位
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.FindUnitsInRadius" title="Dota 2 Workshop Tools/Scripting/API/Global.FindUnitsInRadius"> FindUnitsInRadius</a>
</td><td> <code>table FindUnitsInRadius(int a, Vector b, handle c, float d, int e, int f, int g, int h, bool i) </code>
</td><td> 在给定范围内用给定flags搜索单位( 
iTeamNumber, vPosition, hCacheUnit, flRadius, iTeamFilter, iTypeFilter, 
iFlagFilter, iOrder, bCanGrowCache )
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.FireEntityIOInputNameOnly" title="Dota 2 Workshop Tools/Scripting/API/Global.FireEntityIOInputNameOnly"> FireEntityIOInputNameOnly</a>
</td><td> <code>void FireEntityIOInputNameOnly(ehandle a, string b) </code>
</td><td> 触发实体的动作输入w/no数据
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.FireEntityIOInputString" title="Dota 2 Workshop Tools/Scripting/API/Global.FireEntityIOInputString"> FireEntityIOInputString</a>
</td><td> <code>void FireEntityIOInputString(ehandle a, string b, string c) </code>
</td><td> 用给定字符串（由你分配内存）触发实体的动作输入
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.FireEntityIOInputVec" title="Dota 2 Workshop Tools/Scripting/API/Global.FireEntityIOInputVec"> FireEntityIOInputVec</a>
</td><td> <code>void FireEntityIOInputVec(ehandle a, string b, Vector c) </code>
</td><td> 用给定的<i>Vector</i>( hEntity, szActionName, vector )触发实体的动作输入
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.FireGameEvent" title="Dota 2 Workshop Tools/Scripting/API/Global.FireGameEvent"> FireGameEvent</a>
</td><td> <code>void FireGameEvent(string eventName, handle parameterTable) </code>
</td><td> 触发一个预定义事件，可以在custom_events.txt或dota的资源/*.res中找到
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.FireGameEventLocal" title="Dota 2 Workshop Tools/Scripting/API/Global.FireGameEventLocal"> FireGameEventLocal</a>
</td><td> <code>void FireGameEventLocal(string a, handle b) </code>
</td><td> 触发一个游戏事件但不广播给客户端
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.FrameTime" title="Dota 2 Workshop Tools/Scripting/API/Global.FrameTime"> FrameTime</a>
</td><td> <code>float FrameTime() </code>
</td><td> 获取上一帧在服务器上花费的时间
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetFrameCount" title="Dota 2 Workshop Tools/Scripting/API/Global.GetFrameCount"> GetFrameCount</a>
</td><td> <code>int GetFrameCount() </code>
</td><td> 返回引擎当然的帧数
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetFrostyBoostAmount" title="Dota 2 Workshop Tools/Scripting/API/Global.GetFrostyBoostAmount"> GetFrostyBoostAmount</a>
</td><td> <code>float GetFrostyBoostAmount(int a, int b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetFrostyPointsForRound" title="Dota 2 Workshop Tools/Scripting/API/Global.GetFrostyPointsForRound"> GetFrostyPointsForRound</a>
</td><td> <code>int GetFrostyPointsForRound(int a, int b, int c) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetGoldFrostyBoostAmount" title="Dota 2 Workshop Tools/Scripting/API/Global.GetGoldFrostyBoostAmount"> GetGoldFrostyBoostAmount</a>
</td><td> <code>float GetGoldFrostyBoostAmount(int a, int b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetGoldFrostyPointsForRound" title="Dota 2 Workshop Tools/Scripting/API/Global.GetGoldFrostyPointsForRound"> GetGoldFrostyPointsForRound</a>
</td><td> <code>int GetGoldFrostyPointsForRound(int a, int b, int c) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetGroundPosition" title="Dota 2 Workshop Tools/Scripting/API/Global.GetGroundPosition"> GetGroundPosition</a>
</td><td> <code>Vector GetGroundPosition(Vector a, handle b) </code>
</td><td> 返回移动到地面的供给位置。第二个参数是一个NPC，用于测量碰撞体积
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetListenServerHost" title="Dota 2 Workshop Tools/Scripting/API/Global.GetListenServerHost"> GetListenServerHost</a>
</td><td> <code>handle GetListenServerHost() </code>
</td><td> 在广播服务器获取本地玩家
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetMapName" title="Dota 2 Workshop Tools/Scripting/API/Global.GetMapName"> GetMapName</a>
</td><td> <code>string GetMapName() </code>
</td><td> 获取地图的名字
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetMaxOutputDelay" title="Dota 2 Workshop Tools/Scripting/API/Global.GetMaxOutputDelay"> GetMaxOutputDelay</a>
</td><td> <code>float GetMaxOutputDelay(ehandle a, string b) </code>
</td><td> 获取输出事件的最大延迟
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetPhysAngularVelocity" title="Dota 2 Workshop Tools/Scripting/API/Global.GetPhysAngularVelocity"> GetPhysAngularVelocity</a>
</td><td> <code>Vector GetPhysAngularVelocity(handle a) </code>
</td><td> 获取VPHYS或普通物体的角速度
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetPhysVelocity" title="Dota 2 Workshop Tools/Scripting/API/Global.GetPhysVelocity"> GetPhysVelocity</a>
</td><td> <code>Vector GetPhysVelocity(handle a) </code>
</td><td> 获取VPHYS或普通物体的速度
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetSystemDate" title="Dota 2 Workshop Tools/Scripting/API/Global.GetSystemDate"> GetSystemDate</a>
</td><td> <code>string GetSystemDate() </code>
</td><td> 获取真实世界的日期
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetSystemTime" title="Dota 2 Workshop Tools/Scripting/API/Global.GetSystemTime"> GetSystemTime</a>
</td><td> <code>string GetSystemTime() </code>
</td><td> 获取真实世界的时间
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetWorldMaxX" title="Dota 2 Workshop Tools/Scripting/API/Global.GetWorldMaxX"> GetWorldMaxX</a>
</td><td> <code>float GetWorldMaxX() </code>
</td><td> 获取地图X坐标最大值
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetWorldMaxY" title="Dota 2 Workshop Tools/Scripting/API/Global.GetWorldMaxY"> GetWorldMaxY</a>
</td><td> <code>float GetWorldMaxY() </code>
</td><td> 获取地图Y坐标最大值
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetWorldMinX" title="Dota 2 Workshop Tools/Scripting/API/Global.GetWorldMinX"> GetWorldMinX</a>
</td><td> <code>float GetWorldMinX() </code>
</td><td> 获取地图X坐标最小值
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetWorldMinY" title="Dota 2 Workshop Tools/Scripting/API/Global.GetWorldMinY"> GetWorldMinY</a>
</td><td> <code>float GetWorldMinY() </code>
</td><td> 获取地图Y坐标最小值
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.InitLogFile" title="Dota 2 Workshop Tools/Scripting/API/Global.InitLogFile"> InitLogFile</a>
</td><td> <code>void InitLogFile(string a, string b) </code>
</td><td> 如果给定文件不存在，用给定内容创建它；如果存在则不做任何动作
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.IsDedicatedServer" title="Dota 2 Workshop Tools/Scripting/API/Global.IsDedicatedServer"> IsDedicatedServer</a>
</td><td> <code>bool IsDedicatedServer() </code>
</td><td> 如果服务器开放返回true
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.IsMarkedForDeletion" title="Dota 2 Workshop Tools/Scripting/API/Global.IsMarkedForDeletion"> IsMarkedForDeletion</a>
</td><td> <code>bool IsMarkedForDeletion(handle a) </code>
</td><td> 如果实体有效并被标记为删除返回true
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.IsValidEntity" title="Dota 2 Workshop Tools/Scripting/API/Global.IsValidEntity"> IsValidEntity</a>
</td><td> <code>bool IsValidEntity(handle a) </code>
</td><td> 检查给定hScript是否为有效实体
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.ListenToGameEvent" title="Dota 2 Workshop Tools/Scripting/API/Global.ListenToGameEvent"> ListenToGameEvent</a>
</td><td> <code>int ListenToGameEvent(string EventName, handle functionNameToCall, handle context) </code>
</td><td> 从脚本给游戏事件注册一个listner
<div style="margin:0.4em 1em 0.5em;"><strong style="display:table-cell;text-align:right;white-space:nowrap;padding-right:0.3em;"><img alt="" src="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/Tip.png" height="13" width="10"> Tip:</strong><span style="display:table-cell;">另外，为listen<a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/Built-In_Engine_Events" title="Dota 2 Workshop Tools/Scripting/Built-In Engine Events">standard engine events</a>,你也可以创建自己的事件，把它们放置在/scripts/custom_events.txt.</span></div>
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.LoadKeyValues" title="Dota 2 Workshop Tools/Scripting/API/Global.LoadKeyValues"> LoadKeyValues</a>
</td><td> <code>table LoadKeyValues(string a) </code>
</td><td> 用给定的关键字文件创建<i>table</i>
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.LoadKeyValuesFromString" title="Dota 2 Workshop Tools/Scripting/API/Global.LoadKeyValuesFromString"> LoadKeyValuesFromString</a>
</td><td> <code>table LoadKeyValuesFromString(string a) </code>
</td><td> 用给定的关键字<i>string</i>创建<i>table</i>
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.MakeStringToken" title="Dota 2 Workshop Tools/Scripting/API/Global.MakeStringToken"> MakeStringToken</a>
</td><td> <code>int MakeStringToken(string a) </code>
</td><td> 检查给定的hScript是否是有效实体（？）
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.Msg" title="Dota 2 Workshop Tools/Scripting/API/Global.Msg"> Msg</a>
</td><td> <code>void Msg(string a) </code>
</td><td> 输出信息
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PauseGame" title="Dota 2 Workshop Tools/Scripting/API/Global.PauseGame"> PauseGame</a>
</td><td> <code>void PauseGame(bool a) </code>
</td><td> 暂停/开始游戏
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PlayerInstanceFromIndex" title="Dota 2 Workshop Tools/Scripting/API/Global.PlayerInstanceFromIndex"> PlayerInstanceFromIndex</a>
</td><td> <code>handle PlayerInstanceFromIndex(int a) </code>
</td><td> 通过索引获取玩家的脚本实例
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PrecacheEntityFromTable" title="Dota 2 Workshop Tools/Scripting/API/Global.PrecacheEntityFromTable"> PrecacheEntityFromTable</a>
</td><td> <code>void PrecacheEntityFromTable(string a, handle b, handle c) </code>
</td><td> 用关键字从<i>table</i>中预缓存一个实体
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PrecacheEntityListFromTable" title="Dota 2 Workshop Tools/Scripting/API/Global.PrecacheEntityListFromTable"> PrecacheEntityListFromTable</a>
</td><td> <code>void PrecacheEntityListFromTable(handle a, handle b) </code>
</td><td> 预缓存一个实体关键字列表
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PrecacheItemByNameAsync" title="Dota 2 Workshop Tools/Scripting/API/Global.PrecacheItemByNameAsync"> PrecacheItemByNameAsync</a>
</td><td> <code>void PrecacheItemByNameAsync(string a, handle b) </code>
</td><td> 用DOTA物品的dota_npc_items.txt名称异步预缓存它,结束时提供回调
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PrecacheItemByNameSync" title="Dota 2 Workshop Tools/Scripting/API/Global.PrecacheItemByNameSync"> PrecacheItemByNameSync</a>
</td><td> <code>void PrecacheItemByNameSync(string a, handle b) </code>
</td><td> 用DOTA物品的dota_npc_items.txt名称预缓存它
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PrecacheModel" title="Dota 2 Workshop Tools/Scripting/API/Global.PrecacheModel"> PrecacheModel</a>
</td><td> <code>void PrecacheModel(string a, handle b) </code>
</td><td> ( modelName, context ) - 手动预缓存一个单一模型
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PrecacheResource" title="Dota 2 Workshop Tools/Scripting/API/Global.PrecacheResource"> PrecacheResource</a>
</td><td> <code>void PrecacheResource(string a, string b, handle c) </code>
</td><td> 手动预缓存一个单一资源
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PrecacheUnitByNameAsync" title="Dota 2 Workshop Tools/Scripting/API/Global.PrecacheUnitByNameAsync"> PrecacheUnitByNameAsync</a>
</td><td> <code>void PrecacheUnitByNameAsync(string a, handle b) </code>
</td><td> 用DOTA单位的dota_npc_units.txt名称异步预缓存它,结束时提供回调
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PrecacheUnitByNameSync" title="Dota 2 Workshop Tools/Scripting/API/Global.PrecacheUnitByNameSync"> PrecacheUnitByNameSync</a>
</td><td> <code>void PrecacheUnitByNameSync(string a, handle b) </code>
</td><td> 用DOTA单位的dota_npc_units.txt名称预缓存它
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PrintLinkedConsoleMessage" title="Dota 2 Workshop Tools/Scripting/API/Global.PrintLinkedConsoleMessage"> PrintLinkedConsoleMessage</a>
</td><td> <code>void PrintLinkedConsoleMessage(string a, string b) </code>
</td><td> Print a console message with a linked console command
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.RandomFloat" title="Dota 2 Workshop Tools/Scripting/API/Global.RandomFloat"> RandomFloat</a>
</td><td> <code>float RandomFloat(float a, float b) </code>
</td><td> 获取范围内随机<i>float</i>
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.RandomInt" title="Dota 2 Workshop Tools/Scripting/API/Global.RandomInt"> RandomInt</a>
</td><td> <code>int RandomInt(int a, int b) </code>
</td><td> 获取范围内随机<i>int</i>
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.RandomVector" title="Dota 2 Workshop Tools/Scripting/API/Global.RandomVector"> RandomVector</a>
</td><td> <code>Vector RandomVector(float maxLength) </code>
</td><td> 获取随机二维矢量
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.RegisterSpawnGroupFilterProxy" title="Dota 2 Workshop Tools/Scripting/API/Global.RegisterSpawnGroupFilterProxy"> RegisterSpawnGroupFilterProxy</a>
</td><td> <code>void RegisterSpawnGroupFilterProxy(string a) </code>
</td><td> 为一个脚本基础的生成单位过滤器创建一个C代理
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.ReloadMOTD" title="Dota 2 Workshop Tools/Scripting/API/Global.ReloadMOTD"> ReloadMOTD</a>
</td><td> <code>void ReloadMOTD() </code>
</td><td> 重载MotD文件
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.RemoveSpawnGroupFilterProxy" title="Dota 2 Workshop Tools/Scripting/API/Global.RemoveSpawnGroupFilterProxy"> RemoveSpawnGroupFilterProxy</a>
</td><td> <code>void RemoveSpawnGroupFilterProxy(string a) </code>
</td><td> 为一个脚本基础的生成单位过滤器删除一个C代理
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.RollPercentage" title="Dota 2 Workshop Tools/Scripting/API/Global.RollPercentage"> RollPercentage</a>
</td><td> <code>bool RollPercentage(int a) </code>
</td><td> 随机生成1-100内的数，小于等于给定数则返回true
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.RotateOrientation" title="Dota 2 Workshop Tools/Scripting/API/Global.RotateOrientation"> RotateOrientation</a>
</td><td> <code>QAngle RotateOrientation(QAngle a, QAngle b) </code>
</td><td> 旋转一个<i>QAngle</i>，用另一个<i>QAngle</i>
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.RotatePosition" title="Dota 2 Workshop Tools/Scripting/API/Global.RotatePosition"> RotatePosition</a>
</td><td> <code>Vector RotatePosition(Vector a, QAngle b, Vector c) </code>
</td><td> 围绕点旋转一个<i>Vector</i>
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.RotateQuaternionByAxisAngle" title="Dota 2 Workshop Tools/Scripting/API/Global.RotateQuaternionByAxisAngle"> RotateQuaternionByAxisAngle</a>
</td><td> <code>Quaternion RotateQuaternionByAxisAngle(Quaternion a, Vector b, float c) </code>
</td><td> 围绕给定<i>vector</i>轴线旋转一个四元数
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.RotationDelta" title="Dota 2 Workshop Tools/Scripting/API/Global.RotationDelta"> RotationDelta</a>
</td><td> <code>QAngle RotationDelta(QAngle a, QAngle b) </code>
</td><td> 两个<i>QAngle</i>间的delta值
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.rr_AddDecisionRule" title="Dota 2 Workshop Tools/Scripting/API/Global.rr AddDecisionRule"> rr_AddDecisionRule</a>
</td><td> <code>bool rr_AddDecisionRule(handle a) </code>
</td><td> 给决定数据库增加一个规则
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.rr_CommitAIResponse" title="Dota 2 Workshop Tools/Scripting/API/Global.rr CommitAIResponse"> rr_CommitAIResponse</a>
</td><td> <code>bool rr_CommitAIResponse(handle a, handle b) </code>
</td><td> 把QueryBestResponse的结果交付给定的实体播放，用参数调用(entity, airesponse)
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.rr_GetResponseTargets" title="Dota 2 Workshop Tools/Scripting/API/Global.rr GetResponseTargets"> rr_GetResponseTargets</a>
</td><td> <code>handle rr_GetResponseTargets() </code>
</td><td> 获取所有提供的表达者目标的<i>table</i>，格式为{ name&nbsp;: <i>handle</i>, name: <i>handle</i> }.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.rr_QueryBestResponse" title="Dota 2 Workshop Tools/Scripting/API/Global.rr QueryBestResponse"> rr_QueryBestResponse</a>
</td><td> <code>bool rr_QueryBestResponse(handle a, handle b, handle c) </code>
</td><td> 参数: ( hEnt, hQuery, hResult ) // 静态&nbsp;: 对实体的回复系统测试
'query'并返回最佳回复(无回复返回<i>nil</i>)
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.Say" title="Dota 2 Workshop Tools/Scripting/API/Global.Say"> Say</a>
</td><td> <code>void Say(handle entity, string message, bool teamOnly) </code>
</td><td> 让实体说<i>string</i>,是否仅限队友可见
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.ScreenShake" title="Dota 2 Workshop Tools/Scripting/API/Global.ScreenShake"> ScreenShake</a>
</td><td> <code>void ScreenShake(Vector a, float b, float c, float d, float e, int f, bool g) </code>
</td><td> 用下列参数开始镜头摇晃：vecCenter, 
flAmplitude, flFrequency, flDuration, flRadius, eCommand( SHAKE_START = 
0, SHAKE_STOP = 1 ), bAirShake
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SendFrostivusTimeElapsedToGC" title="Dota 2 Workshop Tools/Scripting/API/Global.SendFrostivusTimeElapsedToGC"> SendFrostivusTimeElapsedToGC</a>
</td><td> <code>void SendFrostivusTimeElapsedToGC() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SendFrostyPointsMessageToGC" title="Dota 2 Workshop Tools/Scripting/API/Global.SendFrostyPointsMessageToGC"> SendFrostyPointsMessageToGC</a>
</td><td> <code>void SendFrostyPointsMessageToGC(handle a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SendToConsole" title="Dota 2 Workshop Tools/Scripting/API/Global.SendToConsole"> SendToConsole</a>
</td><td> <code>void SendToConsole(string a) </code>
</td><td> 给控制台发送<i>string</i>作为客户端命令
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SendToServerConsole" title="Dota 2 Workshop Tools/Scripting/API/Global.SendToServerConsole"> SendToServerConsole</a>
</td><td> <code>void SendToServerConsole(string a) </code>
</td><td> 给控制台发送<i>string</i>作为服务器命令
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SetOpvarFloatAll" title="Dota 2 Workshop Tools/Scripting/API/Global.SetOpvarFloatAll"> SetOpvarFloatAll</a>
</td><td> <code>void SetOpvarFloatAll(string a, string b, string c, float d) </code>
</td><td> 为所有玩家设置opvar值
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SetOpvarFloatPlayer" title="Dota 2 Workshop Tools/Scripting/API/Global.SetOpvarFloatPlayer"> SetOpvarFloatPlayer</a>
</td><td> <code>void SetOpvarFloatPlayer(string a, string b, string c, float d, handle e) </code>
</td><td> 为单一玩家设置opvar值( szStackName, szOperatorName, szOpvarName, flOpvarValue, hEnt )
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SetQuestName" title="Dota 2 Workshop Tools/Scripting/API/Global.SetQuestName"> SetQuestName</a>
</td><td> <code>void SetQuestName(string a) </code>
</td><td> 设置当前任务名
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SetQuestPhase" title="Dota 2 Workshop Tools/Scripting/API/Global.SetQuestPhase"> SetQuestPhase</a>
</td><td> <code>void SetQuestPhase(int a) </code>
</td><td> 设置当前任务阶段
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SetRenderingEnabled" title="Dota 2 Workshop Tools/Scripting/API/Global.SetRenderingEnabled"> SetRenderingEnabled</a>
</td><td> <code>void SetRenderingEnabled(ehandle a, bool b) </code>
</td><td> 为<i>ehandle</i>设置rendering（渲染）开/关
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.ShowGenericPopup" title="Dota 2 Workshop Tools/Scripting/API/Global.ShowGenericPopup"> ShowGenericPopup</a>
</td><td> <code>void ShowGenericPopup(string title, string content, string unknown, string unknown, int containerType) </code>
</td><td> 对所有玩家显示通用的弹出窗口
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.ShowGenericPopupToPlayer" title="Dota 2 Workshop Tools/Scripting/API/Global.ShowGenericPopupToPlayer"> ShowGenericPopupToPlayer</a>
</td><td> <code>void ShowGenericPopupToPlayer(handle a, string b, string c, string d, string e, int f) </code>
</td><td> 对给定玩家显示通用的弹出窗口
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.ShowMessage" title="Dota 2 Workshop Tools/Scripting/API/Global.ShowMessage"> ShowMessage</a>
</td><td> <code>void ShowMessage(string a) </code>
</td><td> 在所有客户端显示hud信息
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SpawnEntityFromTableSynchronous" title="Dota 2 Workshop Tools/Scripting/API/Global.SpawnEntityFromTableSynchronous"> SpawnEntityFromTableSynchronous</a>
</td><td> <code>handle SpawnEntityFromTableSynchronous(string a, handle b) </code>
</td><td> 从<i>table</i>同步生成一个实体
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SpawnEntityGroupFromTable" title="Dota 2 Workshop Tools/Scripting/API/Global.SpawnEntityGroupFromTable"> SpawnEntityGroupFromTable</a>
</td><td> <code>bool SpawnEntityGroupFromTable(handle groupSpawnTables, bool bAsync, handle hCallback) </code>
</td><td> 从一系列生成表中分级生成一个实体组
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SpawnEntityListFromTableAsynchronous" title="Dota 2 Workshop Tools/Scripting/API/Global.SpawnEntityListFromTableAsynchronous"> SpawnEntityListFromTableAsynchronous</a>
</td><td> <code>int SpawnEntityListFromTableAsynchronous(handle a, handle b) </code>
</td><td> 从一个生成表列表异步生成一个实体组，生成完成后会触发一次回调
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SpawnEntityListFromTableSynchronous" title="Dota 2 Workshop Tools/Scripting/API/Global.SpawnEntityListFromTableSynchronous"> SpawnEntityListFromTableSynchronous</a>
</td><td> <code>handle SpawnEntityListFromTableSynchronous(handle a) </code>
</td><td> 从一个生成表列表同步生成一个实体组.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SplineQuaternions" title="Dota 2 Workshop Tools/Scripting/API/Global.SplineQuaternions"> SplineQuaternions</a>
</td><td> <code>Quaternion SplineQuaternions(Quaternion a, Quaternion b, float c) </code>
</td><td> (quaternion,quaternion,<i>float</i>)非常基础的v0到v1差值，t属于[0,1]为参数
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SplineVectors" title="Dota 2 Workshop Tools/Scripting/API/Global.SplineVectors"> SplineVectors</a>
</td><td> <code>Vector SplineVectors(Vector a, Vector b, float c) </code>
</td><td> (<i>vector</i>,<i>vector</i>,<i>float</i>)非常基础的v0到v1差值，t属于[0,1]为参数
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.StartSoundEvent" title="Dota 2 Workshop Tools/Scripting/API/Global.StartSoundEvent"> StartSoundEvent</a>
</td><td> <code>void StartSoundEvent(string a, handle b) </code>
</td><td> 开始音效事件
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.StopEffect" title="Dota 2 Workshop Tools/Scripting/API/Global.StopEffect"> StopEffect</a>
</td><td> <code>void StopEffect(handle a, string b) </code>
</td><td> (hEntity, szEffectName)
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.StopListeningToAllGameEvents" title="Dota 2 Workshop Tools/Scripting/API/Global.StopListeningToAllGameEvents"> StopListeningToAllGameEvents</a>
</td><td> <code>void StopListeningToAllGameEvents(handle a) </code>
</td><td> 停止listen在给定内容内的所有游戏事件
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.StopListeningToGameEvent" title="Dota 2 Workshop Tools/Scripting/API/Global.StopListeningToGameEvent"> StopListeningToGameEvent</a>
</td><td> <code>bool StopListeningToGameEvent(int a) </code>
</td><td> 停止listen特定的游戏事件
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.StopSoundEvent" title="Dota 2 Workshop Tools/Scripting/API/Global.StopSoundEvent"> StopSoundEvent</a>
</td><td> <code>void StopSoundEvent(string a, handle b) </code>
</td><td> 停止音效事件
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.StopSoundOn" title="Dota 2 Workshop Tools/Scripting/API/Global.StopSoundOn"> StopSoundOn</a>
</td><td> <code>void StopSoundOn(string soundName, handle playingEntity) </code>
</td><td> 停止实体上的命名音效
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.StringToFile" title="Dota 2 Workshop Tools/Scripting/API/Global.StringToFile"> StringToFile</a>
</td><td> <code>bool StringToFile(string a, string b) </code>
</td><td> * 目录遍历似乎无效，字符'.','/'和'\\'被忽略
<ul><li> 文件名不能为空，也不能包含忽略字符，否则函数无效并返回false
</li><li> 一次只能保存一个字符串，每次调用文件都被覆盖
</li><li> 文件以一个NUL字符结尾
</li><li> 文件被保存在C:\Program Files (x86)\Steam\steamapps\common\dota 2 beta\dota_ugc\game\dota\ems
</li><li> 函数用途与<a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.FileToString" title="Dota 2 Workshop Tools/Scripting/API/Global.FileToString">FileToString</a>相反
</li></ul>
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.Time" title="Dota 2 Workshop Tools/Scripting/API/Global.Time"> Time</a>
</td><td> <code>float Time() </code>
</td><td> 获取当前服务器时间
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.TraceCollideable" title="Dota 2 Workshop Tools/Scripting/API/Global.TraceCollideable"> TraceCollideable</a>
</td><td> <code>bool TraceCollideable(handle a) </code>
</td><td> 传递<i>table</i> - 输入: start, end, ent, (可选 mins, maxs) -- 输出: pos, fraction, hit, startsolid, normal
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.TraceHull" title="Dota 2 Workshop Tools/Scripting/API/Global.TraceHull"> TraceHull</a>
</td><td> <code>bool TraceHull(handle a) </code>
</td><td> 传递<i>table</i> - 输入: start, end, min, max, mask, ignore  -- 输出: pos, fraction, hit, enthit, startsolid
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.TraceLine" title="Dota 2 Workshop Tools/Scripting/API/Global.TraceLine"> TraceLine</a>
</td><td> <code>bool TraceLine(handle a) </code>
</td><td> Pass <i>table</i> - 输入: startpos, endpos, mask, ignore  -- 输出: pos, fraction, hit, enthit, startsolid
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.UnloadSpawnGroup" title="Dota 2 Workshop Tools/Scripting/API/Global.UnloadSpawnGroup"> UnloadSpawnGroup</a>
</td><td> <code>void UnloadSpawnGroup(string a) </code>
</td><td> 通过名称去除生成组
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.UnloadSpawnGroupByHandle" title="Dota 2 Workshop Tools/Scripting/API/Global.UnloadSpawnGroupByHandle"> UnloadSpawnGroupByHandle</a>
</td><td> <code>void UnloadSpawnGroupByHandle(int a) </code>
</td><td> 通过<i>handle</i>去除生成组
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.UpdateEventPoints" title="Dota 2 Workshop Tools/Scripting/API/Global.UpdateEventPoints"> UpdateEventPoints</a>
</td><td> <code>void UpdateEventPoints(handle a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.UTIL_Remove" title="Dota 2 Workshop Tools/Scripting/API/Global.UTIL Remove"> UTIL_Remove</a>
</td><td> <code>void UTIL_Remove(handle a) </code>
</td><td> 删除给定实体
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.UTIL_RemoveImmediate" title="Dota 2 Workshop Tools/Scripting/API/Global.UTIL RemoveImmediate"> UTIL_RemoveImmediate</a>
</td><td> <code>void UTIL_RemoveImmediate(handle a) </code>
</td><td> 立即删除给定实体
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.VectorToAngles" title="Dota 2 Workshop Tools/Scripting/API/Global.VectorToAngles"> VectorToAngles</a>
</td><td> <code>QAngle VectorToAngles(Vector a) </code>
</td><td> 为<i>Vector</i>获取Qangle（没有滚动）
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.Warning" title="Dota 2 Workshop Tools/Scripting/API/Global.Warning"> Warning</a>
</td><td> <code>void Warning(string a) </code>
</td><td> 输出警告
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=3" title="Edit section: CBaseEntity">编辑</a>]</span> <span class="mw-headline" id="CBaseEntity"> CBaseEntity </span></h3>
<p><i>The base class for stuff</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.ApplyAbsVelocityImpulse" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.ApplyAbsVelocityImpulse"> ApplyAbsVelocityImpulse</a>
</td><td> <code>void ApplyAbsVelocityImpulse(Vector a) </code>
</td><td> Apply a Velocity Impulse
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.ApplyLocalAngularVelocityImpulse" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.ApplyLocalAngularVelocityImpulse"> ApplyLocalAngularVelocityImpulse</a>
</td><td> <code>void ApplyLocalAngularVelocityImpulse(Vector a) </code>
</td><td> Apply an Ang Velocity Impulse
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.EmitSound" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.EmitSound"> EmitSound</a>
</td><td> <code>void EmitSound(string soundName) </code>
</td><td>
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.EmitSoundParams" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.EmitSoundParams"> EmitSoundParams</a>
</td><td> <code>void EmitSoundParams(string soundName, int pitch, float volume, float soundTime) </code>
</td><td> Plays/modifies a sound from this entity. changes sound if Pitch and/or Volume or SoundTime is &gt; 0.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.EyeAngles" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.EyeAngles"> EyeAngles</a>
</td><td> <code>QAngle EyeAngles() </code>
</td><td> Get the qangles that this entity is looking at.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.EyePosition" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.EyePosition"> EyePosition</a>
</td><td> <code>Vector EyePosition() </code>
</td><td> Get <i>vector</i> to eye position - absolute coords
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.FirstMoveChild" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.FirstMoveChild"> FirstMoveChild</a>
</td><td> <code>handle FirstMoveChild() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GatherCriteria" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GatherCriteria"> GatherCriteria</a>
</td><td> <code>void GatherCriteria(handle a) </code>
</td><td> Returns a <i>table</i> containing the criteria that would be used for response queries on this entity. This is the same as the <i>table</i> that is passed to response rule script function callbacks.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetAbsOrigin" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetAbsOrigin"> GetAbsOrigin</a>
</td><td> <code>Vector GetAbsOrigin() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetAngles" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetAngles"> GetAngles</a>
</td><td> <code>QAngle GetAngles() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetAnglesAsVector" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetAnglesAsVector"> GetAnglesAsVector</a>
</td><td> <code>Vector GetAnglesAsVector() </code>
</td><td> Get entity pitch, yaw, roll as a <i>vector</i>
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetAngularVelocity" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetAngularVelocity"> GetAngularVelocity</a>
</td><td> <code>Vector GetAngularVelocity() </code>
</td><td> Get the local angular velocity - returns a <i>vector</i> of pitch,yaw,roll
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetBaseVelocity" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetBaseVelocity"> GetBaseVelocity</a>
</td><td> <code>Vector GetBaseVelocity() </code>
</td><td> Get Base velocity
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetBoundingMaxs" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetBoundingMaxs"> GetBoundingMaxs</a>
</td><td> <code>Vector GetBoundingMaxs() </code>
</td><td> Get a <i>vector</i> containing max bounds, centered on object
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetBoundingMins" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetBoundingMins"> GetBoundingMins</a>
</td><td> <code>Vector GetBoundingMins() </code>
</td><td> Get a <i>vector</i> containing min bounds, centered on object
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetBounds" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetBounds"> GetBounds</a>
</td><td> <code>table GetBounds() </code>
</td><td> Get a <i>table</i> containing the 'Mins' &amp; 'Maxs' <i>vector</i> bounds, centered on object
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetCenter" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetCenter"> GetCenter</a>
</td><td> <code>Vector GetCenter() </code>
</td><td> Get <i>vector</i> to center of object - absolute coords
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetChildren" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetChildren"> GetChildren</a>
</td><td> <code>handle GetChildren() </code>
</td><td> Get the entities parented to this entity.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetContext" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetContext"> GetContext</a>
</td><td> <code>table GetContext(string a) </code>
</td><td> GetContext( name ): looks up a context and returns it if available. May return <i>string</i>, <i>float</i>, or <i>nil</i> (if the context isn't found)
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetForwardVector" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetForwardVector"> GetForwardVector</a>
</td><td> <code>Vector GetForwardVector() </code>
</td><td> Get the forward <i>vector</i> of the entity
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetHealth" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetHealth"> GetHealth</a>
</td><td> <code>int GetHealth() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetLocalAngularVelocity" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetLocalAngularVelocity"> GetLocalAngularVelocity</a>
</td><td> <code>QAngle GetLocalAngularVelocity() </code>
</td><td> Maybe local angvel
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetLocalVelocity" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetLocalVelocity"> GetLocalVelocity</a>
</td><td> <code>Vector GetLocalVelocity() </code>
</td><td> Get Entity relative velocity
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetMaxHealth" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetMaxHealth"> GetMaxHealth</a>
</td><td> <code>int GetMaxHealth() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetModelName" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetModelName"> GetModelName</a>
</td><td> <code>string GetModelName() </code>
</td><td> Returns the name of the model
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetMoveParent" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetMoveParent"> GetMoveParent</a>
</td><td> <code>handle GetMoveParent() </code>
</td><td> If in hierarchy, retrieves the entity's parent
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetOrigin" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetOrigin"> GetOrigin</a>
</td><td> <code>Vector GetOrigin() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetOwner" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetOwner"> GetOwner</a>
</td><td> <code>handle GetOwner() </code>
</td><td> Gets this entity's owner
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetOwnerEntity" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetOwnerEntity"> GetOwnerEntity</a>
</td><td> <code>handle GetOwnerEntity() </code>
</td><td> Get the owner entity, if there is one
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetRightVector" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetRightVector"> GetRightVector</a>
</td><td> <code>Vector GetRightVector() </code>
</td><td> Get the right <i>vector</i> of the entity
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetRootMoveParent" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetRootMoveParent"> GetRootMoveParent</a>
</td><td> <code>handle GetRootMoveParent() </code>
</td><td> If in hierarchy, walks up the hierarchy to find the root parent
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetSoundDuration" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetSoundDuration"> GetSoundDuration</a>
</td><td> <code>float GetSoundDuration(string soundName, string actormodelname) </code>
</td><td> Returns <i>float</i> duration of the sound. Takes soundname and optional actormodelname.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetTeam" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetTeam"> GetTeam</a>
</td><td> <code>int GetTeam() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetUpVector" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetUpVector"> GetUpVector</a>
</td><td> <code>Vector GetUpVector() </code>
</td><td> Get the up <i>vector</i> of the entity
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetVelocity" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.GetVelocity"> GetVelocity</a>
</td><td> <code>Vector GetVelocity() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.IsAlive" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.IsAlive"> IsAlive</a>
</td><td> <code>bool IsAlive() </code>
</td><td> 无.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.IsPlayer" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.IsPlayer"> IsPlayer</a>
</td><td> <code>bool IsPlayer() </code>
</td><td> Is this a player entity?
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.Kill" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.Kill"> Kill</a>
</td><td> <code>void Kill() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.NextMovePeer" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.NextMovePeer"> NextMovePeer</a>
</td><td> <code>handle NextMovePeer() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.OverrideFriction" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.OverrideFriction"> OverrideFriction</a>
</td><td> <code>void OverrideFriction(float a, float b) </code>
</td><td> Takes duration, value for a temporary override
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.PrecacheScriptSound" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.PrecacheScriptSound"> PrecacheScriptSound</a>
</td><td> <code>void PrecacheScriptSound(string a) </code>
</td><td> Precache a sound for later playing.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetAbsOrigin" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.SetAbsOrigin"> SetAbsOrigin</a>
</td><td> <code>void SetAbsOrigin(Vector origin) </code>
</td><td> SetAbsOrigin
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetAngles" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.SetAngles"> SetAngles</a>
</td><td> <code>void SetAngles(float pitch, float yaw, float roll) </code>
</td><td> Set entity pitch, yaw, roll
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetAngularVelocity" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.SetAngularVelocity"> SetAngularVelocity</a>
</td><td> <code>void SetAngularVelocity(float pitch, float yaw, float roll) </code>
</td><td> Set the local angular velocity - takes <i>float</i> pitch,yaw,roll velocities
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetContext" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.SetContext"> SetContext</a>
</td><td> <code>void SetContext(string a, string b, float c) </code>
</td><td> SetContext( name , value, duration ): store any key/value pair in this entity's dialog contexts. Value must be a <i>string</i>. Will last for duration (set 0 to mean 'forever').
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetContextNum" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.SetContextNum"> SetContextNum</a>
</td><td> <code>void SetContextNum(string a, float b, float c) </code>
</td><td> SetContext( name , value, duration ): store any key/value pair in this entity's dialog contexts. Value must be a number (<i>int</i> or <i>float</i>). Will last for duration (set 0 to mean 'forever').
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetContextThink" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.SetContextThink"> SetContextThink</a>
</td><td> <code>void SetContextThink(string a, handle b, float c) </code>
</td><td> Set a think function on this entity.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetForwardVector" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.SetForwardVector"> SetForwardVector</a>
</td><td> <code>void SetForwardVector(Vector forwardVec) </code>
</td><td> Set the orientation of the entity to have this forward <i>forwardVec</i>
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetFriction" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.SetFriction"> SetFriction</a>
</td><td> <code>void SetFriction(float a) </code>
</td><td> Set PLAYER friction, ignored for objects
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetGravity" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.SetGravity"> SetGravity</a>
</td><td> <code>void SetGravity(float a) </code>
</td><td> Set PLAYER gravity, ignored for objects
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetHealth" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.SetHealth"> SetHealth</a>
</td><td> <code>void SetHealth(int hp) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetMaxHealth" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.SetMaxHealth"> SetMaxHealth</a>
</td><td> <code>void SetMaxHealth(int maxHP) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetModel" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.SetModel"> SetModel</a>
</td><td> <code>void SetModel(string modelName) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetOrigin" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.SetOrigin"> SetOrigin</a>
</td><td> <code>void SetOrigin(Vector origin) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetOwner" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.SetOwner"> SetOwner</a>
</td><td> <code>void SetOwner(handle owningEntity) </code>
</td><td> Sets this entity's owner
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetParent" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.SetParent"> SetParent</a>
</td><td> <code>void SetParent(handle a, string b) </code>
</td><td> Set the parent for this entity.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetRenderColor" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.SetRenderColor"> SetRenderColor</a>
</td><td> <code>void SetRenderColor(int a, int b, int c) </code>
</td><td> SetRenderColor( r, g, b ): Sets the render color of the entity.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetSize" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.SetSize"> SetSize</a>
</td><td> <code>void SetSize(Vector a, Vector b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetTeam" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.SetTeam"> SetTeam</a>
</td><td> <code>void SetTeam(int team) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetVelocity" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.SetVelocity"> SetVelocity</a>
</td><td> <code>void SetVelocity(Vector a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.StopSound" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.StopSound"> StopSound</a>
</td><td> <code>void StopSound(string soundName) </code>
</td><td> Stops a named sound playing from this entity.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.Trigger" title="Dota 2 Workshop Tools/Scripting/API/CBaseEntity.Trigger"> Trigger</a>
</td><td> <code>void Trigger() </code>
</td><td> Fires off this entity's OnTrigger responses
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=4" title="Edit section: CEntities">编辑</a>]</span> <span class="mw-headline" id="CEntities"> CEntities </span></h3>
<p><i>无</i>
</p><p><i>全局变量:</i> <code>Entities</code>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntities.CreateByClassname" title="Dota 2 Workshop Tools/Scripting/API/CEntities.CreateByClassname"> CreateByClassname</a>
</td><td> <code>handle CreateByClassname(string className) </code>
</td><td> Creates an entity by classname
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntities.FindAllByClassname" title="Dota 2 Workshop Tools/Scripting/API/CEntities.FindAllByClassname"> FindAllByClassname</a>
</td><td> <code>table FindAllByClassname(string a) </code>
</td><td> Finds all entities by class name. Returns an array containing all the found entities.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntities.FindAllByClassnameWithin" title="Dota 2 Workshop Tools/Scripting/API/CEntities.FindAllByClassnameWithin"> FindAllByClassnameWithin</a>
</td><td> <code>table FindAllByClassnameWithin(string a, Vector b, float c) </code>
</td><td> Find entities by class name within a radius.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntities.FindAllByModel" title="Dota 2 Workshop Tools/Scripting/API/CEntities.FindAllByModel"> FindAllByModel</a>
</td><td> <code>table FindAllByModel(string modelName) </code>
</td><td> Find entities by model name.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntities.FindAllByName" title="Dota 2 Workshop Tools/Scripting/API/CEntities.FindAllByName"> FindAllByName</a>
</td><td> <code>table FindAllByName(string name) </code>
</td><td> Find all entities by name. Returns an array containing all the found entities in it.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntities.FindAllByNameWithin" title="Dota 2 Workshop Tools/Scripting/API/CEntities.FindAllByNameWithin"> FindAllByNameWithin</a>
</td><td> <code>table FindAllByNameWithin(string name, Vector origin, float maxRadius) </code>
</td><td> Find entities by name within a radius.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntities.FindAllByTarget" title="Dota 2 Workshop Tools/Scripting/API/CEntities.FindAllByTarget"> FindAllByTarget</a>
</td><td> <code>table FindAllByTarget(string targetName) </code>
</td><td> Find entities by targetname.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntities.FindAllInSphere" title="Dota 2 Workshop Tools/Scripting/API/CEntities.FindAllInSphere"> FindAllInSphere</a>
</td><td> <code>table FindAllInSphere(Vector origin, float maxRadius) </code>
</td><td> Find entities within a radius.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntities.FindByClassname" title="Dota 2 Workshop Tools/Scripting/API/CEntities.FindByClassname"> FindByClassname</a>
</td><td> <code>handle FindByClassname(handle startFrom, string className) </code>
</td><td> Find entities by class name. Pass <i>nil</i> to start an iteration, or reference to a previously found entity to continue a search
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntities.FindByClassnameNearest" title="Dota 2 Workshop Tools/Scripting/API/CEntities.FindByClassnameNearest"> FindByClassnameNearest</a>
</td><td> <code>handle FindByClassnameNearest(string className, Vector origin, float maxRadius) </code>
</td><td> Find entities by class name nearest to a point.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntities.FindByClassnameWithin" title="Dota 2 Workshop Tools/Scripting/API/CEntities.FindByClassnameWithin"> FindByClassnameWithin</a>
</td><td> <code>handle FindByClassnameWithin(handle startFrom, string className, Vector origin, float maxRadius) </code>
</td><td> Find entities by class name within a radius. Pass <i>nil</i> to start an iteration, or reference to a previously found entity to continue a search
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntities.FindByModel" title="Dota 2 Workshop Tools/Scripting/API/CEntities.FindByModel"> FindByModel</a>
</td><td> <code>handle FindByModel(handle startFrom, string modelName) </code>
</td><td> Find entities by model name. Pass <i>nil</i> to start an iteration, or reference to a previously found entity to continue a search
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntities.FindByModelWithin" title="Dota 2 Workshop Tools/Scripting/API/CEntities.FindByModelWithin"> FindByModelWithin</a>
</td><td> <code>handle FindByModelWithin(handle startFrom, string modelName, Vector origin, float maxRadius) </code>
</td><td> Find entities by model name within a radius. Pass <i>nil</i> to start an iteration, or reference to a previously found entity to continue a search
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntities.FindByName" title="Dota 2 Workshop Tools/Scripting/API/CEntities.FindByName"> FindByName</a>
</td><td> <code>handle FindByName(handle lastEnt, string searchString) </code>
</td><td> Find entities by name. Pass <i>nil</i> to start an iteration, or reference to a previously found entity to continue a search
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntities.FindByNameNearest" title="Dota 2 Workshop Tools/Scripting/API/CEntities.FindByNameNearest"> FindByNameNearest</a>
</td><td> <code>handle FindByNameNearest(string name, Vector origin, float maxRadius) </code>
</td><td> Find entities by name nearest to a point.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntities.FindByNameWithin" title="Dota 2 Workshop Tools/Scripting/API/CEntities.FindByNameWithin"> FindByNameWithin</a>
</td><td> <code>handle FindByNameWithin(handle startFrom, string name, Vector origin, float maxRadius) </code>
</td><td> Find entities by name within a radius. Pass <i>nil</i> to start an iteration, or reference to a previously found entity to continue a search
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntities.FindByTarget" title="Dota 2 Workshop Tools/Scripting/API/CEntities.FindByTarget"> FindByTarget</a>
</td><td> <code>handle FindByTarget(handle startFrom, string targetName) </code>
</td><td> Find entities by targetname. Pass <i>nil</i> to start an iteration, or reference to a previously found entity to continue a search
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntities.FindInSphere" title="Dota 2 Workshop Tools/Scripting/API/CEntities.FindInSphere"> FindInSphere</a>
</td><td> <code>handle FindInSphere(handle startFrom, Vector origin, float maxRadius) </code>
</td><td> Find entities within a radius. Pass <i>nil</i> to start an iteration, or reference to a previously found entity to continue a search
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntities.First" title="Dota 2 Workshop Tools/Scripting/API/CEntities.First"> First</a>
</td><td> <code>handle First() </code>
</td><td> Begin an iteration over the list of entities
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntities.Next" title="Dota 2 Workshop Tools/Scripting/API/CEntities.Next"> Next</a>
</td><td> <code>handle Next(handle startFrom) </code>
</td><td> Continue an iteration over the list of entities, providing reference to a previously found entity
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=5" title="Edit section: CEntityInstance">编辑</a>]</span> <span class="mw-headline" id="CEntityInstance"> CEntityInstance </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CBaseEntity"> CBaseEntity</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.ConnectOutput" title="Dota 2 Workshop Tools/Scripting/API/CEntityInstance.ConnectOutput"> ConnectOutput</a>
</td><td> <code>void ConnectOutput(string a, string b) </code>
</td><td> Adds an I/O connection that will call the named function on this entity when the specified output fires.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.Destroy" title="Dota 2 Workshop Tools/Scripting/API/CEntityInstance.Destroy"> Destroy</a>
</td><td> <code>void Destroy() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.DisconnectOutput" title="Dota 2 Workshop Tools/Scripting/API/CEntityInstance.DisconnectOutput"> DisconnectOutput</a>
</td><td> <code>void DisconnectOutput(string a, string b) </code>
</td><td> Removes a connected script function from an I/O event on this entity.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.DisconnectRedirectedOutput" title="Dota 2 Workshop Tools/Scripting/API/CEntityInstance.DisconnectRedirectedOutput"> DisconnectRedirectedOutput</a>
</td><td> <code>void DisconnectRedirectedOutput(string a, string b, handle c) </code>
</td><td> Removes a connected script function from an I/O event on the passed entity.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.entindex" title="Dota 2 Workshop Tools/Scripting/API/CEntityInstance.entindex"> entindex</a>
</td><td> <code>int entindex() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.FireOutput" title="Dota 2 Workshop Tools/Scripting/API/CEntityInstance.FireOutput"> FireOutput</a>
</td><td> <code>void FireOutput(string a, handle b, handle c, table d, float e) </code>
</td><td> Fire an entity output
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.GetClassname" title="Dota 2 Workshop Tools/Scripting/API/CEntityInstance.GetClassname"> GetClassname</a>
</td><td> <code>string GetClassname() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.GetDebugName" title="Dota 2 Workshop Tools/Scripting/API/CEntityInstance.GetDebugName"> GetDebugName</a>
</td><td> <code>string GetDebugName() </code>
</td><td> Get the entity name w/help if not defined (i.e. classname/etc)
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.GetEntityHandle" title="Dota 2 Workshop Tools/Scripting/API/CEntityInstance.GetEntityHandle"> GetEntityHandle</a>
</td><td> <code>ehandle GetEntityHandle() </code>
</td><td> Get the entity as an EHANDLE
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.GetEntityIndex" title="Dota 2 Workshop Tools/Scripting/API/CEntityInstance.GetEntityIndex"> GetEntityIndex</a>
</td><td> <code>int GetEntityIndex() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.GetIntAttr" title="Dota 2 Workshop Tools/Scripting/API/CEntityInstance.GetIntAttr"> GetIntAttr</a>
</td><td> <code>int GetIntAttr(string a) </code>
</td><td> Get Integer Attribute
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.GetName" title="Dota 2 Workshop Tools/Scripting/API/CEntityInstance.GetName"> GetName</a>
</td><td> <code>string GetName() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.GetOrCreatePrivateScriptScope" title="Dota 2 Workshop Tools/Scripting/API/CEntityInstance.GetOrCreatePrivateScriptScope"> GetOrCreatePrivateScriptScope</a>
</td><td> <code>handle GetOrCreatePrivateScriptScope() </code>
</td><td> Retrieve, creating if necessary, the private per-instance script-side data associated with an entity
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.GetOrCreatePublicScriptScope" title="Dota 2 Workshop Tools/Scripting/API/CEntityInstance.GetOrCreatePublicScriptScope"> GetOrCreatePublicScriptScope</a>
</td><td> <code>handle GetOrCreatePublicScriptScope() </code>
</td><td> Retrieve, creating if necessary, the public script-side data associated with an entity
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.GetPrivateScriptScope" title="Dota 2 Workshop Tools/Scripting/API/CEntityInstance.GetPrivateScriptScope"> GetPrivateScriptScope</a>
</td><td> <code>handle GetPrivateScriptScope() </code>
</td><td> Retrieve the private per-instance script-side data associated with an entity
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.GetPublicScriptScope" title="Dota 2 Workshop Tools/Scripting/API/CEntityInstance.GetPublicScriptScope"> GetPublicScriptScope</a>
</td><td> <code>handle GetPublicScriptScope() </code>
</td><td> Retrieve the public script-side data associated with an entity
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.RedirectOutput" title="Dota 2 Workshop Tools/Scripting/API/CEntityInstance.RedirectOutput"> RedirectOutput</a>
</td><td> <code>void RedirectOutput(string a, string b, handle c) </code>
</td><td> Adds an I/O connection that will call the named function on the passed entity when the specified output fires.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.RemoveSelf" title="Dota 2 Workshop Tools/Scripting/API/CEntityInstance.RemoveSelf"> RemoveSelf</a>
</td><td> <code>void RemoveSelf() </code>
</td><td> Delete this entity
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.SetIntAttr" title="Dota 2 Workshop Tools/Scripting/API/CEntityInstance.SetIntAttr"> SetIntAttr</a>
</td><td> <code>void SetIntAttr(string a, int b) </code>
</td><td> Set Integer Attribute
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=6" title="Edit section: CDOTABaseAbility">编辑</a>]</span> <span class="mw-headline" id="CDOTABaseAbility"> CDOTABaseAbility </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CBaseEntity"> CBaseEntity</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.CastAbility" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.CastAbility"> CastAbility</a>
</td><td> <code>void CastAbility() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.ContinueCasting" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.ContinueCasting"> ContinueCasting</a>
</td><td> <code>bool ContinueCasting() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.CreateVisibilityNode" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.CreateVisibilityNode"> CreateVisibilityNode</a>
</td><td> <code>void CreateVisibilityNode(Vector a, float b, float c) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.DecrementModifierRefCount" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.DecrementModifierRefCount"> DecrementModifierRefCount</a>
</td><td> <code>void DecrementModifierRefCount() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.EndChannel" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.EndChannel"> EndChannel</a>
</td><td> <code>void EndChannel(bool a) </code>
</td><td> Param: <i>bool</i> bInterrupted
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.EndCooldown" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.EndCooldown"> EndCooldown</a>
</td><td> <code>void EndCooldown() </code>
</td><td> Clear the cooldown remaining on this ability.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAbilityDamage" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetAbilityDamage"> GetAbilityDamage</a>
</td><td> <code>int GetAbilityDamage() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAbilityDamageType" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetAbilityDamageType"> GetAbilityDamageType</a>
</td><td> <code>int GetAbilityDamageType() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAbilityIndex" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetAbilityIndex"> GetAbilityIndex</a>
</td><td> <code>int GetAbilityIndex() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAbilityName" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetAbilityName"> GetAbilityName</a>
</td><td> <code>string GetAbilityName() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAbilityTargetFlags" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetAbilityTargetFlags"> GetAbilityTargetFlags</a>
</td><td> <code>int GetAbilityTargetFlags() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAbilityTargetTeam" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetAbilityTargetTeam"> GetAbilityTargetTeam</a>
</td><td> <code>int GetAbilityTargetTeam() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAbilityTargetType" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetAbilityTargetType"> GetAbilityTargetType</a>
</td><td> <code>int GetAbilityTargetType() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAbilityType" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetAbilityType"> GetAbilityType</a>
</td><td> <code>int GetAbilityType() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAnimationIgnoresModelScale" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetAnimationIgnoresModelScale"> GetAnimationIgnoresModelScale</a>
</td><td> <code>bool GetAnimationIgnoresModelScale() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAssociatedPrimaryAbilities" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetAssociatedPrimaryAbilities"> GetAssociatedPrimaryAbilities</a>
</td><td> <code>string GetAssociatedPrimaryAbilities() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAssociatedSecondaryAbilities" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetAssociatedSecondaryAbilities"> GetAssociatedSecondaryAbilities</a>
</td><td> <code>string GetAssociatedSecondaryAbilities() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAutoCastState" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetAutoCastState"> GetAutoCastState</a>
</td><td> <code>bool GetAutoCastState() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetBackswingTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetBackswingTime"> GetBackswingTime</a>
</td><td> <code>float GetBackswingTime() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetBehavior" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetBehavior"> GetBehavior</a>
</td><td> <code>int GetBehavior() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetCaster" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetCaster"> GetCaster</a>
</td><td> <code>handle GetCaster() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetCastPoint" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetCastPoint"> GetCastPoint</a>
</td><td> <code>float GetCastPoint() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetCastRange" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetCastRange"> GetCastRange</a>
</td><td> <code>int GetCastRange() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetChannelledManaCostPerSecond" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetChannelledManaCostPerSecond"> GetChannelledManaCostPerSecond</a>
</td><td> <code>int GetChannelledManaCostPerSecond(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetChannelStartTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetChannelStartTime"> GetChannelStartTime</a>
</td><td> <code>float GetChannelStartTime() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetChannelTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetChannelTime"> GetChannelTime</a>
</td><td> <code>float GetChannelTime() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetCloneSource" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetCloneSource"> GetCloneSource</a>
</td><td> <code>handle GetCloneSource() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetConceptRecipientType" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetConceptRecipientType"> GetConceptRecipientType</a>
</td><td> <code>int GetConceptRecipientType() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetCooldown" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetCooldown"> GetCooldown</a>
</td><td> <code>float GetCooldown(int a) </code>
</td><td> Get the cooldown duration for this ability at a given level, not the amount of cooldown actually left.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetCooldownTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetCooldownTime"> GetCooldownTime</a>
</td><td> <code>float GetCooldownTime() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetCooldownTimeRemaining" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetCooldownTimeRemaining"> GetCooldownTimeRemaining</a>
</td><td> <code>float GetCooldownTimeRemaining() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetCursorPosition" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetCursorPosition"> GetCursorPosition</a>
</td><td> <code>Vector GetCursorPosition() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetCursorTarget" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetCursorTarget"> GetCursorTarget</a>
</td><td> <code>handle GetCursorTarget() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetCursorTargetingNothing" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetCursorTargetingNothing"> GetCursorTargetingNothing</a>
</td><td> <code>bool GetCursorTargetingNothing() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetDuration" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetDuration"> GetDuration</a>
</td><td> <code>float GetDuration() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetGoldCost" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetGoldCost"> GetGoldCost</a>
</td><td> <code>int GetGoldCost(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetGoldCostForUpgrade" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetGoldCostForUpgrade"> GetGoldCostForUpgrade</a>
</td><td> <code>int GetGoldCostForUpgrade(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetHeroLevelRequiredToUpgrade" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetHeroLevelRequiredToUpgrade"> GetHeroLevelRequiredToUpgrade</a>
</td><td> <code>int GetHeroLevelRequiredToUpgrade() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetIntrinsicModifierName" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetIntrinsicModifierName"> GetIntrinsicModifierName</a>
</td><td> <code>string GetIntrinsicModifierName() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetLevel" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetLevel"> GetLevel</a>
</td><td> <code>int GetLevel() </code>
</td><td> Get the current level of the ability
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetLevelSpecialValueFor" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetLevelSpecialValueFor"> GetLevelSpecialValueFor</a>
</td><td> <code>table GetLevelSpecialValueFor(string a, int b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetManaCost" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetManaCost"> GetManaCost</a>
</td><td> <code>int GetManaCost(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetMaxLevel" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetMaxLevel"> GetMaxLevel</a>
</td><td> <code>int GetMaxLevel() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetModifierValue" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetModifierValue"> GetModifierValue</a>
</td><td> <code>float GetModifierValue() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetModifierValueBonus" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetModifierValueBonus"> GetModifierValueBonus</a>
</td><td> <code>float GetModifierValueBonus() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetPlaybackRateOverride" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetPlaybackRateOverride"> GetPlaybackRateOverride</a>
</td><td> <code>float GetPlaybackRateOverride() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetSharedCooldownName" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetSharedCooldownName"> GetSharedCooldownName</a>
</td><td> <code>string GetSharedCooldownName() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetSpecialValueFor" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetSpecialValueFor"> GetSpecialValueFor</a>
</td><td> <code>table GetSpecialValueFor(string a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetStolenActivityModifier" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetStolenActivityModifier"> GetStolenActivityModifier</a>
</td><td> <code>string GetStolenActivityModifier() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetToggleState" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.GetToggleState"> GetToggleState</a>
</td><td> <code>bool GetToggleState() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.HeroXPChange" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.HeroXPChange"> HeroXPChange</a>
</td><td> <code>bool HeroXPChange(float a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IncrementModifierRefCount" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.IncrementModifierRefCount"> IncrementModifierRefCount</a>
</td><td> <code>void IncrementModifierRefCount() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsActivated" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.IsActivated"> IsActivated</a>
</td><td> <code>bool IsActivated() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsAttributeBonus" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.IsAttributeBonus"> IsAttributeBonus</a>
</td><td> <code>bool IsAttributeBonus() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsChanneling" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.IsChanneling"> IsChanneling</a>
</td><td> <code>bool IsChanneling() </code>
</td><td> Returns whether the ability is currently channeling.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsCooldownReady" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.IsCooldownReady"> IsCooldownReady</a>
</td><td> <code>bool IsCooldownReady() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsCosmetic" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.IsCosmetic"> IsCosmetic</a>
</td><td> <code>bool IsCosmetic() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsFullyCastable" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.IsFullyCastable"> IsFullyCastable</a>
</td><td> <code>bool IsFullyCastable() </code>
</td><td> Returns whether the ability can be cast.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsHidden" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.IsHidden"> IsHidden</a>
</td><td> <code>bool IsHidden() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsHiddenWhenStolen" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.IsHiddenWhenStolen"> IsHiddenWhenStolen</a>
</td><td> <code>bool IsHiddenWhenStolen() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsInAbilityPhase" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.IsInAbilityPhase"> IsInAbilityPhase</a>
</td><td> <code>bool IsInAbilityPhase() </code>
</td><td> Returns whether the ability is currently casting.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsItem" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.IsItem"> IsItem</a>
</td><td> <code>bool IsItem() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsOwnersGoldEnough" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.IsOwnersGoldEnough"> IsOwnersGoldEnough</a>
</td><td> <code>bool IsOwnersGoldEnough(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsOwnersGoldEnoughForUpgrade" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.IsOwnersGoldEnoughForUpgrade"> IsOwnersGoldEnoughForUpgrade</a>
</td><td> <code>bool IsOwnersGoldEnoughForUpgrade() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsOwnersManaEnough" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.IsOwnersManaEnough"> IsOwnersManaEnough</a>
</td><td> <code>bool IsOwnersManaEnough() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsPassive" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.IsPassive"> IsPassive</a>
</td><td> <code>bool IsPassive() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsSharedWithTeammates" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.IsSharedWithTeammates"> IsSharedWithTeammates</a>
</td><td> <code>bool IsSharedWithTeammates() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsStealable" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.IsStealable"> IsStealable</a>
</td><td> <code>bool IsStealable() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsStolen" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.IsStolen"> IsStolen</a>
</td><td> <code>bool IsStolen() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsToggle" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.IsToggle"> IsToggle</a>
</td><td> <code>bool IsToggle() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsTrained" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.IsTrained"> IsTrained</a>
</td><td> <code>bool IsTrained() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.MarkAbilityButtonDirty" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.MarkAbilityButtonDirty"> MarkAbilityButtonDirty</a>
</td><td> <code>void MarkAbilityButtonDirty() </code>
</td><td> Mark the ability button for this ability as needing a refresh
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.NumModifiersUsingAbility" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.NumModifiersUsingAbility"> NumModifiersUsingAbility</a>
</td><td> <code>int NumModifiersUsingAbility() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnAbilityPhaseInterrupted" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.OnAbilityPhaseInterrupted"> OnAbilityPhaseInterrupted</a>
</td><td> <code>void OnAbilityPhaseInterrupted() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnAbilityPhaseStart" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.OnAbilityPhaseStart"> OnAbilityPhaseStart</a>
</td><td> <code>bool OnAbilityPhaseStart() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnAbilityPinged" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.OnAbilityPinged"> OnAbilityPinged</a>
</td><td> <code>void OnAbilityPinged() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnChannelFinish" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.OnChannelFinish"> OnChannelFinish</a>
</td><td> <code>void OnChannelFinish(bool a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnChannelThink" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.OnChannelThink"> OnChannelThink</a>
</td><td> <code>void OnChannelThink(float a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnHeroCalculateStatBonus" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.OnHeroCalculateStatBonus"> OnHeroCalculateStatBonus</a>
</td><td> <code>void OnHeroCalculateStatBonus() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnHeroLevelUp" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.OnHeroLevelUp"> OnHeroLevelUp</a>
</td><td> <code>void OnHeroLevelUp() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnInventoryContentsChanged" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.OnInventoryContentsChanged"> OnInventoryContentsChanged</a>
</td><td> <code>void OnInventoryContentsChanged() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnOwnerDied" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.OnOwnerDied"> OnOwnerDied</a>
</td><td> <code>void OnOwnerDied() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnOwnerSpawned" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.OnOwnerSpawned"> OnOwnerSpawned</a>
</td><td> <code>void OnOwnerSpawned() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnSpellStart" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.OnSpellStart"> OnSpellStart</a>
</td><td> <code>void OnSpellStart() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnToggle" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.OnToggle"> OnToggle</a>
</td><td> <code>void OnToggle() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnUpgrade" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.OnUpgrade"> OnUpgrade</a>
</td><td> <code>void OnUpgrade() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.PayGoldCost" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.PayGoldCost"> PayGoldCost</a>
</td><td> <code>void PayGoldCost() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.PayGoldCostForUpgrade" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.PayGoldCostForUpgrade"> PayGoldCostForUpgrade</a>
</td><td> <code>void PayGoldCostForUpgrade() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.PayManaCost" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.PayManaCost"> PayManaCost</a>
</td><td> <code>void PayManaCost() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.PlaysDefaultAnimWhenStolen" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.PlaysDefaultAnimWhenStolen"> PlaysDefaultAnimWhenStolen</a>
</td><td> <code>bool PlaysDefaultAnimWhenStolen() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.ProcsMagicStick" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.ProcsMagicStick"> ProcsMagicStick</a>
</td><td> <code>bool ProcsMagicStick() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.RefCountsModifiers" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.RefCountsModifiers"> RefCountsModifiers</a>
</td><td> <code>bool RefCountsModifiers() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.RefundManaCost" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.RefundManaCost"> RefundManaCost</a>
</td><td> <code>void RefundManaCost() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.ResetToggleOnRespawn" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.ResetToggleOnRespawn"> ResetToggleOnRespawn</a>
</td><td> <code>bool ResetToggleOnRespawn() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.SetAbilityIndex" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.SetAbilityIndex"> SetAbilityIndex</a>
</td><td> <code>void SetAbilityIndex(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.SetActivated" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.SetActivated"> SetActivated</a>
</td><td> <code>void SetActivated(bool a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.SetChanneling" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.SetChanneling"> SetChanneling</a>
</td><td> <code>void SetChanneling(bool a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.SetHidden" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.SetHidden"> SetHidden</a>
</td><td> <code>void SetHidden(bool a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.SetInAbilityPhase" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.SetInAbilityPhase"> SetInAbilityPhase</a>
</td><td> <code>void SetInAbilityPhase(bool a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.SetLevel" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.SetLevel"> SetLevel</a>
</td><td> <code>void SetLevel(int a) </code>
</td><td> Sets the level of this ability.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.SetOverrideCastPoint" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.SetOverrideCastPoint"> SetOverrideCastPoint</a>
</td><td> <code>void SetOverrideCastPoint(float a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.SetRefCountsModifiers" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.SetRefCountsModifiers"> SetRefCountsModifiers</a>
</td><td> <code>void SetRefCountsModifiers(bool a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.SetStolen" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.SetStolen"> SetStolen</a>
</td><td> <code>void SetStolen(bool a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.ShouldUseResources" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.ShouldUseResources"> ShouldUseResources</a>
</td><td> <code>bool ShouldUseResources() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.SpeakAbilityConcept" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.SpeakAbilityConcept"> SpeakAbilityConcept</a>
</td><td> <code>void SpeakAbilityConcept(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.SpeakTrigger" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.SpeakTrigger"> SpeakTrigger</a>
</td><td> <code>bool SpeakTrigger() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.StartCooldown" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.StartCooldown"> StartCooldown</a>
</td><td> <code>void StartCooldown(float a) </code>
</td><td> param: flCooldown
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.ToggleAbility" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.ToggleAbility"> ToggleAbility</a>
</td><td> <code>void ToggleAbility() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.ToggleAutoCast" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.ToggleAutoCast"> ToggleAutoCast</a>
</td><td> <code>void ToggleAutoCast() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.UpgradeAbility" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.UpgradeAbility"> UpgradeAbility</a>
</td><td> <code>void UpgradeAbility() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.UseResources" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseAbility.UseResources"> UseResources</a>
</td><td> <code>void (bool a, bool b, bool c) </code>
</td><td> 无
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=7" title="Edit section: CDOTA Ability Animation Attack">编辑</a>]</span> <span class="mw-headline" id="CDOTA_Ability_Animation_Attack"> CDOTA_Ability_Animation_Attack </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CDOTABaseAbility"> CDOTABaseAbility</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Animation_Attack.SetPlaybackRate" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Ability Animation Attack.SetPlaybackRate"> SetPlaybackRate</a>
</td><td> <code>void SetPlaybackRate(float a) </code>
</td><td> 超过重播速率
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=8" title="Edit section: CDOTA Ability Animation TailSpin">编辑</a>]</span> <span class="mw-headline" id="CDOTA_Ability_Animation_TailSpin"> CDOTA_Ability_Animation_TailSpin </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CDOTABaseAbility"> CDOTABaseAbility</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Animation_TailSpin.SetPlaybackRate" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Ability Animation TailSpin.SetPlaybackRate"> SetPlaybackRate</a>
</td><td> <code>void SetPlaybackRate(float a) </code>
</td><td> 超过重播速率
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=9" title="Edit section: CDOTA Ability Nian Leap">编辑</a>]</span> <span class="mw-headline" id="CDOTA_Ability_Nian_Leap"> CDOTA_Ability_Nian_Leap </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CDOTABaseAbility"> CDOTABaseAbility</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Nian_Leap.SetPlaybackRate" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Ability Nian Leap.SetPlaybackRate"> SetPlaybackRate</a>
</td><td> <code>void SetPlaybackRate(float a) </code>
</td><td> 超过重播速率
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=10" title="Edit section: CDOTA Ability Nian Dive">编辑</a>]</span> <span class="mw-headline" id="CDOTA_Ability_Nian_Dive"> CDOTA_Ability_Nian_Dive </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CDOTABaseAbility"> CDOTABaseAbility</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Nian_Dive.SetPlaybackRate" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Ability Nian Dive.SetPlaybackRate"> SetPlaybackRate</a>
</td><td> <code>void SetPlaybackRate(float a) </code>
</td><td> 超过重播速率
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=11" title="Edit section: CDOTA Ability Nian Roar">编辑</a>]</span> <span class="mw-headline" id="CDOTA_Ability_Nian_Roar"> CDOTA_Ability_Nian_Roar </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CDOTABaseAbility"> CDOTABaseAbility</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Nian_Roar.GetCastCount" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Ability Nian Roar.GetCastCount"> GetCastCount</a>
</td><td> <code>int GetCastCount() </code>
</td><td> Nian已使用过roar的次数
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=12" title="Edit section: CDOTA Item">编辑</a>]</span> <span class="mw-headline" id="CDOTA_Item"> CDOTA_Item </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CDOTABaseAbility"> CDOTABaseAbility</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.GetContainer" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Item.GetContainer"> GetContainer</a>
</td><td> <code>handle GetContainer() </code>
</td><td> Get the container for this item.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.GetCost" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Item.GetCost"> GetCost</a>
</td><td> <code>int GetCost() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.GetCurrentCharges" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Item.GetCurrentCharges"> GetCurrentCharges</a>
</td><td> <code>int GetCurrentCharges() </code>
</td><td> Get the number of charges this item currently has.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.GetInitialCharges" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Item.GetInitialCharges"> GetInitialCharges</a>
</td><td> <code>int GetInitialCharges() </code>
</td><td> Get the initial number of charges this item has.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.GetPurchaser" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Item.GetPurchaser"> GetPurchaser</a>
</td><td> <code>handle GetPurchaser() </code>
</td><td> Get the purchaser for this item.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.GetPurchaseTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Item.GetPurchaseTime"> GetPurchaseTime</a>
</td><td> <code>float GetPurchaseTime() </code>
</td><td> Get the purchase time of this item
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.GetShareability" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Item.GetShareability"> GetShareability</a>
</td><td> <code>int GetShareability() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.IsPermanent" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Item.IsPermanent"> IsPermanent</a>
</td><td> <code>bool IsPermanent() </code>
</td><td> Is this a permanent item?
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.LaunchLoot" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Item.LaunchLoot"> LaunchLoot</a>
</td><td> <code>void LaunchLoot(bool a, float b, float c, Vector d) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.SetCurrentCharges" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Item.SetCurrentCharges"> SetCurrentCharges</a>
</td><td> <code>void SetCurrentCharges(int a) </code>
</td><td> Set the number of charges on this item
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.SetPurchaser" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Item.SetPurchaser"> SetPurchaser</a>
</td><td> <code>void SetPurchaser(handle a) </code>
</td><td> Set the purchaser of record for this item.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.SetPurchaseTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Item.SetPurchaseTime"> SetPurchaseTime</a>
</td><td> <code>void SetPurchaseTime(float a) </code>
</td><td> Set the purchase time of this item
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.SetStacksWithOtherOwners" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Item.SetStacksWithOtherOwners"> SetStacksWithOtherOwners</a>
</td><td> <code>void SetStacksWithOtherOwners(bool a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.StacksWithOtherOwners" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Item.StacksWithOtherOwners"> StacksWithOtherOwners</a>
</td><td> <code>bool StacksWithOtherOwners() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.Think" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Item.Think"> Think</a>
</td><td> <code>void Think() </code>
</td><td> Think this item
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=13" title="Edit section: CDOTA Item Physical">编辑</a>]</span> <span class="mw-headline" id="CDOTA_Item_Physical"> CDOTA_Item_Physical </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CBaseAnimating"> CBaseAnimating</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Physical.GetContainedItem" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Item Physical.GetContainedItem"> GetContainedItem</a>
</td><td> <code>handle GetContainedItem() </code>
</td><td> Returned the contained item.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Physical.GetCreationTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Item Physical.GetCreationTime"> GetCreationTime</a>
</td><td> <code>float GetCreationTime() </code>
</td><td> Returns the game time when this item was created in the world
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Physical.SetContainedItem" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Item Physical.SetContainedItem"> SetContainedItem</a>
</td><td> <code>void SetContainedItem(handle a) </code>
</td><td> Set the contained item.
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=14" title="Edit section: CDOTA Item DataDriven">编辑</a>]</span> <span class="mw-headline" id="CDOTA_Item_DataDriven"> CDOTA_Item_DataDriven </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CDOTA_Item"> CDOTA_Item</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p>'
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_DataDriven.ApplyDataDrivenModifier" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Item DataDriven.ApplyDataDrivenModifier"> ApplyDataDrivenModifier</a>
</td><td> <code>void ApplyDataDrivenModifier(handle source, handle target, string modifier_name, handle modifierArgs) </code>
</td><td>
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=15" title="Edit section: CDOTA Unit Nian">编辑</a>]</span> <span class="mw-headline" id="CDOTA_Unit_Nian"> CDOTA_Unit_Nian </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CDOTA_BaseNPC_Creature"> CDOTA_BaseNPC_Creature</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Unit_Nian.GetHorn" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Unit Nian.GetHorn"> GetHorn</a>
</td><td> <code>handle GetHorn() </code>
</td><td> Is the Nian horn?
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Unit_Nian.GetTail" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Unit Nian.GetTail"> GetTail</a>
</td><td> <code>handle GetTail() </code>
</td><td> Is the Nian's tail broken?
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Unit_Nian.IsHornAlive" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Unit Nian.IsHornAlive"> IsHornAlive</a>
</td><td> <code>bool IsHornAlive() </code>
</td><td> Is the Nian's horn broken?
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Unit_Nian.IsTailAlive" title="Dota 2 Workshop Tools/Scripting/API/CDOTA Unit Nian.IsTailAlive"> IsTailAlive</a>
</td><td> <code>bool IsTailAlive() </code>
</td><td> Is the Nian's tail broken?
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=16" title="Edit section: CBasePlayer">编辑</a>]</span> <span class="mw-headline" id="CBasePlayer"> CBasePlayer </span></h3>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBasePlayer.IsNoclipping" title="Dota 2 Workshop Tools/Scripting/API/CBasePlayer.IsNoclipping"> IsNoclipping</a>
</td><td> <code>bool IsNoclipping() </code>
</td><td> Returns true if the player is in noclip mode.
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=17" title="Edit section: CDOTAPlayer">编辑</a>]</span> <span class="mw-headline" id="CDOTAPlayer"> CDOTAPlayer </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CBaseAnimating"> CBaseAnimating</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAPlayer.GetAssignedHero" title="Dota 2 Workshop Tools/Scripting/API/CDOTAPlayer.GetAssignedHero"> GetAssignedHero</a>
</td><td> <code>handle GetAssignedHero() </code>
</td><td> Get the player's hero.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAPlayer.GetControlledRPGUnit" title="Dota 2 Workshop Tools/Scripting/API/CDOTAPlayer.GetControlledRPGUnit"> GetControlledRPGUnit</a>
</td><td> <code>handle GetControlledRPGUnit() </code>
</td><td> Get the RPG unit this player controls.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAPlayer.GetPlayerID" title="Dota 2 Workshop Tools/Scripting/API/CDOTAPlayer.GetPlayerID"> GetPlayerID</a>
</td><td> <code>int GetPlayerID() </code>
</td><td> Get the player's official PlayerID; notably is -1 when the player isn't yet on a team.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAPlayer.MakeRandomHeroSelection" title="Dota 2 Workshop Tools/Scripting/API/CDOTAPlayer.MakeRandomHeroSelection"> MakeRandomHeroSelection</a>
</td><td> <code>void MakeRandomHeroSelection() </code>
</td><td> Randoms this player's hero.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAPlayer.SetKillCamUnit" title="Dota 2 Workshop Tools/Scripting/API/CDOTAPlayer.SetKillCamUnit"> SetKillCamUnit</a>
</td><td> <code>void SetKillCamUnit(handle a) </code>
</td><td> Set the kill cam unit for this hero.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAPlayer.SetMusicStatus" title="Dota 2 Workshop Tools/Scripting/API/CDOTAPlayer.SetMusicStatus"> SetMusicStatus</a>
</td><td> <code>void SetMusicStatus(int nMusicStatus, float flIntensity) </code>
</td><td> Set the music status for this player, note this will only really apply if dota_music_battle_enable is off.
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=18" title="Edit section: CDOTA PlayerResource">编辑</a>]</span> <span class="mw-headline" id="CDOTA_PlayerResource"> CDOTA_PlayerResource </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CBaseEntity"> CBaseEntity</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p><i>无</i>
</p><p><i>全局变量:</i> <code>PlayerResource</code>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.AddAegisPickup" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.AddAegisPickup"> AddAegisPickup</a>
</td><td> <code>void AddAegisPickup(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.AddClaimedFarm" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.AddClaimedFarm"> AddClaimedFarm</a>
</td><td> <code>void AddClaimedFarm(int a, float b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.AddGoldSpentOnSupport" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.AddGoldSpentOnSupport"> AddGoldSpentOnSupport</a>
</td><td> <code>void AddGoldSpentOnSupport(int a, int b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.AddRunePickup" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.AddRunePickup"> AddRunePickup</a>
</td><td> <code>void AddRunePickup(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.AreUnitsSharedWithPlayerID" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.AreUnitsSharedWithPlayerID"> AreUnitsSharedWithPlayerID</a>
</td><td> <code>bool AreUnitsSharedWithPlayerID(int a, int b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.ClearKillsMatrix" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.ClearKillsMatrix"> ClearKillsMatrix</a>
</td><td> <code>void ClearKillsMatrix(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.ClearLastHitMultikill" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.ClearLastHitMultikill"> ClearLastHitMultikill</a>
</td><td> <code>void ClearLastHitMultikill(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.ClearLastHitStreak" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.ClearLastHitStreak"> ClearLastHitStreak</a>
</td><td> <code>void ClearLastHitStreak(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.ClearRawPlayerDamageMatrix" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.ClearRawPlayerDamageMatrix"> ClearRawPlayerDamageMatrix</a>
</td><td> <code>void ClearRawPlayerDamageMatrix(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.ClearStreak" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.ClearStreak"> ClearStreak</a>
</td><td> <code>void ClearStreak(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetAegisPickups" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetAegisPickups"> GetAegisPickups</a>
</td><td> <code>int GetAegisPickups(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetAssists" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetAssists"> GetAssists</a>
</td><td> <code>int GetAssists(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetBroadcasterChannel" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetBroadcasterChannel"> GetBroadcasterChannel</a>
</td><td> <code>&lt;&gt; GetBroadcasterChannel(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetBroadcasterChannelSlot" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetBroadcasterChannelSlot"> GetBroadcasterChannelSlot</a>
</td><td> <code>&lt;&gt; GetBroadcasterChannelSlot(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetClaimedDenies" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetClaimedDenies"> GetClaimedDenies</a>
</td><td> <code>int GetClaimedDenies(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetClaimedFarm" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetClaimedFarm"> GetClaimedFarm</a>
</td><td> <code>float GetClaimedFarm(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetClaimedMisses" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetClaimedMisses"> GetClaimedMisses</a>
</td><td> <code>int GetClaimedMisses(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetConnectionState" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetConnectionState"> GetConnectionState</a>
</td><td> <code>&lt;&gt; GetConnectionState(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetCreepDamageTaken" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetCreepDamageTaken"> GetCreepDamageTaken</a>
</td><td> <code>int GetCreepDamageTaken(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetCustomBuybackCooldown" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetCustomBuybackCooldown"> GetCustomBuybackCooldown</a>
</td><td> <code>float GetCustomBuybackCooldown(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetCustomBuybackCost" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetCustomBuybackCost"> GetCustomBuybackCost</a>
</td><td> <code>int GetCustomBuybackCost(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetDamageDoneToHero" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetDamageDoneToHero"> GetDamageDoneToHero</a>
</td><td> <code>int GetDamageDoneToHero(int a, int b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetDeaths" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetDeaths"> GetDeaths</a>
</td><td> <code>int GetDeaths(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetDenies" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetDenies"> GetDenies</a>
</td><td> <code>int GetDenies(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetEventPointsForPlayerID" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetEventPointsForPlayerID"> GetEventPointsForPlayerID</a>
</td><td> <code>int GetEventPointsForPlayerID(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetEventPremiumPointsGranted" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetEventPremiumPointsGranted"> GetEventPremiumPointsGranted</a>
</td><td> <code>int GetEventPremiumPointsGranted(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetEventRankGranted" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetEventRankGranted"> GetEventRankGranted</a>
</td><td> <code>int GetEventRankGranted(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetGold" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetGold"> GetGold</a>
</td><td> <code>int GetGold(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetGoldBagsCollected" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetGoldBagsCollected"> GetGoldBagsCollected</a>
</td><td> <code>int GetGoldBagsCollected(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetGoldLostToDeath" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetGoldLostToDeath"> GetGoldLostToDeath</a>
</td><td> <code>int GetGoldLostToDeath(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetGoldPerMin" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetGoldPerMin"> GetGoldPerMin</a>
</td><td> <code>float GetGoldPerMin(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetGoldSpentOnBuybacks" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetGoldSpentOnBuybacks"> GetGoldSpentOnBuybacks</a>
</td><td> <code>int GetGoldSpentOnBuybacks(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetGoldSpentOnConsumables" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetGoldSpentOnConsumables"> GetGoldSpentOnConsumables</a>
</td><td> <code>int GetGoldSpentOnConsumables(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetGoldSpentOnItems" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetGoldSpentOnItems"> GetGoldSpentOnItems</a>
</td><td> <code>int GetGoldSpentOnItems(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetGoldSpentOnSupport" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetGoldSpentOnSupport"> GetGoldSpentOnSupport</a>
</td><td> <code>int GetGoldSpentOnSupport(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetHealing" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetHealing"> GetHealing</a>
</td><td> <code>float GetHealing(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetHeroDamageTaken" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetHeroDamageTaken"> GetHeroDamageTaken</a>
</td><td> <code>int GetHeroDamageTaken(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetKills" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetKills"> GetKills</a>
</td><td> <code>int GetKills(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetKillsDoneToHero" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetKillsDoneToHero"> GetKillsDoneToHero</a>
</td><td> <code>int GetKillsDoneToHero(int a, int b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetLastHitMultikill" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetLastHitMultikill"> GetLastHitMultikill</a>
</td><td> <code>int GetLastHitMultikill(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetLastHits" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetLastHits"> GetLastHits</a>
</td><td> <code>int GetLastHits(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetLastHitStreak" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetLastHitStreak"> GetLastHitStreak</a>
</td><td> <code>int GetLastHitStreak(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetLevel" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetLevel"> GetLevel</a>
</td><td> <code>int GetLevel(int playerID) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetMisses" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetMisses"> GetMisses</a>
</td><td> <code>int GetMisses(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetNearbyCreepDeaths" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetNearbyCreepDeaths"> GetNearbyCreepDeaths</a>
</td><td> <code>int GetNearbyCreepDeaths(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetNthCourierForTeam" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetNthCourierForTeam"> GetNthCourierForTeam</a>
</td><td> <code>handle GetNthCourierForTeam(int a, int b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetNthPlayerIDOnTeam" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetNthPlayerIDOnTeam"> GetNthPlayerIDOnTeam</a>
</td><td> <code>int GetNthPlayerIDOnTeam(int a, int b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetNumConsumablesPurchased" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetNumConsumablesPurchased"> GetNumConsumablesPurchased</a>
</td><td> <code>int GetNumConsumablesPurchased(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetNumCouriersForTeam" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetNumCouriersForTeam"> GetNumCouriersForTeam</a>
</td><td> <code>int GetNumCouriersForTeam(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetNumItemsPurchased" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetNumItemsPurchased"> GetNumItemsPurchased</a>
</td><td> <code>int GetNumItemsPurchased(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetPlayer" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetPlayer"> GetPlayer</a>
</td><td> <code>handle GetPlayer(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetPlayerLoadedCompletely" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetPlayerLoadedCompletely"> GetPlayerLoadedCompletely</a>
</td><td> <code>bool GetPlayerLoadedCompletely(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetPlayerName" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetPlayerName"> GetPlayerName</a>
</td><td> <code>string GetPlayerName(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetPlayerReservedState" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetPlayerReservedState"> GetPlayerReservedState</a>
</td><td> <code>bool GetPlayerReservedState(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetRawPlayerDamage" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetRawPlayerDamage"> GetRawPlayerDamage</a>
</td><td> <code>int GetRawPlayerDamage(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetReliableGold" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetReliableGold"> GetReliableGold</a>
</td><td> <code>int GetReliableGold(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetRespawnSeconds" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetRespawnSeconds"> GetRespawnSeconds</a>
</td><td> <code>int GetRespawnSeconds(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetRoshanKills" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetRoshanKills"> GetRoshanKills</a>
</td><td> <code>int GetRoshanKills(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetRunePickups" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetRunePickups"> GetRunePickups</a>
</td><td> <code>int GetRunePickups(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetSelectedHeroEntity" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetSelectedHeroEntity"> GetSelectedHeroEntity</a>
</td><td> <code>handle GetSelectedHeroEntity(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetSelectedHeroID" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetSelectedHeroID"> GetSelectedHeroID</a>
</td><td> <code>int GetSelectedHeroID(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetSelectedHeroName" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetSelectedHeroName"> GetSelectedHeroName</a>
</td><td> <code>string GetSelectedHeroName(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetSteamAccountID" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetSteamAccountID"> GetSteamAccountID</a>
</td><td> <code>&lt;&gt; GetSteamAccountID(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetStreak" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetStreak"> GetStreak</a>
</td><td> <code>int GetStreak(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetStuns" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetStuns"> GetStuns</a>
</td><td> <code>float GetStuns(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetTeam" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetTeam"> GetTeam</a>
</td><td> <code>int GetTeam(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetTeamKills" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetTeamKills"> GetTeamKills</a>
</td><td> <code>int GetTeamKills(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetTimeOfLastConsumablePurchase" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetTimeOfLastConsumablePurchase"> GetTimeOfLastConsumablePurchase</a>
</td><td> <code>float GetTimeOfLastConsumablePurchase(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetTimeOfLastDeath" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetTimeOfLastDeath"> GetTimeOfLastDeath</a>
</td><td> <code>float GetTimeOfLastDeath(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetTimeOfLastItemPurchase" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetTimeOfLastItemPurchase"> GetTimeOfLastItemPurchase</a>
</td><td> <code>float GetTimeOfLastItemPurchase(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetTotalEarnedGold" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetTotalEarnedGold"> GetTotalEarnedGold</a>
</td><td> <code>int GetTotalEarnedGold(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetTotalEarnedXP" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetTotalEarnedXP"> GetTotalEarnedXP</a>
</td><td> <code>int GetTotalEarnedXP(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetTotalGoldSpent" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetTotalGoldSpent"> GetTotalGoldSpent</a>
</td><td> <code>int GetTotalGoldSpent(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetTowerDamageTaken" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetTowerDamageTaken"> GetTowerDamageTaken</a>
</td><td> <code>int GetTowerDamageTaken(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetTowerKills" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetTowerKills"> GetTowerKills</a>
</td><td> <code>int GetTowerKills(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetUnitShareMaskForPlayer" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetUnitShareMaskForPlayer"> GetUnitShareMaskForPlayer</a>
</td><td> <code>int GetUnitShareMaskForPlayer(int a, int b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetUnreliableGold" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetUnreliableGold"> GetUnreliableGold</a>
</td><td> <code>int GetUnreliableGold(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.GetXPPerMin" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.GetXPPerMin"> GetXPPerMin</a>
</td><td> <code>float GetXPPerMin(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.HasRandomed" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.HasRandomed"> HasRandomed</a>
</td><td> <code>bool HasRandomed(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.HasRepicked" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.HasRepicked"> HasRepicked</a>
</td><td> <code>bool HasRepicked(int playerID) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.HasSelectedHero" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.HasSelectedHero"> HasSelectedHero</a>
</td><td> <code>bool HasSelectedHero(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.HaveAllPlayersJoined" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.HaveAllPlayersJoined"> HaveAllPlayersJoined</a>
</td><td> <code>bool HaveAllPlayersJoined() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.HeroLevelUp" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.HeroLevelUp"> HeroLevelUp</a>
</td><td> <code>void HeroLevelUp(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.IncrementAssists" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.IncrementAssists"> IncrementAssists</a>
</td><td> <code>void IncrementAssists(int playerID) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.IncrementClaimedDenies" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.IncrementClaimedDenies"> IncrementClaimedDenies</a>
</td><td> <code>void IncrementClaimedDenies(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.IncrementClaimedMisses" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.IncrementClaimedMisses"> IncrementClaimedMisses</a>
</td><td> <code>void IncrementClaimedMisses(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.IncrementDeaths" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.IncrementDeaths"> IncrementDeaths</a>
</td><td> <code>void IncrementDeaths(int playerID) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.IncrementDenies" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.IncrementDenies"> IncrementDenies</a>
</td><td> <code>void IncrementDenies(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.IncrementGoldBagsCollected" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.IncrementGoldBagsCollected"> IncrementGoldBagsCollected</a>
</td><td> <code>void IncrementGoldBagsCollected(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.IncrementKills" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.IncrementKills"> IncrementKills</a>
</td><td> <code>void IncrementKills(int playerID, int kills) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.IncrementLastHitMultikill" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.IncrementLastHitMultikill"> IncrementLastHitMultikill</a>
</td><td> <code>void IncrementLastHitMultikill(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.IncrementLastHits" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.IncrementLastHits"> IncrementLastHits</a>
</td><td> <code>void IncrementLastHits(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.IncrementLastHitStreak" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.IncrementLastHitStreak"> IncrementLastHitStreak</a>
</td><td> <code>void IncrementLastHitStreak(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.IncrementMisses" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.IncrementMisses"> IncrementMisses</a>
</td><td> <code>void IncrementMisses(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.IncrementNearbyCreepDeaths" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.IncrementNearbyCreepDeaths"> IncrementNearbyCreepDeaths</a>
</td><td> <code>void IncrementNearbyCreepDeaths(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.IncrementStreak" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.IncrementStreak"> IncrementStreak</a>
</td><td> <code>void IncrementStreak(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.IncrementTotalEarnedXP" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.IncrementTotalEarnedXP"> IncrementTotalEarnedXP</a>
</td><td> <code>void IncrementTotalEarnedXP(int a, int b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.IsBroadcaster" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.IsBroadcaster"> IsBroadcaster</a>
</td><td> <code>bool IsBroadcaster(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.IsDisableHelpSetForPlayerID" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.IsDisableHelpSetForPlayerID"> IsDisableHelpSetForPlayerID</a>
</td><td> <code>bool IsDisableHelpSetForPlayerID(int a, int b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.IsFakeClient" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.IsFakeClient"> IsFakeClient</a>
</td><td> <code>bool IsFakeClient(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.IsHeroSelected" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.IsHeroSelected"> IsHeroSelected</a>
</td><td> <code>bool IsHeroSelected(string a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.IsHeroSharedWithPlayerID" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.IsHeroSharedWithPlayerID"> IsHeroSharedWithPlayerID</a>
</td><td> <code>bool IsHeroSharedWithPlayerID(int a, int b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.IsValidPlayer" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.IsValidPlayer"> IsValidPlayer</a>
</td><td> <code>bool IsValidPlayer(int playerID) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.IsValidPlayerID" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.IsValidPlayerID"> IsValidPlayerID</a>
</td><td> <code>bool IsValidPlayerID(int playerID) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.IsValidTeamPlayer" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.IsValidTeamPlayer"> IsValidTeamPlayer</a>
</td><td> <code>bool IsValidTeamPlayer(int playerID) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.IsValidTeamPlayerID" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.IsValidTeamPlayerID"> IsValidTeamPlayerID</a>
</td><td> <code>bool IsValidTeamPlayerID(int playerID) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.ModifyGold" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.ModifyGold"> ModifyGold</a>
</td><td> <code>int ModifyGold(int playerID, int goldAmmt, bool reliable, int d) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.ReplaceHeroWith" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.ReplaceHeroWith"> ReplaceHeroWith</a>
</td><td> <code>handle ReplaceHeroWith(int a, string b, int c, int d) </code>
</td><td> (playerID, heroClassName, gold, XP) - replaces the player's hero with a new one of the specified class, gold and XP
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.ResetBuybackCostTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.ResetBuybackCostTime"> ResetBuybackCostTime</a>
</td><td> <code>void ResetBuybackCostTime(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.ResetTotalEarnedGold" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.ResetTotalEarnedGold"> ResetTotalEarnedGold</a>
</td><td> <code>void ResetTotalEarnedGold(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.SetBuybackCooldownTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.SetBuybackCooldownTime"> SetBuybackCooldownTime</a>
</td><td> <code>void SetBuybackCooldownTime(int a, float b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.SetBuybackGoldLimitTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.SetBuybackGoldLimitTime"> SetBuybackGoldLimitTime</a>
</td><td> <code>void SetBuybackGoldLimitTime(int a, float b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.SetCameraTarget" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.SetCameraTarget"> SetCameraTarget</a>
</td><td> <code>void SetCameraTarget(int a, handle b) </code>
</td><td> (playerID, entity) - force the given player's camera to follow the given entity
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.SetCustomBuybackCooldown" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.SetCustomBuybackCooldown"> SetCustomBuybackCooldown</a>
</td><td> <code>void SetCustomBuybackCooldown(int a, float b) </code>
</td><td> Set the buyback cooldown for this player.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.SetCustomBuybackCost" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.SetCustomBuybackCost"> SetCustomBuybackCost</a>
</td><td> <code>void SetCustomBuybackCost(int a, int b) </code>
</td><td> Set the buyback cost for this player.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.SetGold" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.SetGold"> SetGold</a>
</td><td> <code>void SetGold(int amount, int addToCurrentGold, bool c) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.SetHasRandomed" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.SetHasRandomed"> SetHasRandomed</a>
</td><td> <code>void SetHasRandomed(int playerID) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.SetHasRepicked" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.SetHasRepicked"> SetHasRepicked</a>
</td><td> <code>void SetHasRepicked(int playerID) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.SetLastBuybackTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.SetLastBuybackTime"> SetLastBuybackTime</a>
</td><td> <code>void SetLastBuybackTime(int a, int b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.SetPlayerReservedState" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.SetPlayerReservedState"> SetPlayerReservedState</a>
</td><td> <code>void SetPlayerReservedState(int a, bool b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.SetUnitShareMaskForPlayer" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.SetUnitShareMaskForPlayer"> SetUnitShareMaskForPlayer</a>
</td><td> <code>void SetUnitShareMaskForPlayer(int a, int b, int c, bool d) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.SpendGold" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.SpendGold"> SpendGold</a>
</td><td> <code>void SpendGold(int a, int b, int c) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.UpdateTeamSlot" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.UpdateTeamSlot"> UpdateTeamSlot</a>
</td><td> <code>void UpdateTeamSlot(int a, int b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_PlayerResource.WhoSelectedHero" title="Dota 2 Workshop Tools/Scripting/API/CDOTA PlayerResource.WhoSelectedHero"> WhoSelectedHero</a>
</td><td> <code>int WhoSelectedHero(string a) </code>
</td><td> 无
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=19" title="Edit section: CDOTA BaseNPC">编辑</a>]</span> <span class="mw-headline" id="CDOTA_BaseNPC"> CDOTA_BaseNPC </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CBaseFlex"> CBaseFlex</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p>'
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.AddAbility" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.AddAbility"> AddAbility</a>
</td><td> <code>void AddAbility(string a) </code>
</td><td> Add an ability to this unit by name.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.AddItem" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.AddItem"> AddItem</a>
</td><td> <code>void AddItem(handle a) </code>
</td><td> Add an item to this unit's inventory.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.AddNewModifier" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.AddNewModifier"> AddNewModifier</a>
</td><td> <code>void AddNewModifier(handle caster, handle optionalSourceAbility, string modifierName, handle modifierData) </code>
</td><td>
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.AddNoDraw" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.AddNoDraw"> AddNoDraw</a>
</td><td> <code>void AddNoDraw() </code>
</td><td> Adds the no draw flag.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.AlertNearbyUnits" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.AlertNearbyUnits"> AlertNearbyUnits</a>
</td><td> <code>void AlertNearbyUnits(handle a, handle b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.AngerNearbyUnits" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.AngerNearbyUnits"> AngerNearbyUnits</a>
</td><td> <code>void AngerNearbyUnits() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.AttackNoEarlierThan" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.AttackNoEarlierThan"> AttackNoEarlierThan</a>
</td><td> <code>void AttackNoEarlierThan(float a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.AttackReady" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.AttackReady"> AttackReady</a>
</td><td> <code>bool AttackReady() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.BoundingRadius2D" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.BoundingRadius2D"> BoundingRadius2D</a>
</td><td> <code>float BoundingRadius2D() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.CastAbilityImmediately" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.CastAbilityImmediately"> CastAbilityImmediately</a>
</td><td> <code>void CastAbilityImmediately(handle a, int b) </code>
</td><td> Cast an ability immediately.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.CastAbilityNoTarget" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.CastAbilityNoTarget"> CastAbilityNoTarget</a>
</td><td> <code>void CastAbilityNoTarget(handle ability, int playerIndex) </code>
</td><td> Cast an ability with no target. ( hAbility, iPlayerIndex )
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.CastAbilityOnPosition" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.CastAbilityOnPosition"> CastAbilityOnPosition</a>
</td><td> <code>void CastAbilityOnPosition(Vector a, handle b, int c) </code>
</td><td> Cast an ability on a position.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.CastAbilityOnTarget" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.CastAbilityOnTarget"> CastAbilityOnTarget</a>
</td><td> <code>void CastAbilityOnTarget(handle target, handle ability, int playerIndex) </code>
</td><td> Cast an ability on a target entity.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.CastAbilityToggle" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.CastAbilityToggle"> CastAbilityToggle</a>
</td><td> <code>void CastAbilityToggle(handle a, int b) </code>
</td><td> Toggle an ability. ( hAbility, iPlayerIndex )
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.DisassembleItem" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.DisassembleItem"> DisassembleItem</a>
</td><td> <code>void DisassembleItem(handle a) </code>
</td><td> Disassemble the passed item in this unit's inventory.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.DropItemAtPosition" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.DropItemAtPosition"> DropItemAtPosition</a>
</td><td> <code>void DropItemAtPosition(Vector a, handle b) </code>
</td><td> Drop an item at a given point.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.DropItemAtPositionImmediate" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.DropItemAtPositionImmediate"> DropItemAtPositionImmediate</a>
</td><td> <code>void DropItemAtPositionImmediate(handle a, Vector b) </code>
</td><td> Immediately drop a carried item at a given position.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.EjectItemFromStash" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.EjectItemFromStash"> EjectItemFromStash</a>
</td><td> <code>void EjectItemFromStash(handle a) </code>
</td><td> Drops the selected item out of this unit's stash.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.FindAbilityByName" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.FindAbilityByName"> FindAbilityByName</a>
</td><td> <code>handle FindAbilityByName(string a) </code>
</td><td> Retrieve an ability by name from the unit.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.ForceKill" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.ForceKill"> ForceKill</a>
</td><td> <code>void ForceKill(bool a) </code>
</td><td> Kill this unit immediately.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAbilityByIndex" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetAbilityByIndex"> GetAbilityByIndex</a>
</td><td> <code>handle GetAbilityByIndex(int a) </code>
</td><td> Retrieve an ability by index from the unit.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAbilityCount" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetAbilityCount"> GetAbilityCount</a>
</td><td> <code>int GetAbilityCount() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAcquisitionRange" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetAcquisitionRange"> GetAcquisitionRange</a>
</td><td> <code>float GetAcquisitionRange() </code>
</td><td> Gets the range at which this unit will auto-acquire.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAdditionalBattleMusicWeight" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetAdditionalBattleMusicWeight"> GetAdditionalBattleMusicWeight</a>
</td><td> <code>float GetAdditionalBattleMusicWeight() </code>
</td><td> Combat involving this creature will have this weight added to the music calcuations
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAttackAnimationPoint" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetAttackAnimationPoint"> GetAttackAnimationPoint</a>
</td><td> <code>float GetAttackAnimationPoint() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAttackDamage" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetAttackDamage"> GetAttackDamage</a>
</td><td> <code>int GetAttackDamage() </code>
</td><td> Returns a random integer between the minimum and maximum base damage of the unit.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAttackRange" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetAttackRange"> GetAttackRange</a>
</td><td> <code>float GetAttackRange() </code>
</td><td> Gets this unit's attack range after all modifiers.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAttackRangeBuffer" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetAttackRangeBuffer"> GetAttackRangeBuffer</a>
</td><td> <code>float GetAttackRangeBuffer() </code>
</td><td> Gets the attack range buffer.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAttackSpeed" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetAttackSpeed"> GetAttackSpeed</a>
</td><td> <code>float GetAttackSpeed() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAttacksPerSecond" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetAttacksPerSecond"> GetAttacksPerSecond</a>
</td><td> <code>float GetAttacksPerSecond() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAttackTarget" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetAttackTarget"> GetAttackTarget</a>
</td><td> <code>handle GetAttackTarget() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAverageTrueAttackDamage" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetAverageTrueAttackDamage"> GetAverageTrueAttackDamage</a>
</td><td> <code>int GetAverageTrueAttackDamage() </code>
</td><td> Returns the average value of the minimum and maximum damage values.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetBaseAttackRange" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetBaseAttackRange"> GetBaseAttackRange</a>
</td><td> <code>int GetBaseAttackRange() </code>
</td><td> Gets this unit's attack range before modifiers.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetBaseAttackTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetBaseAttackTime"> GetBaseAttackTime</a>
</td><td> <code>float GetBaseAttackTime() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetBaseDamageMax" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetBaseDamageMax"> GetBaseDamageMax</a>
</td><td> <code>int GetBaseDamageMax() </code>
</td><td> Gets the minimum base damage.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetBaseDamageMin" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetBaseDamageMin"> GetBaseDamageMin</a>
</td><td> <code>int GetBaseDamageMin() </code>
</td><td> Gets the minimum base damage.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetBaseDayTimeVisionRange" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetBaseDayTimeVisionRange"> GetBaseDayTimeVisionRange</a>
</td><td> <code>int GetBaseDayTimeVisionRange() </code>
</td><td> Returns the vision range before modifiers.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetBaseHealthRegen" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetBaseHealthRegen"> GetBaseHealthRegen</a>
</td><td> <code>float GetBaseHealthRegen() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetBaseMagicalResistanceValue" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetBaseMagicalResistanceValue"> GetBaseMagicalResistanceValue</a>
</td><td> <code>float GetBaseMagicalResistanceValue() </code>
</td><td> Returns base magical armor value.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetBaseMaxHealth" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetBaseMaxHealth"> GetBaseMaxHealth</a>
</td><td> <code>float GetBaseMaxHealth() </code>
</td><td> Gets the base max health value.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetBaseMoveSpeed" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetBaseMoveSpeed"> GetBaseMoveSpeed</a>
</td><td> <code>float GetBaseMoveSpeed() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetBaseNightTimeVisionRange" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetBaseNightTimeVisionRange"> GetBaseNightTimeVisionRange</a>
</td><td> <code>int GetBaseNightTimeVisionRange() </code>
</td><td> Returns the vision range before modifiers.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetCastPoint" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetCastPoint"> GetCastPoint</a>
</td><td> <code>float GetCastPoint(bool a) </code>
</td><td> Parameter: bAttack
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetCollisionPadding" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetCollisionPadding"> GetCollisionPadding</a>
</td><td> <code>float GetCollisionPadding() </code>
</td><td> Returns the size of the collision padding around the hull.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetConstantBasedManaRegen" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetConstantBasedManaRegen"> GetConstantBasedManaRegen</a>
</td><td> <code>float GetConstantBasedManaRegen() </code>
</td><td> This Mana regen is derived from constant bonuses like Basilius.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetCreationTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetCreationTime"> GetCreationTime</a>
</td><td> <code>float GetCreationTime() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetCurrentActiveAbility" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetCurrentActiveAbility"> GetCurrentActiveAbility</a>
</td><td> <code>handle GetCurrentActiveAbility() </code>
</td><td> Get the ability this unit is currently casting.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetCurrentVisionRange" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetCurrentVisionRange"> GetCurrentVisionRange</a>
</td><td> <code>int GetCurrentVisionRange() </code>
</td><td> Gets the current vision range.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetCursorCastTarget" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetCursorCastTarget"> GetCursorCastTarget</a>
</td><td> <code>handle GetCursorCastTarget() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetCursorPosition" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetCursorPosition"> GetCursorPosition</a>
</td><td> <code>Vector GetCursorPosition() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetCursorTargetingNothing" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetCursorTargetingNothing"> GetCursorTargetingNothing</a>
</td><td> <code>bool GetCursorTargetingNothing() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetDayTimeVisionRange" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetDayTimeVisionRange"> GetDayTimeVisionRange</a>
</td><td> <code>int GetDayTimeVisionRange() </code>
</td><td> Returns the vision range after modifiers.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetDeathXP" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetDeathXP"> GetDeathXP</a>
</td><td> <code>int GetDeathXP() </code>
</td><td> Get the XP bounty on this unit
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetForceAttackTarget" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetForceAttackTarget"> GetForceAttackTarget</a>
</td><td> <code>handle GetForceAttackTarget() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetGoldBounty" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetGoldBounty"> GetGoldBounty</a>
</td><td> <code>int GetGoldBounty() </code>
</td><td> Get the gold bounty on this unit
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetHasteFactor" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetHasteFactor"> GetHasteFactor</a>
</td><td> <code>float GetHasteFactor() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetHealth" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetHealth"> GetHealth</a>
</td><td> <code>int GetHealth() </code>
</td><td> Get the health of this unit.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetHealthDeficit" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetHealthDeficit"> GetHealthDeficit</a>
</td><td> <code>int GetHealthDeficit() </code>
</td><td> Returns integer amount of health missing from max.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetHealthPercent" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetHealthPercent"> GetHealthPercent</a>
</td><td> <code>int GetHealthPercent() </code>
</td><td> Get the current health percent of the unit.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetHealthRegen" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetHealthRegen"> GetHealthRegen</a>
</td><td> <code>float GetHealthRegen() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetHullRadius" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetHullRadius"> GetHullRadius</a>
</td><td> <code>float GetHullRadius() </code>
</td><td> Get the collision hull radius of this NPC
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetIdealSpeed" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetIdealSpeed"> GetIdealSpeed</a>
</td><td> <code>float GetIdealSpeed() </code>
</td><td> Returns speed after all modifiers.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetIncreasedAttackSpeed" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetIncreasedAttackSpeed"> GetIncreasedAttackSpeed</a>
</td><td> <code>float GetIncreasedAttackSpeed() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetInitialGoalEntity" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetInitialGoalEntity"> GetInitialGoalEntity</a>
</td><td> <code>handle GetInitialGoalEntity() </code>
</td><td> Returns the initial waypoint goal for this NPC
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetItemInSlot" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetItemInSlot"> GetItemInSlot</a>
</td><td> <code>handle GetItemInSlot(int a) </code>
</td><td> Returns nth item in inventory slot (index is zero based)
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetLastIdleChangeTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetLastIdleChangeTime"> GetLastIdleChangeTime</a>
</td><td> <code>float GetLastIdleChangeTime() </code>
</td><td> Get the last game time that this unit switched to/from idle state.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetLevel" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetLevel"> GetLevel</a>
</td><td> <code>int GetLevel() </code>
</td><td> Returns the level of this unit.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetMagicalArmorValue" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetMagicalArmorValue"> GetMagicalArmorValue</a>
</td><td> <code>float GetMagicalArmorValue() </code>
</td><td> Returns current magical armor value.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetMainControllingPlayer" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetMainControllingPlayer"> GetMainControllingPlayer</a>
</td><td> <code>int GetMainControllingPlayer() </code>
</td><td> Returns the player ID of the controlling player.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetMana" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetMana"> GetMana</a>
</td><td> <code>float GetMana() </code>
</td><td> Get the mana on this unit.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetManaPercent" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetManaPercent"> GetManaPercent</a>
</td><td> <code>int GetManaPercent() </code>
</td><td> Get the percent of mana remaining.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetManaRegen" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetManaRegen"> GetManaRegen</a>
</td><td> <code>float GetManaRegen() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetMaxHealth" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetMaxHealth"> GetMaxHealth</a>
</td><td> <code>int GetMaxHealth() </code>
</td><td> Get the maximum health of this unit.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetMaxMana" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetMaxMana"> GetMaxMana</a>
</td><td> <code>float GetMaxMana() </code>
</td><td> Get the maximum mana of this unit.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetModelRadius" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetModelRadius"> GetModelRadius</a>
</td><td> <code>float GetModelRadius() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetModifierCount" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetModifierCount"> GetModifierCount</a>
</td><td> <code>int GetModifierCount() </code>
</td><td> How many modifiers does this unit have?
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetModifierNameByIndex" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetModifierNameByIndex"> GetModifierNameByIndex</a>
</td><td> <code>string GetModifierNameByIndex(int a) </code>
</td><td> Get a modifier name by index.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetMoveSpeedModifier" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetMoveSpeedModifier"> GetMoveSpeedModifier</a>
</td><td> <code>float GetMoveSpeedModifier(float a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetMustReachEachGoalEntity" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetMustReachEachGoalEntity"> GetMustReachEachGoalEntity</a>
</td><td> <code>bool GetMustReachEachGoalEntity() </code>
</td><td> Get whether this NPC is required to reach each goal entity, rather than being allowed to 'unkink' their path
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetNightTimeVisionRange" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetNightTimeVisionRange"> GetNightTimeVisionRange</a>
</td><td> <code>int GetNightTimeVisionRange() </code>
</td><td> Returns the vision range after modifiers.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetOpposingTeamNumber" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetOpposingTeamNumber"> GetOpposingTeamNumber</a>
</td><td> <code>int GetOpposingTeamNumber() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetPaddedCollisionRadius" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetPaddedCollisionRadius"> GetPaddedCollisionRadius</a>
</td><td> <code>float GetPaddedCollisionRadius() </code>
</td><td> Get the collision hull radius (including padding) of this NPC
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetPercentageBasedManaRegen" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetPercentageBasedManaRegen"> GetPercentageBasedManaRegen</a>
</td><td> <code>float GetPercentageBasedManaRegen() </code>
</td><td> This Mana regen is derived from&nbsp;% bonuses (from items like Void Stone).
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetPhysicalArmorBaseValue" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetPhysicalArmorBaseValue"> GetPhysicalArmorBaseValue</a>
</td><td> <code>float GetPhysicalArmorBaseValue() </code>
</td><td> Returns base physical armor value.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetPhysicalArmorValue" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetPhysicalArmorValue"> GetPhysicalArmorValue</a>
</td><td> <code>float GetPhysicalArmorValue() </code>
</td><td> Returns current physical armor value.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetPlayerOwner" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetPlayerOwner"> GetPlayerOwner</a>
</td><td> <code>handle GetPlayerOwner() </code>
</td><td> Returns the player that owns this unit
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetPlayerOwnerID" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetPlayerOwnerID"> GetPlayerOwnerID</a>
</td><td> <code>int GetPlayerOwnerID() </code>
</td><td> Get the owner player ID for this unit.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetProjectileSpeed" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetProjectileSpeed"> GetProjectileSpeed</a>
</td><td> <code>int GetProjectileSpeed() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetRangeToUnit" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetRangeToUnit"> GetRangeToUnit</a>
</td><td> <code>float GetRangeToUnit(handle a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetSecondsPerAttack" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetSecondsPerAttack"> GetSecondsPerAttack</a>
</td><td> <code>float GetSecondsPerAttack() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetStatsBasedManaRegen" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetStatsBasedManaRegen"> GetStatsBasedManaRegen</a>
</td><td> <code>float GetStatsBasedManaRegen() </code>
</td><td> Returns mana regen rate per intelligence.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetTeamNumber" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetTeamNumber"> GetTeamNumber</a>
</td><td> <code>int GetTeamNumber() </code>
</td><td> Get the team number of this unit.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetTotalPurchasedUpgradeGoldCost" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetTotalPurchasedUpgradeGoldCost"> GetTotalPurchasedUpgradeGoldCost</a>
</td><td> <code>int GetTotalPurchasedUpgradeGoldCost() </code>
</td><td> Get how much gold has been spent on ability upgrades.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetUnitLabel" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetUnitLabel"> GetUnitLabel</a>
</td><td> <code>string GetUnitLabel() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetUnitName" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GetUnitName"> GetUnitName</a>
</td><td> <code>string GetUnitName() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GiveMana" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.GiveMana"> GiveMana</a>
</td><td> <code>void GiveMana(float a) </code>
</td><td> Give mana to this unit, this can be used for mana gained by abilities or item usage.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.HasAbility" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.HasAbility"> HasAbility</a>
</td><td> <code>bool HasAbility(string a) </code>
</td><td> See whether this unit has an ability by name.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.HasAttackCapability" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.HasAttackCapability"> HasAttackCapability</a>
</td><td> <code>bool HasAttackCapability() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.HasFlyingVision" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.HasFlyingVision"> HasFlyingVision</a>
</td><td> <code>bool HasFlyingVision() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.HasFlyMovementCapability" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.HasFlyMovementCapability"> HasFlyMovementCapability</a>
</td><td> <code>bool HasFlyMovementCapability() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.HasGroundMovementCapability" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.HasGroundMovementCapability"> HasGroundMovementCapability</a>
</td><td> <code>bool HasGroundMovementCapability() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.HasInventory" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.HasInventory"> HasInventory</a>
</td><td> <code>bool HasInventory() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.HasItemInInventory" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.HasItemInInventory"> HasItemInInventory</a>
</td><td> <code>bool HasItemInInventory(string a) </code>
</td><td> See whether this unit has an item by name.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.HasModifier" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.HasModifier"> HasModifier</a>
</td><td> <code>bool HasModifier(string a) </code>
</td><td> Sees if this unit has a given modifier
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.HasMovementCapability" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.HasMovementCapability"> HasMovementCapability</a>
</td><td> <code>bool HasMovementCapability() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.HasScepter" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.HasScepter"> HasScepter</a>
</td><td> <code>bool HasScepter() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.Heal" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.Heal"> Heal</a>
</td><td> <code>void Heal(float a, handle b) </code>
</td><td> Heal this unit.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.Hold" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.Hold"> Hold</a>
</td><td> <code>void Hold() </code>
</td><td> Hold position.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.Interrupt" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.Interrupt"> Interrupt</a>
</td><td> <code>void Interrupt() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.InterruptChannel" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.InterruptChannel"> InterruptChannel</a>
</td><td> <code>void InterruptChannel() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.InterruptMotionControllers" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.InterruptMotionControllers"> InterruptMotionControllers</a>
</td><td> <code>void InterruptMotionControllers(bool a) </code>
</td><td> Parameter boolean determines finding clear space.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsAlive" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsAlive"> IsAlive</a>
</td><td> <code>bool IsAlive() </code>
</td><td> Is this unit alive?
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsAncient" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsAncient"> IsAncient</a>
</td><td> <code>bool IsAncient() </code>
</td><td> Is this creature an Ancient?
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsAttackImmune" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsAttackImmune"> IsAttackImmune</a>
</td><td> <code>bool IsAttackImmune() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsAttacking" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsAttacking"> IsAttacking</a>
</td><td> <code>bool IsAttacking() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsAttackingEntity" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsAttackingEntity"> IsAttackingEntity</a>
</td><td> <code>bool IsAttackingEntity(handle a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsBlind" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsBlind"> IsBlind</a>
</td><td> <code>bool IsBlind() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsBlockDisabled" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsBlockDisabled"> IsBlockDisabled</a>
</td><td> <code>bool IsBlockDisabled() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsCommandRestricted" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsCommandRestricted"> IsCommandRestricted</a>
</td><td> <code>bool IsCommandRestricted() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsControllableByAnyPlayer" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsControllableByAnyPlayer"> IsControllableByAnyPlayer</a>
</td><td> <code>bool IsControllableByAnyPlayer() </code>
</td><td> Is this unit controlled by any non-bot player?
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsCreature" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsCreature"> IsCreature</a>
</td><td> <code>bool IsCreature() </code>
</td><td> Is this a Creature type NPC
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsDeniable" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsDeniable"> IsDeniable</a>
</td><td> <code>bool IsDeniable() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsDisarmed" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsDisarmed"> IsDisarmed</a>
</td><td> <code>bool IsDisarmed() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsDominated" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsDominated"> IsDominated</a>
</td><td> <code>bool IsDominated() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsEvadeDisabled" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsEvadeDisabled"> IsEvadeDisabled</a>
</td><td> <code>bool IsEvadeDisabled() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsFrozen" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsFrozen"> IsFrozen</a>
</td><td> <code>bool IsFrozen() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsHardDisarmed" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsHardDisarmed"> IsHardDisarmed</a>
</td><td> <code>bool IsHardDisarmed() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsHero" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsHero"> IsHero</a>
</td><td> <code>bool IsHero() </code>
</td><td> Is this a hero or hero illusion?
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsHexed" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsHexed"> IsHexed</a>
</td><td> <code>bool IsHexed() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsIdle" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsIdle"> IsIdle</a>
</td><td> <code>bool IsIdle() </code>
</td><td> Is this creature currently idle?
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsIllusion" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsIllusion"> IsIllusion</a>
</td><td> <code>bool IsIllusion() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsInvisible" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsInvisible"> IsInvisible</a>
</td><td> <code>bool IsInvisible() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsInvulnerable" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsInvulnerable"> IsInvulnerable</a>
</td><td> <code>bool IsInvulnerable() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsLowAttackPriority" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsLowAttackPriority"> IsLowAttackPriority</a>
</td><td> <code>bool IsLowAttackPriority() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsMagicImmune" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsMagicImmune"> IsMagicImmune</a>
</td><td> <code>bool IsMagicImmune() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsMechanical" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsMechanical"> IsMechanical</a>
</td><td> <code>bool IsMechanical() </code>
</td><td> Is the unit mechanical?
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsMovementImpaired" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsMovementImpaired"> IsMovementImpaired</a>
</td><td> <code>bool IsMovementImpaired() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsMuted" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsMuted"> IsMuted</a>
</td><td> <code>bool IsMuted() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsNeutralUnitType" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsNeutralUnitType"> IsNeutralUnitType</a>
</td><td> <code>bool IsNeutralUnitType() </code>
</td><td> Is this a neutral?
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsNightmared" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsNightmared"> IsNightmared</a>
</td><td> <code>bool IsNightmared() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsOpposingTeam" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsOpposingTeam"> IsOpposingTeam</a>
</td><td> <code>bool IsOpposingTeam(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsOutOfGame" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsOutOfGame"> IsOutOfGame</a>
</td><td> <code>bool IsOutOfGame() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsOwnedByAnyPlayer" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsOwnedByAnyPlayer"> IsOwnedByAnyPlayer</a>
</td><td> <code>bool IsOwnedByAnyPlayer() </code>
</td><td> Is this unit owned by any non-bot player?
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsPhantom" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsPhantom"> IsPhantom</a>
</td><td> <code>bool IsPhantom() </code>
</td><td> Is this a phantom unit?
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsPhantomBlocker" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsPhantomBlocker"> IsPhantomBlocker</a>
</td><td> <code>bool IsPhantomBlocker() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsPhased" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsPhased"> IsPhased</a>
</td><td> <code>bool IsPhased() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsPositionInRange" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsPositionInRange"> IsPositionInRange</a>
</td><td> <code>bool IsPositionInRange(Vector a, float b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsRangedAttacker" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsRangedAttacker"> IsRangedAttacker</a>
</td><td> <code>bool IsRangedAttacker() </code>
</td><td> Is this unit a ranged attacker?
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsRealHero" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsRealHero"> IsRealHero</a>
</td><td> <code>bool IsRealHero() </code>
</td><td> Returns true if the hero is a true Hero, not a creep or an Illusion of a hero
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsRooted" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsRooted"> IsRooted</a>
</td><td> <code>bool IsRooted() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsSilenced" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsSilenced"> IsSilenced</a>
</td><td> <code>bool IsSilenced() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsSoftDisarmed" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsSoftDisarmed"> IsSoftDisarmed</a>
</td><td> <code>bool IsSoftDisarmed() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsSpeciallyDeniable" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsSpeciallyDeniable"> IsSpeciallyDeniable</a>
</td><td> <code>bool IsSpeciallyDeniable() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsStunned" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsStunned"> IsStunned</a>
</td><td> <code>bool IsStunned() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsSummoned" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsSummoned"> IsSummoned</a>
</td><td> <code>bool IsSummoned() </code>
</td><td> Is this unit summoned?
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsTower" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsTower"> IsTower</a>
</td><td> <code>bool IsTower() </code>
</td><td> Is this a tower?
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsUnableToMiss" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsUnableToMiss"> IsUnableToMiss</a>
</td><td> <code>bool IsUnableToMiss() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsUnselectable" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.IsUnselectable"> IsUnselectable</a>
</td><td> <code>bool IsUnselectable() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.Kill" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.Kill"> Kill</a>
</td><td> <code>void Kill(handle a, handle b) </code>
</td><td> Kills this NPC, with the params Ability and Attacker
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.MakeIllusion" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.MakeIllusion"> MakeIllusion</a>
</td><td> <code>void MakeIllusion() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.MakePhantomBlocker" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.MakePhantomBlocker"> MakePhantomBlocker</a>
</td><td> <code>void MakePhantomBlocker() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.MakeVisibleDueToAttack" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.MakeVisibleDueToAttack"> MakeVisibleDueToAttack</a>
</td><td> <code>void MakeVisibleDueToAttack(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.MakeVisibleToTeam" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.MakeVisibleToTeam"> MakeVisibleToTeam</a>
</td><td> <code>void MakeVisibleToTeam(int a, float b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.ModifyHealth" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.ModifyHealth"> ModifyHealth</a>
</td><td> <code>void ModifyHealth(int a, handle b, bool c, int d) </code>
</td><td> Sets the health to a specific value, with optional flags or inflictors.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.MoveToNPC" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.MoveToNPC"> MoveToNPC</a>
</td><td> <code>void MoveToNPC(handle a) </code>
</td><td> Move to follow a unit.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.MoveToNPCToGiveItem" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.MoveToNPCToGiveItem"> MoveToNPCToGiveItem</a>
</td><td> <code>void MoveToNPCToGiveItem(handle a, handle b) </code>
</td><td> Give an item to another unit.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.MoveToPosition" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.MoveToPosition"> MoveToPosition</a>
</td><td> <code>void MoveToPosition(Vector a) </code>
</td><td> Issue a Move-To command
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.MoveToPositionAggressive" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.MoveToPositionAggressive"> MoveToPositionAggressive</a>
</td><td> <code>void MoveToPositionAggressive(Vector a) </code>
</td><td> Issue an Attack-Move-To command
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.MoveToTargetToAttack" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.MoveToTargetToAttack"> MoveToTargetToAttack</a>
</td><td> <code>void MoveToTargetToAttack(handle a) </code>
</td><td> Move to a target to attack.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.NoHealthBar" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.NoHealthBar"> NoHealthBar</a>
</td><td> <code>bool NoHealthBar() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.NoTeamMoveTo" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.NoTeamMoveTo"> NoTeamMoveTo</a>
</td><td> <code>bool NoTeamMoveTo() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.NoTeamSelect" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.NoTeamSelect"> NoTeamSelect</a>
</td><td> <code>bool NoTeamSelect() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.NotOnMinimap" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.NotOnMinimap"> NotOnMinimap</a>
</td><td> <code>bool NotOnMinimap() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.NotOnMinimapForEnemies" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.NotOnMinimapForEnemies"> NotOnMinimapForEnemies</a>
</td><td> <code>bool NotOnMinimapForEnemies() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.NoUnitCollision" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.NoUnitCollision"> NoUnitCollision</a>
</td><td> <code>bool NoUnitCollision() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.PassivesDisabled" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.PassivesDisabled"> PassivesDisabled</a>
</td><td> <code>bool PassivesDisabled() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.PerformAttack" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.PerformAttack"> PerformAttack</a>
</td><td> <code>void PerformAttack(handle a, bool b, bool c, bool d, bool e) </code>
</td><td> Performs an attack on a target. Params: Target, bUseCastAttackOrb, bProcessProcs, bSkipCooldown, bIgnoreInvis
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.PickupDroppedItem" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.PickupDroppedItem"> PickupDroppedItem</a>
</td><td> <code>void PickupDroppedItem(handle a) </code>
</td><td> Pick up a dropped item.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.PickupRune" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.PickupRune"> PickupRune</a>
</td><td> <code>void PickupRune(handle a) </code>
</td><td> Pick up a rune.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.ProvidesVision" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.ProvidesVision"> ProvidesVision</a>
</td><td> <code>bool ProvidesVision() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.ReduceMana" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.ReduceMana"> ReduceMana</a>
</td><td> <code>void ReduceMana(float a) </code>
</td><td> Remove mana from this unit, this can be used for involuntary mana loss, not for mana that is spent.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.RemoveAbility" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.RemoveAbility"> RemoveAbility</a>
</td><td> <code>void RemoveAbility(string a) </code>
</td><td> Remove an ability from this unit by name.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.RemoveItem" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.RemoveItem"> RemoveItem</a>
</td><td> <code>void RemoveItem(handle a) </code>
</td><td> Removes the passed item from this unit's inventory.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.RemoveModifierByName" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.RemoveModifierByName"> RemoveModifierByName</a>
</td><td> <code>void RemoveModifierByName(string a) </code>
</td><td> Removes a modifier
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.RemoveModifierByNameAndCaster" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.RemoveModifierByNameAndCaster"> RemoveModifierByNameAndCaster</a>
</td><td> <code>void RemoveModifierByNameAndCaster(string a, handle b) </code>
</td><td> Removes a modifier that was cast by the given caster
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.RemoveNoDraw" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.RemoveNoDraw"> RemoveNoDraw</a>
</td><td> <code>void RemoveNoDraw() </code>
</td><td> Remove the no draw flag.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.RespawnUnit" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.RespawnUnit"> RespawnUnit</a>
</td><td> <code>void RespawnUnit() </code>
</td><td> Respawns the target unit if it can be respawned.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SellItem" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SellItem"> SellItem</a>
</td><td> <code>void SellItem(handle a) </code>
</td><td> Sells the passed item in this unit's inventory.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetAdditionalBattleMusicWeight" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetAdditionalBattleMusicWeight"> SetAdditionalBattleMusicWeight</a>
</td><td> <code>void SetAdditionalBattleMusicWeight(float a) </code>
</td><td> Combat involving this creature will have this weight added to the music calcuations
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetAttackCapability" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetAttackCapability"> SetAttackCapability</a>
</td><td> <code>void SetAttackCapability(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetAttacking" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetAttacking"> SetAttacking</a>
</td><td> <code>void SetAttacking(handle a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetBaseAttackTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetBaseAttackTime"> SetBaseAttackTime</a>
</td><td> <code>void SetBaseAttackTime(float a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetBaseDamageMax" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetBaseDamageMax"> SetBaseDamageMax</a>
</td><td> <code>void SetBaseDamageMax(int a) </code>
</td><td> Sets the minimum base damage.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetBaseDamageMin" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetBaseDamageMin"> SetBaseDamageMin</a>
</td><td> <code>void SetBaseDamageMin(int a) </code>
</td><td> Sets the minimum base damage.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetBaseHealthRegen" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetBaseHealthRegen"> SetBaseHealthRegen</a>
</td><td> <code>void SetBaseHealthRegen(float a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetBaseMagicalResistanceValue" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetBaseMagicalResistanceValue"> SetBaseMagicalResistanceValue</a>
</td><td> <code>void SetBaseMagicalResistanceValue(float a) </code>
</td><td> Sets base magical armor value.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetBaseManaRegen" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetBaseManaRegen"> SetBaseManaRegen</a>
</td><td> <code>void SetBaseManaRegen(float a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetBaseMaxHealth" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetBaseMaxHealth"> SetBaseMaxHealth</a>
</td><td> <code>void SetBaseMaxHealth(float a) </code>
</td><td> Set a new base max health value.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetBaseMoveSpeed" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetBaseMoveSpeed"> SetBaseMoveSpeed</a>
</td><td> <code>void SetBaseMoveSpeed(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetControllableByPlayer" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetControllableByPlayer"> SetControllableByPlayer</a>
</td><td> <code>void SetControllableByPlayer(int a, bool b) </code>
</td><td> Set this unit controllable by the player with the passed ID.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetCursorCastTarget" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetCursorCastTarget"> SetCursorCastTarget</a>
</td><td> <code>void SetCursorCastTarget(handle a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetCursorPosition" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetCursorPosition"> SetCursorPosition</a>
</td><td> <code>void SetCursorPosition(Vector a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetCursorTargetingNothing" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetCursorTargetingNothing"> SetCursorTargetingNothing</a>
</td><td> <code>void SetCursorTargetingNothing(bool a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetDayTimeVisionRange" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetDayTimeVisionRange"> SetDayTimeVisionRange</a>
</td><td> <code>void SetDayTimeVisionRange(int a) </code>
</td><td> Set the base vision range.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetDeathXP" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetDeathXP"> SetDeathXP</a>
</td><td> <code>void SetDeathXP(int a) </code>
</td><td> Set the XP bounty on this unit
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetForceAttackTarget" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetForceAttackTarget"> SetForceAttackTarget</a>
</td><td> <code>void SetForceAttackTarget(handle a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetHasInventory" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetHasInventory"> SetHasInventory</a>
</td><td> <code>void SetHasInventory(bool a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetHullRadius" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetHullRadius"> SetHullRadius</a>
</td><td> <code>void SetHullRadius(float a) </code>
</td><td> Set the collision hull radius of this NPC
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetIdleAcquire" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetIdleAcquire"> SetIdleAcquire</a>
</td><td> <code>void SetIdleAcquire(bool a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetInitialGoalEntity" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetInitialGoalEntity"> SetInitialGoalEntity</a>
</td><td> <code>void SetInitialGoalEntity(handle a) </code>
</td><td> Sets the initial waypoint goal for this NPC
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetMana" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetMana"> SetMana</a>
</td><td> <code>void SetMana(float a) </code>
</td><td> Set the mana on this unit.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetMaximumGoldBounty" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetMaximumGoldBounty"> SetMaximumGoldBounty</a>
</td><td> <code>void SetMaximumGoldBounty(int a) </code>
</td><td> Set the maximum gold bounty for this unit.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetMinimumGoldBounty" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetMinimumGoldBounty"> SetMinimumGoldBounty</a>
</td><td> <code>void SetMinimumGoldBounty(int a) </code>
</td><td> Set the minimum gold bounty for this unit.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetMoveCapability" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetMoveCapability"> SetMoveCapability</a>
</td><td> <code>void SetMoveCapability(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetMustReachEachGoalEntity" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetMustReachEachGoalEntity"> SetMustReachEachGoalEntity</a>
</td><td> <code>void SetMustReachEachGoalEntity(bool a) </code>
</td><td> Set whether this NPC is required to reach each goal entity, rather than being allowed to 'unkink' their path
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetNeverMoveToClearSpace" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetNeverMoveToClearSpace"> SetNeverMoveToClearSpace</a>
</td><td> <code>void SetNeverMoveToClearSpace(bool a) </code>
</td><td> If set to true, we will never attempt to move this unit to clear space, even when it unphases.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetNightTimeVisionRange" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetNightTimeVisionRange"> SetNightTimeVisionRange</a>
</td><td> <code>void SetNightTimeVisionRange(int a) </code>
</td><td> Set the base vision range.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetOriginalModel" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetOriginalModel"> SetOriginalModel</a>
</td><td> <code>void SetOriginalModel(string originalModel) </code>
</td><td> Sets the original model of this entity, which it will tend to fall back to anytime its state changes
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetPhysicalArmorBaseValue" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetPhysicalArmorBaseValue"> SetPhysicalArmorBaseValue</a>
</td><td> <code>void SetPhysicalArmorBaseValue(float a) </code>
</td><td> Sets base physical armor value.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetRangedProjectileName" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetRangedProjectileName"> SetRangedProjectileName</a>
</td><td> <code>void SetRangedProjectileName(string a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetStolenScepter" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetStolenScepter"> SetStolenScepter</a>
</td><td> <code>void SetStolenScepter(bool a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetUnitName" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SetUnitName"> SetUnitName</a>
</td><td> <code>void SetUnitName(string a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.ShouldIdleAcquire" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.ShouldIdleAcquire"> ShouldIdleAcquire</a>
</td><td> <code>bool ShouldIdleAcquire() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SpendMana" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SpendMana"> SpendMana</a>
</td><td> <code>void SpendMana(float a, handle b) </code>
</td><td> Spend mana from this unit, this can be used for spending mana from abilities or item usage.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.Stop" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.Stop"> Stop</a>
</td><td> <code>void Stop() </code>
</td><td> Stop the current order.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SwapAbilities" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.SwapAbilities"> SwapAbilities</a>
</td><td> <code>void SwapAbilities(string a, string b, bool c, bool d) </code>
</td><td> Swaps the slots of the two passed abilities and sets them 
enabled/disabled: const char* AbilityName1, const char* AbilityName2, <i>bool</i> bEnable1, <i>bool</i>
 bEnable2. The boolean controls which ability is active. The ability 
order is never swapped when swapping abilities, only the boolean 
statements are flipped.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.TimeUntilNextAttack" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.TimeUntilNextAttack"> TimeUntilNextAttack</a>
</td><td> <code>float TimeUntilNextAttack() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.TriggerModifierDodge" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.TriggerModifierDodge"> TriggerModifierDodge</a>
</td><td> <code>bool TriggerModifierDodge() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.TriggerSpellAbsorb" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.TriggerSpellAbsorb"> TriggerSpellAbsorb</a>
</td><td> <code>bool TriggerSpellAbsorb(handle a) </code>
</td><td> Query whether the passed ability will trigger spell absorb on this unit.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.UnitCanRespawn" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC.UnitCanRespawn"> UnitCanRespawn</a>
</td><td> <code>bool UnitCanRespawn() </code>
</td><td> 无
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=20" title="Edit section: CDOTA BaseNPC Hero">编辑</a>]</span> <span class="mw-headline" id="CDOTA_BaseNPC_Hero"> CDOTA_BaseNPC_Hero </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CDOTA_BaseNPC"> CDOTA_BaseNPC</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p>'
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.AddExperience" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.AddExperience"> AddExperience</a>
</td><td> <code>bool AddExperience(float amount, bool applyBotDifficultyScaling) </code>
</td><td> Adds experience to this unit.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.Buyback" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.Buyback"> Buyback</a>
</td><td> <code>void Buyback() </code>
</td><td> Spend the gold and buyback with this hero.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.CalculateStatBonus" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.CalculateStatBonus"> CalculateStatBonus</a>
</td><td> <code>void CalculateStatBonus() </code>
</td><td> Recalculate all stats after the hero gains stats.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.CanEarnGold" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.CanEarnGold"> CanEarnGold</a>
</td><td> <code>bool CanEarnGold() </code>
</td><td> Returns boolean value result of buyback gold limit time less than game time.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.ClearLastHitMultikill" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.ClearLastHitMultikill"> ClearLastHitMultikill</a>
</td><td> <code>void ClearLastHitMultikill() </code>
</td><td> Value is stored in PlayerResource.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.ClearLastHitStreak" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.ClearLastHitStreak"> ClearLastHitStreak</a>
</td><td> <code>void ClearLastHitStreak() </code>
</td><td> Value is stored in PlayerResource.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.ClearStreak" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.ClearStreak"> ClearStreak</a>
</td><td> <code>void ClearStreak() </code>
</td><td> Value is stored in PlayerResource.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetAbilityPoints" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetAbilityPoints"> GetAbilityPoints</a>
</td><td> <code>int GetAbilityPoints() </code>
</td><td> Gets the current unspent ability point's.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetAgility" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetAgility"> GetAgility</a>
</td><td> <code>float GetAgility() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetAgilityGain" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetAgilityGain"> GetAgilityGain</a>
</td><td> <code>float GetAgilityGain() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetAssists" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetAssists"> GetAssists</a>
</td><td> <code>int GetAssists() </code>
</td><td> Value is stored in PlayerResource.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetAttacker" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetAttacker"> GetAttacker</a>
</td><td> <code>int GetAttacker(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetBaseAgility" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetBaseAgility"> GetBaseAgility</a>
</td><td> <code>float GetBaseAgility() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetBaseDamageMax" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetBaseDamageMax"> GetBaseDamageMax</a>
</td><td> <code>int GetBaseDamageMax() </code>
</td><td> Hero damage is also affected by attributes.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetBaseDamageMin" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetBaseDamageMin"> GetBaseDamageMin</a>
</td><td> <code>int GetBaseDamageMin() </code>
</td><td> Hero damage is also affected by attributes.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetBaseIntellect" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetBaseIntellect"> GetBaseIntellect</a>
</td><td> <code>float GetBaseIntellect() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetBaseStrength" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetBaseStrength"> GetBaseStrength</a>
</td><td> <code>float GetBaseStrength() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetBonusDamageFromPrimaryStat" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetBonusDamageFromPrimaryStat"> GetBonusDamageFromPrimaryStat</a>
</td><td> <code>int GetBonusDamageFromPrimaryStat() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetBuybackCooldownTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetBuybackCooldownTime"> GetBuybackCooldownTime</a>
</td><td> <code>float GetBuybackCooldownTime() </code>
</td><td> Return <i>float</i> value for the amount of time left on cooldown for this hero's buyback.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetBuybackCost" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetBuybackCost"> GetBuybackCost</a>
</td><td> <code>int GetBuybackCost() </code>
</td><td> Return integer value for the gold cost of a buyback.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetBuybackGoldLimitTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetBuybackGoldLimitTime"> GetBuybackGoldLimitTime</a>
</td><td> <code>float GetBuybackGoldLimitTime() </code>
</td><td> Returns the amount of time gold gain is limited after buying back.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetCurrentXP" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetCurrentXP"> GetCurrentXP</a>
</td><td> <code>int GetCurrentXP() </code>
</td><td> Returns the amount of XP
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetDeathGoldCost" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetDeathGoldCost"> GetDeathGoldCost</a>
</td><td> <code>int GetDeathGoldCost() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetDeaths" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetDeaths"> GetDeaths</a>
</td><td> <code>int GetDeaths() </code>
</td><td> Value is stored in PlayerResource.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetDenies" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetDenies"> GetDenies</a>
</td><td> <code>int GetDenies() </code>
</td><td> Value is stored in PlayerResource.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetGold" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetGold"> GetGold</a>
</td><td> <code>int GetGold() </code>
</td><td> Returns gold amount for the player owning this hero
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetGoldBounty" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetGoldBounty"> GetGoldBounty</a>
</td><td> <code>int GetGoldBounty() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetHealthRegen" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetHealthRegen"> GetHealthRegen</a>
</td><td> <code>float GetHealthRegen() </code>
</td><td> Hero health regen is affected by attributes.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetIncreasedAttackSpeed" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetIncreasedAttackSpeed"> GetIncreasedAttackSpeed</a>
</td><td> <code>float GetIncreasedAttackSpeed() </code>
</td><td> Hero attack speed is also affected by agility.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetIntellect" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetIntellect"> GetIntellect</a>
</td><td> <code>float GetIntellect() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetIntellectGain" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetIntellectGain"> GetIntellectGain</a>
</td><td> <code>float GetIntellectGain() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetKills" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetKills"> GetKills</a>
</td><td> <code>int GetKills() </code>
</td><td> Value is stored in PlayerResource.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetLastHits" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetLastHits"> GetLastHits</a>
</td><td> <code>int GetLastHits() </code>
</td><td> Value is stored in PlayerResource.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetManaRegen" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetManaRegen"> GetManaRegen</a>
</td><td> <code>float GetManaRegen() </code>
</td><td> Hero mana regen is affected by attributes.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetMostRecentDamageTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetMostRecentDamageTime"> GetMostRecentDamageTime</a>
</td><td> <code>float GetMostRecentDamageTime() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetMultipleKillCount" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetMultipleKillCount"> GetMultipleKillCount</a>
</td><td> <code>int GetMultipleKillCount() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetNumAttackers" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetNumAttackers"> GetNumAttackers</a>
</td><td> <code>int GetNumAttackers() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetPhysicalArmorValue" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetPhysicalArmorValue"> GetPhysicalArmorValue</a>
</td><td> <code>float GetPhysicalArmorValue() </code>
</td><td> Hero armor is affected by attributes.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetPlayerID" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetPlayerID"> GetPlayerID</a>
</td><td> <code>int GetPlayerID() </code>
</td><td> Returns player ID of the player owning this hero
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetPrimaryAttribute" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetPrimaryAttribute"> GetPrimaryAttribute</a>
</td><td> <code>int GetPrimaryAttribute() </code>
</td><td> 0 = strength, 1 = agility, 2 = intelligence.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetPrimaryStatValue" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetPrimaryStatValue"> GetPrimaryStatValue</a>
</td><td> <code>float GetPrimaryStatValue() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetRespawnTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetRespawnTime"> GetRespawnTime</a>
</td><td> <code>float GetRespawnTime() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetStatsBasedManaRegen" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetStatsBasedManaRegen"> GetStatsBasedManaRegen</a>
</td><td> <code>float GetStatsBasedManaRegen() </code>
</td><td> Returns only the regen based on Intelligence.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetStreak" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetStreak"> GetStreak</a>
</td><td> <code>int GetStreak() </code>
</td><td> Value is stored in PlayerResource.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetStrength" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetStrength"> GetStrength</a>
</td><td> <code>float GetStrength() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetStrengthGain" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetStrengthGain"> GetStrengthGain</a>
</td><td> <code>float GetStrengthGain() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetTimeUntilRespawn" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.GetTimeUntilRespawn"> GetTimeUntilRespawn</a>
</td><td> <code>float GetTimeUntilRespawn() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.HasAnyAvailableInventorySpace" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.HasAnyAvailableInventorySpace"> HasAnyAvailableInventorySpace</a>
</td><td> <code>bool HasAnyAvailableInventorySpace() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.HasFlyingVision" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.HasFlyingVision"> HasFlyingVision</a>
</td><td> <code>bool HasFlyingVision() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.HasOwnerAbandoned" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.HasOwnerAbandoned"> HasOwnerAbandoned</a>
</td><td> <code>bool HasOwnerAbandoned() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.HasRoomForItem" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.HasRoomForItem"> HasRoomForItem</a>
</td><td> <code>int HasRoomForItem(string a, bool b, bool c) </code>
</td><td> Args: const char* pItemName, <i>bool</i> bIncludeStashCombines, <i>bool</i> bAllowSelling
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.HeroLevelUp" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.HeroLevelUp"> HeroLevelUp</a>
</td><td> <code>void HeroLevelUp(bool a) </code>
</td><td> Levels up the hero, true or false to play effects.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.IncrementAssists" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.IncrementAssists"> IncrementAssists</a>
</td><td> <code>void IncrementAssists() </code>
</td><td> Value is stored in PlayerResource.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.IncrementDeaths" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.IncrementDeaths"> IncrementDeaths</a>
</td><td> <code>void IncrementDeaths() </code>
</td><td> Value is stored in PlayerResource.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.IncrementDenies" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.IncrementDenies"> IncrementDenies</a>
</td><td> <code>void IncrementDenies() </code>
</td><td> Value is stored in PlayerResource.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.IncrementKills" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.IncrementKills"> IncrementKills</a>
</td><td> <code>void IncrementKills(int kills) </code>
</td><td> Passed ID is for the victim, killer ID is ID of the current hero. Value is stored in PlayerResource.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.IncrementLastHitMultikill" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.IncrementLastHitMultikill"> IncrementLastHitMultikill</a>
</td><td> <code>void IncrementLastHitMultikill() </code>
</td><td> Value is stored in PlayerResource.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.IncrementLastHits" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.IncrementLastHits"> IncrementLastHits</a>
</td><td> <code>void IncrementLastHits() </code>
</td><td> Value is stored in PlayerResource.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.IncrementLastHitStreak" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.IncrementLastHitStreak"> IncrementLastHitStreak</a>
</td><td> <code>void IncrementLastHitStreak() </code>
</td><td> Value is stored in PlayerResource.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.IncrementNearbyCreepDeaths" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.IncrementNearbyCreepDeaths"> IncrementNearbyCreepDeaths</a>
</td><td> <code>void IncrementNearbyCreepDeaths() </code>
</td><td> Value is stored in PlayerResource.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.IncrementStreak" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.IncrementStreak"> IncrementStreak</a>
</td><td> <code>void IncrementStreak() </code>
</td><td> Value is stored in PlayerResource.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.IsBuybackDisabledByReapersScythe" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.IsBuybackDisabledByReapersScythe"> IsBuybackDisabledByReapersScythe</a>
</td><td> <code>bool IsBuybackDisabledByReapersScythe() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.IsReincarnating" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.IsReincarnating"> IsReincarnating</a>
</td><td> <code>bool IsReincarnating() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.KilledHero" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.KilledHero"> KilledHero</a>
</td><td> <code>void KilledHero(handle a, handle b) </code>
</td><td> Args: Hero, Inflictor
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.ModifyAgility" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.ModifyAgility"> ModifyAgility</a>
</td><td> <code>void ModifyAgility(float a) </code>
</td><td> Adds passed value to base attribute value, then calls CalculateStatBonus.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.ModifyGold" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.ModifyGold"> ModifyGold</a>
</td><td> <code>int ModifyGold(int goldAmmt, bool reliable, int reason) </code>
</td><td> Gives this hero some gold. Args: <i>int</i> nGoldChange, <i>bool</i> bReliable, <i>int</i> reason
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.ModifyIntellect" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.ModifyIntellect"> ModifyIntellect</a>
</td><td> <code>void ModifyIntellect(float a) </code>
</td><td> Adds passed value to base attribute value, then calls CalculateStatBonus.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.ModifyStrength" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.ModifyStrength"> ModifyStrength</a>
</td><td> <code>void ModifyStrength(float a) </code>
</td><td> Adds passed value to base attribute value, then calls CalculateStatBonus.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.PerformTaunt" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.PerformTaunt"> PerformTaunt</a>
</td><td> <code>void PerformTaunt() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.RecordLastHit" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.RecordLastHit"> RecordLastHit</a>
</td><td> <code>void RecordLastHit() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.RespawnHero" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.RespawnHero"> RespawnHero</a>
</td><td> <code>void RespawnHero(bool buyback, bool unknown1, bool unknown2) </code>
</td><td>
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetAbilityPoints" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.SetAbilityPoints"> SetAbilityPoints</a>
</td><td> <code>void SetAbilityPoints(int a) </code>
</td><td> Sets the current unspent ability point's.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetBaseAgility" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.SetBaseAgility"> SetBaseAgility</a>
</td><td> <code>void SetBaseAgility(float a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetBaseIntellect" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.SetBaseIntellect"> SetBaseIntellect</a>
</td><td> <code>void SetBaseIntellect(float a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetBaseStrength" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.SetBaseStrength"> SetBaseStrength</a>
</td><td> <code>void SetBaseStrength(float a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetBuybackCooldownTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.SetBuybackCooldownTime"> SetBuybackCooldownTime</a>
</td><td> <code>void SetBuybackCooldownTime(float a) </code>
</td><td> Sets the buyback cooldown time.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetBuyBackDisabledByReapersScythe" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.SetBuyBackDisabledByReapersScythe"> SetBuyBackDisabledByReapersScythe</a>
</td><td> <code>void SetBuyBackDisabledByReapersScythe(bool a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetBuybackGoldLimitTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.SetBuybackGoldLimitTime"> SetBuybackGoldLimitTime</a>
</td><td> <code>void SetBuybackGoldLimitTime(float a) </code>
</td><td> Set the amount of time gold gain is limited after buying back.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetCustomDeathXP" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.SetCustomDeathXP"> SetCustomDeathXP</a>
</td><td> <code>void SetCustomDeathXP(int a) </code>
</td><td> Sets a custom experience value for this hero. <div style="margin:0.4em 1em 0.5em;"><strong style="display:table-cell;text-align:right;white-space:nowrap;padding-right:0.3em;"><img alt="" src="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/Tip.png" height="13" width="10"> Tip:</strong><span style="display:table-cell;">GameRules boolean must be set for this to work!</span></div>
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetGold" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.SetGold"> SetGold</a>
</td><td> <code>void SetGold(int a, bool b) </code>
</td><td> Sets the gold amount for the player owning this hero
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetPlayerID" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.SetPlayerID"> SetPlayerID</a>
</td><td> <code>void SetPlayerID(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetRespawnPosition" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.SetRespawnPosition"> SetRespawnPosition</a>
</td><td> <code>void SetRespawnPosition(Vector a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetTimeUntilRespawn" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.SetTimeUntilRespawn"> SetTimeUntilRespawn</a>
</td><td> <code>void SetTimeUntilRespawn(float a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.ShouldDoFlyHeightVisual" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.ShouldDoFlyHeightVisual"> ShouldDoFlyHeightVisual</a>
</td><td> <code>bool ShouldDoFlyHeightVisual() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SpendGold" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.SpendGold"> SpendGold</a>
</td><td> <code>void SpendGold(int a, int b) </code>
</td><td> Args: <i>int</i> nGold, <i>int</i> nReason
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.UnitCanRespawn" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.UnitCanRespawn"> UnitCanRespawn</a>
</td><td> <code>bool UnitCanRespawn() </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.UpgradeAbility" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.UpgradeAbility"> UpgradeAbility</a>
</td><td> <code>void UpgradeAbility(handle a) </code>
</td><td> This upgrades the passed ability if it exists and the hero has enough ability point's.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.WillReincarnate" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Hero.WillReincarnate"> WillReincarnate</a>
</td><td> <code>bool WillReincarnate() </code>
</td><td> 无
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=21" title="Edit section: CDOTA BaseNPC Creature">编辑</a>]</span> <span class="mw-headline" id="CDOTA_BaseNPC_Creature"> CDOTA_BaseNPC_Creature </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CDOTA_BaseNPC"> CDOTA_BaseNPC</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.AddItemDrop" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Creature.AddItemDrop"> AddItemDrop</a>
</td><td> <code>void AddItemDrop(handle a) </code>
</td><td> Add the specified item drop to this creature
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.CreatureLevelUp" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Creature.CreatureLevelUp"> CreatureLevelUp</a>
</td><td> <code>void CreatureLevelUp(int a) </code>
</td><td> Level the creature up by the specified number of levels
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.IsChampion" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Creature.IsChampion"> IsChampion</a>
</td><td> <code>bool IsChampion() </code>
</td><td> Is this unit a champion?
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetArmorGain" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Creature.SetArmorGain"> SetArmorGain</a>
</td><td> <code>void SetArmorGain(float a) </code>
</td><td> Set the armor gained per level on this creature.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetAttackTimeGain" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Creature.SetAttackTimeGain"> SetAttackTimeGain</a>
</td><td> <code>void SetAttackTimeGain(float a) </code>
</td><td> Set the attack time gained per level on this creature.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetBountyGain" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Creature.SetBountyGain"> SetBountyGain</a>
</td><td> <code>void SetBountyGain(int a) </code>
</td><td> Set the bounty gold gained per level on this creature.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetChampion" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Creature.SetChampion"> SetChampion</a>
</td><td> <code>void SetChampion(bool a) </code>
</td><td> Flag this unit as a champion creature.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetDamageGain" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Creature.SetDamageGain"> SetDamageGain</a>
</td><td> <code>void SetDamageGain(int a) </code>
</td><td> Set the damage gained per level on this creature.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetDisableResistanceGain" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Creature.SetDisableResistanceGain"> SetDisableResistanceGain</a>
</td><td> <code>void SetDisableResistanceGain(float a) </code>
</td><td> Set the disable resistance gained per level on this creature.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetHPGain" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Creature.SetHPGain"> SetHPGain</a>
</td><td> <code>void SetHPGain(int a) </code>
</td><td> Set the hit point's gained per level on this creature.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetHPRegenGain" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Creature.SetHPRegenGain"> SetHPRegenGain</a>
</td><td> <code>void SetHPRegenGain(float a) </code>
</td><td> Set the hit point's regen gained per level on this creature.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetMagicResistanceGain" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Creature.SetMagicResistanceGain"> SetMagicResistanceGain</a>
</td><td> <code>void SetMagicResistanceGain(float a) </code>
</td><td> Set the magic resistance gained per level on this creature.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetManaGain" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Creature.SetManaGain"> SetManaGain</a>
</td><td> <code>void SetManaGain(int a) </code>
</td><td> Set the mana point's gained per level on this creature.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetManaRegenGain" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Creature.SetManaRegenGain"> SetManaRegenGain</a>
</td><td> <code>void SetManaRegenGain(float a) </code>
</td><td> Set the mana point's regen gained per level on this creature.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetMoveSpeedGain" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Creature.SetMoveSpeedGain"> SetMoveSpeedGain</a>
</td><td> <code>void SetMoveSpeedGain(int a) </code>
</td><td> Set the move speed gained per level on this creature.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetXPGain" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Creature.SetXPGain"> SetXPGain</a>
</td><td> <code>void SetXPGain(int a) </code>
</td><td> Set the xp reward gained per level on this creature.
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=22" title="Edit section: CDOTA BaseNPC Building">编辑</a>]</span> <span class="mw-headline" id="CDOTA_BaseNPC_Building"> CDOTA_BaseNPC_Building </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CDOTA_BaseNPC"> CDOTA_BaseNPC</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Building.GetInvulnCount" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Building.GetInvulnCount"> GetInvulnCount</a>
</td><td> <code>int GetInvulnCount() </code>
</td><td> Get the invulnerability count for a building.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Building.SetInvulnCount" title="Dota 2 Workshop Tools/Scripting/API/CDOTA BaseNPC Building.SetInvulnCount"> SetInvulnCount</a>
</td><td> <code>void SetInvulnCount(int a) </code>
</td><td> Set the invulnerability counter of this building.
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=23" title="Edit section: CRPG Unit">编辑</a>]</span> <span class="mw-headline" id="CRPG_Unit"> CRPG_Unit </span></h3>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CRPG_Unit.ActionState" title="Dota 2 Workshop Tools/Scripting/API/CRPG Unit.ActionState"> ActionState</a>
</td><td> <code>handle ActionState() </code>
</td><td> return the ActionState object for this unit.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CRPG_Unit.ClearMovementTarget" title="Dota 2 Workshop Tools/Scripting/API/CRPG Unit.ClearMovementTarget"> ClearMovementTarget</a>
</td><td> <code>void ClearMovementTarget() </code>
</td><td> Clear any movement target entity/position.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CRPG_Unit.FindSensedEnemies" title="Dota 2 Workshop Tools/Scripting/API/CRPG Unit.FindSensedEnemies"> FindSensedEnemies</a>
</td><td> <code>table FindSensedEnemies() </code>
</td><td> returns list of all enemy units within this unit's sight cone or sensing sphere
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CRPG_Unit.GetMaxSpeed" title="Dota 2 Workshop Tools/Scripting/API/CRPG Unit.GetMaxSpeed"> GetMaxSpeed</a>
</td><td> <code>float GetMaxSpeed() </code>
</td><td> returns unit's max speed
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CRPG_Unit.GetMaxStamina" title="Dota 2 Workshop Tools/Scripting/API/CRPG Unit.GetMaxStamina"> GetMaxStamina</a>
</td><td> <code>float GetMaxStamina() </code>
</td><td> returns maximum stamina amount.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CRPG_Unit.GetMovementTargetEntity" title="Dota 2 Workshop Tools/Scripting/API/CRPG Unit.GetMovementTargetEntity"> GetMovementTargetEntity</a>
</td><td> <code>handle GetMovementTargetEntity() </code>
</td><td> Returs the movement target entity, if set.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CRPG_Unit.GetSensingSphereRange" title="Dota 2 Workshop Tools/Scripting/API/CRPG Unit.GetSensingSphereRange"> GetSensingSphereRange</a>
</td><td> <code>float GetSensingSphereRange() </code>
</td><td> returns range of unit's 360 degree sensing sphere
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CRPG_Unit.GetSightConeAngle" title="Dota 2 Workshop Tools/Scripting/API/CRPG Unit.GetSightConeAngle"> GetSightConeAngle</a>
</td><td> <code>float GetSightConeAngle() </code>
</td><td> returns angle in which the unit can see things up to sight range
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CRPG_Unit.GetSightConeRange" title="Dota 2 Workshop Tools/Scripting/API/CRPG Unit.GetSightConeRange"> GetSightConeRange</a>
</td><td> <code>float GetSightConeRange() </code>
</td><td> returns range of unit's sight cone
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CRPG_Unit.GetStamina" title="Dota 2 Workshop Tools/Scripting/API/CRPG Unit.GetStamina"> GetStamina</a>
</td><td> <code>float GetStamina() </code>
</td><td> returns current stamina amount.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CRPG_Unit.GetTurnRate" title="Dota 2 Workshop Tools/Scripting/API/CRPG Unit.GetTurnRate"> GetTurnRate</a>
</td><td> <code>float GetTurnRate() </code>
</td><td> returns unit's turn rate in degrees per second
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CRPG_Unit.GetUnitName" title="Dota 2 Workshop Tools/Scripting/API/CRPG Unit.GetUnitName"> GetUnitName</a>
</td><td> <code>string GetUnitName() </code>
</td><td> get the unit name for this unit.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CRPG_Unit.GrantItem" title="Dota 2 Workshop Tools/Scripting/API/CRPG Unit.GrantItem"> GrantItem</a>
</td><td> <code>void GrantItem(string a, bool b) </code>
</td><td> ( sItemName ) - grant an item to the unit by name.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CRPG_Unit.IsBlocking" title="Dota 2 Workshop Tools/Scripting/API/CRPG Unit.IsBlocking"> IsBlocking</a>
</td><td> <code>bool IsBlocking() </code>
</td><td> is this unit blocking?
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CRPG_Unit.IsFacing" title="Dota 2 Workshop Tools/Scripting/API/CRPG Unit.IsFacing"> IsFacing</a>
</td><td> <code>bool IsFacing(Vector a, float b) </code>
</td><td> ( vecTargetPosition, flAngleTolerance ) - returns true if the unit is within flAngleTolerance degrees of the target position
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CRPG_Unit.SetBlocking" title="Dota 2 Workshop Tools/Scripting/API/CRPG Unit.SetBlocking"> SetBlocking</a>
</td><td> <code>void SetBlocking(bool a) </code>
</td><td> ( bShouldBlock ) - Set the blocking state of this unit.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CRPG_Unit.SetMaxSpeed" title="Dota 2 Workshop Tools/Scripting/API/CRPG Unit.SetMaxSpeed"> SetMaxSpeed</a>
</td><td> <code>void SetMaxSpeed(float a) </code>
</td><td> ( flMaxSpeed ) - sets unit's max speed
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CRPG_Unit.SetMovementTargetEntity" title="Dota 2 Workshop Tools/Scripting/API/CRPG Unit.SetMovementTargetEntity"> SetMovementTargetEntity</a>
</td><td> <code>void SetMovementTargetEntity(handle a, float b) </code>
</td><td> ( hTargetEntity, flTargetRange ) - Try to move this unit to the given range from the target entity.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CRPG_Unit.SetMovementTargetPosition" title="Dota 2 Workshop Tools/Scripting/API/CRPG Unit.SetMovementTargetPosition"> SetMovementTargetPosition</a>
</td><td> <code>void SetMovementTargetPosition(Vector a, float b) </code>
</td><td> ( vecTargetPosition, flTargetRange ) - Try to move this unit to the given range from the target point.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CRPG_Unit.SetSensingSphereRange" title="Dota 2 Workshop Tools/Scripting/API/CRPG Unit.SetSensingSphereRange"> SetSensingSphereRange</a>
</td><td> <code>void SetSensingSphereRange(float a) </code>
</td><td> ( flSightRange ) - set range of unit's 360 degree sensing sphere
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CRPG_Unit.SetSightConeAngle" title="Dota 2 Workshop Tools/Scripting/API/CRPG Unit.SetSightConeAngle"> SetSightConeAngle</a>
</td><td> <code>void SetSightConeAngle(float a) </code>
</td><td> ( flAngleDegrees ) - sets angle in which the unit can see things up to sight range
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CRPG_Unit.SetSightConeRange" title="Dota 2 Workshop Tools/Scripting/API/CRPG Unit.SetSightConeRange"> SetSightConeRange</a>
</td><td> <code>void SetSightConeRange(float a) </code>
</td><td> ( fRange ) - set range of unit's sight cone
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CRPG_Unit.SetTurnRate" title="Dota 2 Workshop Tools/Scripting/API/CRPG Unit.SetTurnRate"> SetTurnRate</a>
</td><td> <code>void SetTurnRate(float a) </code>
</td><td> ( flTurnRate ) - sets unit's turn rate in degrees per second
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=24" title="Edit section: CDOTABaseGameMode">编辑</a>]</span> <span class="mw-headline" id="CDOTABaseGameMode"> CDOTABaseGameMode </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CBaseEntity"> CBaseEntity</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.ClientLoadGridNav" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseGameMode.ClientLoadGridNav"> ClientLoadGridNav</a>
</td><td> <code>void ClientLoadGridNav() </code>
</td><td> Tell clients that they need to load gridnav information. Used 
for things like allowing clients to identify valid locations to place 
buildings.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetAlwaysShowPlayerInventory" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseGameMode.SetAlwaysShowPlayerInventory"> SetAlwaysShowPlayerInventory</a>
</td><td> <code>void SetAlwaysShowPlayerInventory(bool a) </code>
</td><td> Show the player hero's inventory in the HUD, regardless of what unit is selected.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetBotThinkingEnabled" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseGameMode.SetBotThinkingEnabled"> SetBotThinkingEnabled</a>
</td><td> <code>void SetBotThinkingEnabled(bool a) </code>
</td><td> Enables/Disables bot thinking. Requires a very Dota PvP-like map with 3 lanes, a shop, etc.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetBuybackEnabled" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseGameMode.SetBuybackEnabled"> SetBuybackEnabled</a>
</td><td> <code>void SetBuybackEnabled(bool a) </code>
</td><td> Enables or disables buyback completely
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetCameraDistanceOverride" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseGameMode.SetCameraDistanceOverride"> SetCameraDistanceOverride</a>
</td><td> <code>void SetCameraDistanceOverride(float a) </code>
</td><td> Set a different camera distance; dota default is 1134.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetCustomBuybackCooldownEnabled" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseGameMode.SetCustomBuybackCooldownEnabled"> SetCustomBuybackCooldownEnabled</a>
</td><td> <code>void SetCustomBuybackCooldownEnabled(bool a) </code>
</td><td> Turns on capability to define custom buyback cooldowns.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetCustomBuybackCostEnabled" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseGameMode.SetCustomBuybackCostEnabled"> SetCustomBuybackCostEnabled</a>
</td><td> <code>void SetCustomBuybackCostEnabled(bool a) </code>
</td><td> Turns on capability to define custom buyback costs.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetCustomHeroMaxLevel" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseGameMode.SetCustomHeroMaxLevel"> SetCustomHeroMaxLevel</a>
</td><td> <code>void SetCustomHeroMaxLevel(int maxLevel) </code>
</td><td> Allows definition of the max level heroes can achieve (default is 25).
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetCustomXPRequiredToReachNextLevel" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseGameMode.SetCustomXPRequiredToReachNextLevel"> SetCustomXPRequiredToReachNextLevel</a>
</td><td> <code>void SetCustomXPRequiredToReachNextLevel(handle a) </code>
</td><td> Allows definition of a <i>table</i> of hero XP values.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetFogOfWarDisabled" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseGameMode.SetFogOfWarDisabled"> SetFogOfWarDisabled</a>
</td><td> <code>void SetFogOfWarDisabled(bool a) </code>
</td><td> Turn the fog of war on or off.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetGoldSoundDisabled" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseGameMode.SetGoldSoundDisabled"> SetGoldSoundDisabled</a>
</td><td> <code>void SetGoldSoundDisabled(bool a) </code>
</td><td> Turn the sound when gold is acquired off/on. Takes a <i>bool</i>.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetOverrideSelectionEntity" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseGameMode.SetOverrideSelectionEntity"> SetOverrideSelectionEntity</a>
</td><td> <code>void SetOverrideSelectionEntity(handle unit) </code>
</td><td> Set an override for the default selection entity, instead of each player's hero.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetRecommendedItemsDisabled" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseGameMode.SetRecommendedItemsDisabled"> SetRecommendedItemsDisabled</a>
</td><td> <code>void SetRecommendedItemsDisabled(bool a) </code>
</td><td> Turn the panel for showing recommended items at the shop off/on. Takes a <i>bool</i>.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetRemoveIllusionsOnDeath" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseGameMode.SetRemoveIllusionsOnDeath"> SetRemoveIllusionsOnDeath</a>
</td><td> <code>void SetRemoveIllusionsOnDeath(bool a) </code>
</td><td> Make it so illusions are immediately removed upon death, rather than sticking around for a few seconds.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetTopBarTeamValue" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseGameMode.SetTopBarTeamValue"> SetTopBarTeamValue</a>
</td><td> <code>void SetTopBarTeamValue(int a, int b) </code>
</td><td> Set the team values on the top game bar.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetTopBarTeamValuesOverride" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseGameMode.SetTopBarTeamValuesOverride"> SetTopBarTeamValuesOverride</a>
</td><td> <code>void SetTopBarTeamValuesOverride(bool a) </code>
</td><td> Override the values of the team values on the top game bar.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetTopBarTeamValuesVisible" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseGameMode.SetTopBarTeamValuesVisible"> SetTopBarTeamValuesVisible</a>
</td><td> <code>void SetTopBarTeamValuesVisible(bool a) </code>
</td><td> Turning on/off the team values on the top game bar.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetTowerBackdoorProtectionEnabled" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseGameMode.SetTowerBackdoorProtectionEnabled"> SetTowerBackdoorProtectionEnabled</a>
</td><td> <code>void SetTowerBackdoorProtectionEnabled(bool a) </code>
</td><td> Enables/Disables tower backdoor protection
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetUseCustomHeroLevels" title="Dota 2 Workshop Tools/Scripting/API/CDOTABaseGameMode.SetUseCustomHeroLevels"> SetUseCustomHeroLevels</a>
</td><td> <code>void SetUseCustomHeroLevels(bool a) </code>
</td><td> Turn on custom-defined XP values for hero level ups. The <i>table</i> should be defined before switching this on.
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=25" title="Edit section: CDotaQuest">编辑</a>]</span> <span class="mw-headline" id="CDotaQuest"> CDotaQuest </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CBaseEntity"> CBaseEntity</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p><i>A quest, as seen in the Tutorial and Frostivus</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDotaQuest.AddSubquest" title="Dota 2 Workshop Tools/Scripting/API/CDotaQuest.AddSubquest"> AddSubquest</a>
</td><td> <code>void AddSubquest(handle a) </code>
</td><td> Add a subquest to this quest
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDotaQuest.CompleteQuest" title="Dota 2 Workshop Tools/Scripting/API/CDotaQuest.CompleteQuest"> CompleteQuest</a>
</td><td> <code>void CompleteQuest() </code>
</td><td> Mark this quest complete
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDotaQuest.GetSubquest" title="Dota 2 Workshop Tools/Scripting/API/CDotaQuest.GetSubquest"> GetSubquest</a>
</td><td> <code>handle GetSubquest(int a) </code>
</td><td> Finds a subquest from this quest by index
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDotaQuest.GetSubquestByName" title="Dota 2 Workshop Tools/Scripting/API/CDotaQuest.GetSubquestByName"> GetSubquestByName</a>
</td><td> <code>handle GetSubquestByName(string a) </code>
</td><td> Finds a subquest from this quest by name
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDotaQuest.RemoveSubquest" title="Dota 2 Workshop Tools/Scripting/API/CDotaQuest.RemoveSubquest"> RemoveSubquest</a>
</td><td> <code>void RemoveSubquest(handle a) </code>
</td><td> Remove a subquest from this quest
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDotaQuest.SetTextReplaceString" title="Dota 2 Workshop Tools/Scripting/API/CDotaQuest.SetTextReplaceString"> SetTextReplaceString</a>
</td><td> <code>void SetTextReplaceString(string a) </code>
</td><td> Set the text replace <i>string</i> for this quest
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDotaQuest.SetTextReplaceValue" title="Dota 2 Workshop Tools/Scripting/API/CDotaQuest.SetTextReplaceValue"> SetTextReplaceValue</a>
</td><td> <code>void SetTextReplaceValue(int a, int b) </code>
</td><td> Set a quest value
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=26" title="Edit section: CDotaSubquestBase">编辑</a>]</span> <span class="mw-headline" id="CDotaSubquestBase"> CDotaSubquestBase </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CDotaQuest"> CDotaQuest</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDotaSubquestBase.CompleteSubquest" title="Dota 2 Workshop Tools/Scripting/API/CDotaSubquestBase.CompleteSubquest"> CompleteSubquest</a>
</td><td> <code>void CompleteSubquest() </code>
</td><td> Mark this subquest complete
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDotaSubquestBase.SetTextReplaceString" title="Dota 2 Workshop Tools/Scripting/API/CDotaSubquestBase.SetTextReplaceString"> SetTextReplaceString</a>
</td><td> <code>void SetTextReplaceString(string a) </code>
</td><td> Set the text replace <i>string</i> for this subquest
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDotaSubquestBase.SetTextReplaceValue" title="Dota 2 Workshop Tools/Scripting/API/CDotaSubquestBase.SetTextReplaceValue"> SetTextReplaceValue</a>
</td><td> <code>void SetTextReplaceValue(int a, int b) </code>
</td><td> Set a subquest value
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=27" title="Edit section: CPhysicsComponent">编辑</a>]</span> <span class="mw-headline" id="CPhysicsComponent"> CPhysicsComponent </span></h3>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CPhysicsComponent.ExpensiveInstantRayCast" title="Dota 2 Workshop Tools/Scripting/API/CPhysicsComponent.ExpensiveInstantRayCast"> ExpensiveInstantRayCast</a>
</td><td> <code>bool ExpensiveInstantRayCast(Vector a, Vector b, handle c) </code>
</td><td> Do an instant (i.e. blocking) Ray Cast. Will do a handle/queue version later. Don't plan to use this for real!
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=28" title="Edit section: CPointTemplate">编辑</a>]</span> <span class="mw-headline" id="CPointTemplate"> CPointTemplate </span></h3>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CPointTemplate.DeleteCreatedSpawnGroups" title="Dota 2 Workshop Tools/Scripting/API/CPointTemplate.DeleteCreatedSpawnGroups"> DeleteCreatedSpawnGroups</a>
</td><td> <code>void DeleteCreatedSpawnGroups() </code>
</td><td> DeleteCreatedSpawnGroups()&nbsp;: Deletes any spawn groups 
that this point_template has spawned. Note: The point_template will not 
be deleted by this.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CPointTemplate.ForceSpawn" title="Dota 2 Workshop Tools/Scripting/API/CPointTemplate.ForceSpawn"> ForceSpawn</a>
</td><td> <code>void ForceSpawn() </code>
</td><td> ForceSpawn()&nbsp;: Spawns all of the entities the point_template is pointing at.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CPointTemplate.GetSpawnedEntities" title="Dota 2 Workshop Tools/Scripting/API/CPointTemplate.GetSpawnedEntities"> GetSpawnedEntities</a>
</td><td> <code>handle GetSpawnedEntities() </code>
</td><td> GetSpawnedEntities()&nbsp;: Get the list of the most recent spawned entities
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CPointTemplate.SetSpawnCallback" title="Dota 2 Workshop Tools/Scripting/API/CPointTemplate.SetSpawnCallback"> SetSpawnCallback</a>
</td><td> <code>void SetSpawnCallback(handle a, handle b) </code>
</td><td> SetSpawnCallback( hCallbackFunc, hCallbackScope, hCallbackData
 )&nbsp;: Set a callback for when the template spawns entities. The 
spawned entities will be passed in as an array.
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=29" title="Edit section: CBodyComponent">编辑</a>]</span> <span class="mw-headline" id="CBodyComponent"> CBodyComponent </span></h3>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.AddImpulseAtPosition" title="Dota 2 Workshop Tools/Scripting/API/CBodyComponent.AddImpulseAtPosition"> AddImpulseAtPosition</a>
</td><td> <code>void AddImpulseAtPosition(Vector a, Vector b) </code>
</td><td> Apply an impulse at a worldspace position to the physics
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.AddVelocity" title="Dota 2 Workshop Tools/Scripting/API/CBodyComponent.AddVelocity"> AddVelocity</a>
</td><td> <code>void AddVelocity(Vector a, Vector b) </code>
</td><td> Add linear and angular velocity to the physics object
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.DetachFromParent" title="Dota 2 Workshop Tools/Scripting/API/CBodyComponent.DetachFromParent"> DetachFromParent</a>
</td><td> <code>void DetachFromParent() </code>
</td><td> Detach from its parent
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.GetSequence" title="Dota 2 Workshop Tools/Scripting/API/CBodyComponent.GetSequence"> GetSequence</a>
</td><td> <code>&lt;&gt; GetSequence() </code>
</td><td> Returns the active sequence
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.IsAttachedToParent" title="Dota 2 Workshop Tools/Scripting/API/CBodyComponent.IsAttachedToParent"> IsAttachedToParent</a>
</td><td> <code>bool IsAttachedToParent() </code>
</td><td> Is attached to parent
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.LookupSequence" title="Dota 2 Workshop Tools/Scripting/API/CBodyComponent.LookupSequence"> LookupSequence</a>
</td><td> <code>&lt;&gt; LookupSequence(string a) </code>
</td><td> Returns a sequence id given a name
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.SequenceDuration" title="Dota 2 Workshop Tools/Scripting/API/CBodyComponent.SequenceDuration"> SequenceDuration</a>
</td><td> <code>float SequenceDuration(string a) </code>
</td><td> Returns the duration in seconds of the specified sequence
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.SetAngularVelocity" title="Dota 2 Workshop Tools/Scripting/API/CBodyComponent.SetAngularVelocity"> SetAngularVelocity</a>
</td><td> <code>void SetAngularVelocity(Vector a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.SetAnimation" title="Dota 2 Workshop Tools/Scripting/API/CBodyComponent.SetAnimation"> SetAnimation</a>
</td><td> <code>void SetAnimation(string a) </code>
</td><td> Pass <i>string</i> for the animation to play on this model
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.SetBodyGroup" title="Dota 2 Workshop Tools/Scripting/API/CBodyComponent.SetBodyGroup"> SetBodyGroup</a>
</td><td> <code>void SetBodyGroup(string a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.SetMaterialGroup" title="Dota 2 Workshop Tools/Scripting/API/CBodyComponent.SetMaterialGroup"> SetMaterialGroup</a>
</td><td> <code>void SetMaterialGroup(utlstringtoken a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.SetVelocity" title="Dota 2 Workshop Tools/Scripting/API/CBodyComponent.SetVelocity"> SetVelocity</a>
</td><td> <code>void SetVelocity(Vector velocity) </code>
</td><td> 无
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=30" title="Edit section: CBaseAnimating">编辑</a>]</span> <span class="mw-headline" id="CBaseAnimating"> CBaseAnimating </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CBaseEntity"> CBaseEntity</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p><i>A class containing functions involved in animations</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseAnimating.GetAttachmentAngles" title="Dota 2 Workshop Tools/Scripting/API/CBaseAnimating.GetAttachmentAngles"> GetAttachmentAngles</a>
</td><td> <code>Vector GetAttachmentAngles(int a) </code>
</td><td> Get the attachement id's angles as a p,y,r <i>vector</i>
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseAnimating.GetAttachmentOrigin" title="Dota 2 Workshop Tools/Scripting/API/CBaseAnimating.GetAttachmentOrigin"> GetAttachmentOrigin</a>
</td><td> <code>Vector GetAttachmentOrigin(int a) </code>
</td><td> Get the attachement id's origin <i>vector</i>
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseAnimating.IsSequenceFinished" title="Dota 2 Workshop Tools/Scripting/API/CBaseAnimating.IsSequenceFinished"> IsSequenceFinished</a>
</td><td> <code>bool IsSequenceFinished() </code>
</td><td> Ask whether the main sequence is done playing
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseAnimating.ScriptLookupAttachment" title="Dota 2 Workshop Tools/Scripting/API/CBaseAnimating.ScriptLookupAttachment"> ScriptLookupAttachment</a>
</td><td> <code>int ScriptLookupAttachment(string a) </code>
</td><td> Get the named attachment id
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseAnimating.SetBodygroup" title="Dota 2 Workshop Tools/Scripting/API/CBaseAnimating.SetBodygroup"> SetBodygroup</a>
</td><td> <code>void SetBodygroup(int a, int b) </code>
</td><td> Sets a bodygroup
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseAnimating.SetModelScale" title="Dota 2 Workshop Tools/Scripting/API/CBaseAnimating.SetModelScale"> SetModelScale</a>
</td><td> <code>void SetModelScale(float scale) </code>
</td><td> Sets the model's scale to <i>scale</i>, <br>so if a unit had its model scale at 1, and you use <i>SetModelScale(<b>10.0</b>)</i>, it would set the scale to <b>10.0</b>.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseAnimating.SetPoseParameter" title="Dota 2 Workshop Tools/Scripting/API/CBaseAnimating.SetPoseParameter"> SetPoseParameter</a>
</td><td> <code>float SetPoseParameter(string a, float b) </code>
</td><td> Set the specified pose parameter to the specified value
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=31" title="Edit section: CBaseCombatCharacter">编辑</a>]</span> <span class="mw-headline" id="CBaseCombatCharacter"> CBaseCombatCharacter </span></h3>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseCombatCharacter.GetEquippedWeapons" title="Dota 2 Workshop Tools/Scripting/API/CBaseCombatCharacter.GetEquippedWeapons"> GetEquippedWeapons</a>
</td><td> <code>table GetEquippedWeapons() </code>
</td><td> GetEquippedWeapons()&nbsp;: Returns an array of all the equipped weapons
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseCombatCharacter.GetWeaponCount" title="Dota 2 Workshop Tools/Scripting/API/CBaseCombatCharacter.GetWeaponCount"> GetWeaponCount</a>
</td><td> <code>int GetWeaponCount() </code>
</td><td> GetWeaponCount()&nbsp;: Gets the number of weapons currently equipped
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=32" title="Edit section: ProjectileManager">编辑</a>]</span> <span class="mw-headline" id="ProjectileManager"> ProjectileManager </span></h3>
<p><i>The projectile manager, it manages projectiles.</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/ProjectileManager.CreateLinearProjectile" title="Dota 2 Workshop Tools/Scripting/API/ProjectileManager.CreateLinearProjectile"> CreateLinearProjectile</a>
</td><td> <code>int CreateLinearProjectile(handle a) </code>
</td><td> Creates a linear projectile and returns the projectile ID
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/ProjectileManager.CreateTrackingProjectile" title="Dota 2 Workshop Tools/Scripting/API/ProjectileManager.CreateTrackingProjectile"> CreateTrackingProjectile</a>
</td><td> <code>void CreateTrackingProjectile(handle a) </code>
</td><td> Creates a tracking projectile
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/ProjectileManager.DestroyLinearProjectile" title="Dota 2 Workshop Tools/Scripting/API/ProjectileManager.DestroyLinearProjectile"> DestroyLinearProjectile</a>
</td><td> <code>void DestroyLinearProjectile(int a) </code>
</td><td> Destroys the linear projectile matching the argument ID
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/ProjectileManager.ProjectileDodge" title="Dota 2 Workshop Tools/Scripting/API/ProjectileManager.ProjectileDodge"> ProjectileDodge</a>
</td><td> <code>void ProjectileDodge(handle a) </code>
</td><td> Makes the specified unit dodge projectiles
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=33" title="Edit section: CBaseTrigger">编辑</a>]</span> <span class="mw-headline" id="CBaseTrigger"> CBaseTrigger </span></h3>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseTrigger.Disable" title="Dota 2 Workshop Tools/Scripting/API/CBaseTrigger.Disable"> Disable</a>
</td><td> <code>void Disable(trigger) </code>
</td><td> Disable the trigger
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseTrigger.Enable" title="Dota 2 Workshop Tools/Scripting/API/CBaseTrigger.Enable"> Enable</a>
</td><td> <code>void Enable(trigger) </code>
</td><td> Enable the trigger
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseTrigger.IsTouching" title="Dota 2 Workshop Tools/Scripting/API/CBaseTrigger.IsTouching"> IsTouching</a>
</td><td> <code>bool IsTouching(handle a) </code>
</td><td> Checks whether the passed entity is touching the trigger.
</td></tr></tbody></table>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=34" title="Edit section: CEnvEntityMaker">编辑</a>]</span> <span class="mw-headline" id="CEnvEntityMaker"> CEnvEntityMaker </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CBaseEntity"> CBaseEntity</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEnvEntityMaker.SpawnEntity" title="Dota 2 Workshop Tools/Scripting/API/CEnvEntityMaker.SpawnEntity"> SpawnEntity</a>
</td><td> <code>void SpawnEntity() </code>
</td><td> Create an entity at the location of the maker
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEnvEntityMaker.SpawnEntityAtEntityOrigin" title="Dota 2 Workshop Tools/Scripting/API/CEnvEntityMaker.SpawnEntityAtEntityOrigin"> SpawnEntityAtEntityOrigin</a>
</td><td> <code>void SpawnEntityAtEntityOrigin(handle a) </code>
</td><td> Create an entity at the location of a specified entity instance
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEnvEntityMaker.SpawnEntityAtLocation" title="Dota 2 Workshop Tools/Scripting/API/CEnvEntityMaker.SpawnEntityAtLocation"> SpawnEntityAtLocation</a>
</td><td> <code>void SpawnEntityAtLocation(Vector a, Vector b) </code>
</td><td> Create an entity at a specified location and orientaton, orientation is Euler angle in degrees (pitch, yaw, roll)
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEnvEntityMaker.SpawnEntityAtNamedEntityOrigin" title="Dota 2 Workshop Tools/Scripting/API/CEnvEntityMaker.SpawnEntityAtNamedEntityOrigin"> SpawnEntityAtNamedEntityOrigin</a>
</td><td> <code>void SpawnEntityAtNamedEntityOrigin(string a) </code>
</td><td> Create an entity at the location of a named entity
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=35" title="Edit section: CDOTAVoteSystem">编辑</a>]</span> <span class="mw-headline" id="CDOTAVoteSystem"> CDOTAVoteSystem </span></h3>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAVoteSystem.StartVote" title="Dota 2 Workshop Tools/Scripting/API/CDOTAVoteSystem.StartVote"> StartVote</a>
</td><td> <code>void StartVote(handle a) </code>
</td><td> Starts a vote, based upon a <i>table</i> of parameters
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=36" title="Edit section: CMarkupVolumeTagged">编辑</a>]</span> <span class="mw-headline" id="CMarkupVolumeTagged"> CMarkupVolumeTagged </span></h3>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CMarkupVolumeTagged.HasTag" title="Dota 2 Workshop Tools/Scripting/API/CMarkupVolumeTagged.HasTag"> HasTag</a>
</td><td> <code>bool HasTag(string a) </code>
</td><td> Does this volume have the given tag.
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=37" title="Edit section: CScriptPrecacheContext">编辑</a>]</span> <span class="mw-headline" id="CScriptPrecacheContext"> CScriptPrecacheContext </span></h3>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CScriptPrecacheContext.AddResource" title="Dota 2 Workshop Tools/Scripting/API/CScriptPrecacheContext.AddResource"> AddResource</a>
</td><td> <code>void AddResource(string a) </code>
</td><td> Precaches a specific resource
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CScriptPrecacheContext.GetValue" title="Dota 2 Workshop Tools/Scripting/API/CScriptPrecacheContext.GetValue"> GetValue</a>
</td><td> <code>table GetValue(string a) </code>
</td><td> Reads a spawn key
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=38" title="Edit section: CScriptKeyValues">编辑</a>]</span> <span class="mw-headline" id="CScriptKeyValues"> CScriptKeyValues </span></h3>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CScriptKeyValues.GetValue" title="Dota 2 Workshop Tools/Scripting/API/CScriptKeyValues.GetValue"> GetValue</a>
</td><td> <code>table GetValue(string a) </code>
</td><td> Reads a spawn key
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=39" title="Edit section: CScriptParticleManager">编辑</a>]</span> <span class="mw-headline" id="CScriptParticleManager"> CScriptParticleManager </span></h3>
<p><i>无</i>
</p><p><i>全局变量:</i> <code>ParticleManager</code>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CScriptParticleManager.CreateParticle" title="Dota 2 Workshop Tools/Scripting/API/CScriptParticleManager.CreateParticle"> CreateParticle</a>
</td><td> <code>int CreateParticle(string particleName, int particleAttach, handle owningEntity) </code>
</td><td> Creates a new particle effect
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CScriptParticleManager.CreateParticleForPlayer" title="Dota 2 Workshop Tools/Scripting/API/CScriptParticleManager.CreateParticleForPlayer"> CreateParticleForPlayer</a>
</td><td> <code>int CreateParticleForPlayer(string particleName, int particleAttach, handle owningEntity, handle owningPlayer) </code>
</td><td> Creates a new particle effect that only plays for the specified player
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CScriptParticleManager.GetParticleReplacement" title="Dota 2 Workshop Tools/Scripting/API/CScriptParticleManager.GetParticleReplacement"> GetParticleReplacement</a>
</td><td> <code>string GetParticleReplacement(string a, handle b) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CScriptParticleManager.ReleaseParticleIndex" title="Dota 2 Workshop Tools/Scripting/API/CScriptParticleManager.ReleaseParticleIndex"> ReleaseParticleIndex</a>
</td><td> <code>void ReleaseParticleIndex(int particleId) </code>
</td><td> Frees the specified particle index
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CScriptParticleManager.SetParticleAlwaysSimulate" title="Dota 2 Workshop Tools/Scripting/API/CScriptParticleManager.SetParticleAlwaysSimulate"> SetParticleAlwaysSimulate</a>
</td><td> <code>void SetParticleAlwaysSimulate(int a) </code>
</td><td> 无
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CScriptParticleManager.SetParticleControl" title="Dota 2 Workshop Tools/Scripting/API/CScriptParticleManager.SetParticleControl"> SetParticleControl</a>
</td><td> <code>void SetParticleControl(int particleId, int controlIndex, Vector controlData) </code>
</td><td> Set the control point data for a control on a particle effect
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CScriptParticleManager.SetParticleControlEnt" title="Dota 2 Workshop Tools/Scripting/API/CScriptParticleManager.SetParticleControlEnt"> SetParticleControlEnt</a>
</td><td> <code>void SetParticleControlEnt(int a, int b, handle c, int d, string e, Vector f, bool g) </code>
</td><td> 无
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=40" title="Edit section: CScriptHeroList">编辑</a>]</span> <span class="mw-headline" id="CScriptHeroList"> CScriptHeroList </span></h3>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CScriptHeroList.GetAllHeroes" title="Dota 2 Workshop Tools/Scripting/API/CScriptHeroList.GetAllHeroes"> GetAllHeroes</a>
</td><td> <code>table GetAllHeroes() </code>
</td><td> Returns all the heroes in the world
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CScriptHeroList.GetHero" title="Dota 2 Workshop Tools/Scripting/API/CScriptHeroList.GetHero"> GetHero</a>
</td><td> <code>handle GetHero(int heroId) </code>
</td><td> Get the Nth hero in the Hero List
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CScriptHeroList.GetHeroCount" title="Dota 2 Workshop Tools/Scripting/API/CScriptHeroList.GetHeroCount"> GetHeroCount</a>
</td><td> <code>int GetHeroCount() </code>
</td><td> Returns the number of heroes in the world
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=41" title="Edit section: CNativeOutputs">编辑</a>]</span> <span class="mw-headline" id="CNativeOutputs"> CNativeOutputs </span></h3>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CNativeOutputs.AddOutput" title="Dota 2 Workshop Tools/Scripting/API/CNativeOutputs.AddOutput"> AddOutput</a>
</td><td> <code>void AddOutput(string a, string b) </code>
</td><td> Add an output
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CNativeOutputs.Init" title="Dota 2 Workshop Tools/Scripting/API/CNativeOutputs.Init"> Init</a>
</td><td> <code>void Init(int a) </code>
</td><td> Initialize with number of outputs
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=42" title="Edit section: CEnvProjectedTexture">编辑</a>]</span> <span class="mw-headline" id="CEnvProjectedTexture"> CEnvProjectedTexture </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CBaseEntity"> CBaseEntity</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEnvProjectedTexture.SetFarRange" title="Dota 2 Workshop Tools/Scripting/API/CEnvProjectedTexture.SetFarRange"> SetFarRange</a>
</td><td> <code>void SetFarRange(float a) </code>
</td><td> Set light maximum range
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEnvProjectedTexture.SetLinearAttenuation" title="Dota 2 Workshop Tools/Scripting/API/CEnvProjectedTexture.SetLinearAttenuation"> SetLinearAttenuation</a>
</td><td> <code>void SetLinearAttenuation(float a) </code>
</td><td> Set light linear attenuation value
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEnvProjectedTexture.SetNearRange" title="Dota 2 Workshop Tools/Scripting/API/CEnvProjectedTexture.SetNearRange"> SetNearRange</a>
</td><td> <code>void SetNearRange(float a) </code>
</td><td> Set light minimum range
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEnvProjectedTexture.SetQuadraticAttenuation" title="Dota 2 Workshop Tools/Scripting/API/CEnvProjectedTexture.SetQuadraticAttenuation"> SetQuadraticAttenuation</a>
</td><td> <code>void SetQuadraticAttenuation(float a) </code>
</td><td> Set light quadratic attenuation value
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEnvProjectedTexture.SetVolumetrics" title="Dota 2 Workshop Tools/Scripting/API/CEnvProjectedTexture.SetVolumetrics"> SetVolumetrics</a>
</td><td> <code>void SetVolumetrics(bool a, float b, float c, int d, float e) </code>
</td><td> Turn on/off light volumetrics: <i>bool</i> bOn, <i>float</i> flIntensity, <i>float</i> flNoise, <i>int</i> nPlanes, <i>float</i> flPlaneOffset
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=43" title="Edit section: CInfoData">编辑</a>]</span> <span class="mw-headline" id="CInfoData"> CInfoData </span></h3>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CInfoData.QueryColor" title="Dota 2 Workshop Tools/Scripting/API/CInfoData.QueryColor"> QueryColor</a>
</td><td> <code>Vector QueryColor(utlstringtoken a, Vector b) </code>
</td><td> Query color data for this key
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CInfoData.QueryFloat" title="Dota 2 Workshop Tools/Scripting/API/CInfoData.QueryFloat"> QueryFloat</a>
</td><td> <code>float QueryFloat(utlstringtoken a, float b) </code>
</td><td> Query <i>float</i> data for this key
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CInfoData.QueryInt" title="Dota 2 Workshop Tools/Scripting/API/CInfoData.QueryInt"> QueryInt</a>
</td><td> <code>int QueryInt(utlstringtoken a, int b) </code>
</td><td> Query <i>int</i> data for this key
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CInfoData.QueryNumber" title="Dota 2 Workshop Tools/Scripting/API/CInfoData.QueryNumber"> QueryNumber</a>
</td><td> <code>float QueryNumber(utlstringtoken a, float b) </code>
</td><td> Query number data for this key
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CInfoData.QueryString" title="Dota 2 Workshop Tools/Scripting/API/CInfoData.QueryString"> QueryString</a>
</td><td> <code>string QueryString(utlstringtoken a, string b) </code>
</td><td> Query <i>string</i> data for this key
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CInfoData.QueryVector" title="Dota 2 Workshop Tools/Scripting/API/CInfoData.QueryVector"> QueryVector</a>
</td><td> <code>Vector QueryVector(utlstringtoken a, Vector b) </code>
</td><td> Query <i>vector</i> data for this key
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=44" title="Edit section: CPhysicsProp">编辑</a>]</span> <span class="mw-headline" id="CPhysicsProp"> CPhysicsProp </span></h3>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CPhysicsProp.DisableMotion" title="Dota 2 Workshop Tools/Scripting/API/CPhysicsProp.DisableMotion"> DisableMotion</a>
</td><td> <code>void DisableMotion() </code>
</td><td> Enable motion for the prop
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CPhysicsProp.EnableMotion" title="Dota 2 Workshop Tools/Scripting/API/CPhysicsProp.EnableMotion"> EnableMotion</a>
</td><td> <code>void EnableMotion() </code>
</td><td> Enable motion for the prop
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=45" title="Edit section: CDOTAGamerules">编辑</a>]</span> <span class="mw-headline" id="CDOTAGamerules"> CDOTAGamerules </span></h3>
<p>'
</p><p><i>全局变量:</i> <code>GameRules</code>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.Defeated" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.Defeated"> Defeated</a>
</td><td> <code>void Defeated() </code>
</td><td> Kills the ancient, etc.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.DidMatchSignoutTimeOut" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.DidMatchSignoutTimeOut"> DidMatchSignoutTimeOut</a>
</td><td> <code>bool DidMatchSignoutTimeOut() </code>
</td><td> true when we have waited some time after end of the game and not received signout
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.GetCustomGameDifficulty" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.GetCustomGameDifficulty"> GetCustomGameDifficulty</a>
</td><td> <code>int GetCustomGameDifficulty() </code>
</td><td> Returns the difficulty level of the custom game mode
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.GetDifficulty" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.GetDifficulty"> GetDifficulty</a>
</td><td> <code>int GetDifficulty() </code>
</td><td> Returns difficulty level of the custom game mode
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.GetDroppedItem" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.GetDroppedItem"> GetDroppedItem</a>
</td><td> <code>handle GetDroppedItem(int dropIndex) </code>
</td><td> Gets the Xth dropped item
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.GetGameModeEntity" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.GetGameModeEntity"> GetGameModeEntity</a>
</td><td> <code>handle GetGameModeEntity() </code>
</td><td> Get the game mode entity
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.GetGameTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.GetGameTime"> GetGameTime</a>
</td><td> <code>float GetGameTime() </code>
</td><td> Returns the number of seconds elapsed since map start. This time doesn't count up when the game is paused
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.GetMatchSignoutComplete" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.GetMatchSignoutComplete"> GetMatchSignoutComplete</a>
</td><td> <code>bool GetMatchSignoutComplete() </code>
</td><td> Have we received the post match signout message that includes reward information
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.GetNianFightStartTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.GetNianFightStartTime"> GetNianFightStartTime</a>
</td><td> <code>float GetNianFightStartTime() </code>
</td><td> Gets the start time for the Nian fight
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.GetNianTotalDamageTaken" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.GetNianTotalDamageTaken"> GetNianTotalDamageTaken</a>
</td><td> <code>int GetNianTotalDamageTaken() </code>
</td><td> For New Bloom, get total damage taken by the Nian / Year Beast
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.GetTimeOfDay" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.GetTimeOfDay"> GetTimeOfDay</a>
</td><td> <code>float GetTimeOfDay() </code>
</td><td> Get the time of day
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.IsDaytime" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.IsDaytime"> IsDaytime</a>
</td><td> <code>bool IsDaytime() </code>
</td><td> Is it day time.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.MakeTeamLose" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.MakeTeamLose"> MakeTeamLose</a>
</td><td> <code>void MakeTeamLose(int team) </code>
</td><td> Makes ths specified team lose
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.NumDroppedItems" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.NumDroppedItems"> NumDroppedItems</a>
</td><td> <code>int NumDroppedItems() </code>
</td><td> Returns the number of items currently dropped on the ground
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.Playtesting_UpdateAddOnKeyValues" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.Playtesting UpdateAddOnKeyValues"> Playtesting_UpdateAddOnKeyValues</a>
</td><td> <code>void Playtesting_UpdateAddOnKeyValues() </code>
</td><td> Updates custom hero, unit and ability KeyValues in memory with the latest values from disk
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.ResetDefeated" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.ResetDefeated"> ResetDefeated</a>
</td><td> <code>void ResetDefeated() </code>
</td><td> Restart after killing the ancient, etc.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.ResetToHeroSelection" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.ResetToHeroSelection"> ResetToHeroSelection</a>
</td><td> <code>void ResetToHeroSelection() </code>
</td><td> Restart the game at hero selection
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.SendCustomMessage" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.SendCustomMessage"> SendCustomMessage</a>
</td><td> <code>void SendCustomMessage(string message, int teamID, int unknown(1?)) </code>
</td><td> Displays a line of text in the left textbox (where usually 
deaths/denies/buysbacks are announced). This function takes restricted 
HTML as input! (&lt;br&gt;,&lt;u&gt;,&lt;font&gt;)
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.SetCreepMinimapIconScale" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.SetCreepMinimapIconScale"> SetCreepMinimapIconScale</a>
</td><td> <code>void SetCreepMinimapIconScale(float scale) </code>
</td><td> Scale the creep icons on the minimap.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.SetCustomGameDifficulty" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.SetCustomGameDifficulty"> SetCustomGameDifficulty</a>
</td><td> <code>void SetCustomGameDifficulty(int a) </code>
</td><td> Set the difficulty level of the custom game mode
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.SetFirstBloodActive" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.SetFirstBloodActive"> SetFirstBloodActive</a>
</td><td> <code>void SetFirstBloodActive(bool a) </code>
</td><td> Sets whether First Blood has been triggered.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.SetGameWinner" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.SetGameWinner"> SetGameWinner</a>
</td><td> <code>void SetGameWinner(int team) </code>
</td><td> Makes ths specified team win
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.SetGoldPerTick" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.SetGoldPerTick"> SetGoldPerTick</a>
</td><td> <code>void SetGoldPerTick(int a) </code>
</td><td> Set the auto gold increase per timed interval.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.SetGoldTickTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.SetGoldTickTime"> SetGoldTickTime</a>
</td><td> <code>void SetGoldTickTime(float a) </code>
</td><td> Set the time <i>int</i>erval between auto gold increases.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.SetHeroMinimapIconSize" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.SetHeroMinimapIconSize"> SetHeroMinimapIconSize</a>
</td><td> <code>void SetHeroMinimapIconSize(int iconSize) </code>
</td><td> (nMinimapHeroIconSize) - Set the hero minimap icon size.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.SetHeroRespawnEnabled" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.SetHeroRespawnEnabled"> SetHeroRespawnEnabled</a>
</td><td> <code>void SetHeroRespawnEnabled(bool canRespawn) </code>
</td><td> Control if the normal DOTA hero respawn rules apply.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.SetHeroSelectionTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.SetHeroSelectionTime"> SetHeroSelectionTime</a>
</td><td> <code>void SetHeroSelectionTime(float time) </code>
</td><td> Sets the amount of time players have to pick their hero.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.SetNianFightStartTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.SetNianFightStartTime"> SetNianFightStartTime</a>
</td><td> <code>void SetNianFightStartTime(float a) </code>
</td><td> Sets the start time for the Nian fight
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.SetOverlayHealthBarUnit" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.SetOverlayHealthBarUnit"> SetOverlayHealthBarUnit</a>
</td><td> <code>void SetOverlayHealthBarUnit(handle unit, int style) </code>
</td><td> Show this unit's health on the overlay health bar
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.SetPostGameTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.SetPostGameTime"> SetPostGameTime</a>
</td><td> <code>void SetPostGameTime(float time) </code>
</td><td> Sets the amount of time players have between the game ending and the server disconnecting them.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.SetPreGameTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.SetPreGameTime"> SetPreGameTime</a>
</td><td> <code>void SetPreGameTime(float time) </code>
</td><td> Sets the amount of time players have between picking their hero and game start.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.SetRuneMinimapIconScale" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.SetRuneMinimapIconScale"> SetRuneMinimapIconScale</a>
</td><td> <code>void SetRuneMinimapIconScale(float scale) </code>
</td><td> Scale the rune icons on the minimap.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.SetRuneSpawnTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.SetRuneSpawnTime"> SetRuneSpawnTime</a>
</td><td> <code>void SetRuneSpawnTime(float time) </code>
</td><td> Sets the amount of time between rune spawns.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.SetSafeToLeave" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.SetSafeToLeave"> SetSafeToLeave</a>
</td><td> <code>void SetSafeToLeave(bool safeToLeave) </code>
</td><td> Mark this game as safe to leave.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.SetSameHeroSelectionEnabled" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.SetSameHeroSelectionEnabled"> SetSameHeroSelectionEnabled</a>
</td><td> <code>void SetSameHeroSelectionEnabled(bool enabled) </code>
</td><td> When true, players can repeatedly pick the same hero.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.SetTimeOfDay" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.SetTimeOfDay"> SetTimeOfDay</a>
</td><td> <code>void SetTimeOfDay(float time) </code>
</td><td> Set the time of day.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.SetTreeRegrowTime" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.SetTreeRegrowTime"> SetTreeRegrowTime</a>
</td><td> <code>void SetTreeRegrowTime(float time) </code>
</td><td> Sets the tree regrow time in seconds.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.SetUseBaseGoldBountyOnHeroes" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.SetUseBaseGoldBountyOnHeroes"> SetUseBaseGoldBountyOnHeroes</a>
</td><td> <code>void SetUseBaseGoldBountyOnHeroes(bool a) </code>
</td><td> Heroes will use the basic NPC functionality for determining their bounty, rather than DOTA specific formulas.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.SetUseCustomHeroXPValues" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.SetUseCustomHeroXPValues"> SetUseCustomHeroXPValues</a>
</td><td> <code>void SetUseCustomHeroXPValues(bool a) </code>
</td><td> Allows heroes in the map to give a specific amount of XP (this value must be set).
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.SetUseUniversalShopMode" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.SetUseUniversalShopMode"> SetUseUniversalShopMode</a>
</td><td> <code>void SetUseUniversalShopMode(bool enabled) </code>
</td><td> When true, all items are available at as long as any shop is in range, including Secret Shop items
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGamerules.State_Get" title="Dota 2 Workshop Tools/Scripting/API/CDOTAGamerules.State Get"> State_Get</a>
</td><td> <code>&lt;&gt; State_Get() </code>
</td><td> Get the current Gamerules state
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=46" title="Edit section: CToneMapControllerComponent">编辑</a>]</span> <span class="mw-headline" id="CToneMapControllerComponent"> CToneMapControllerComponent </span></h3>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CToneMapControllerComponent.GetBloomScale" title="Dota 2 Workshop Tools/Scripting/API/CToneMapControllerComponent.GetBloomScale"> GetBloomScale</a>
</td><td> <code>float GetBloomScale() </code>
</td><td> Gets bloomscale for this tonemap controller
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CToneMapControllerComponent.GetMaxExposure" title="Dota 2 Workshop Tools/Scripting/API/CToneMapControllerComponent.GetMaxExposure"> GetMaxExposure</a>
</td><td> <code>float GetMaxExposure() </code>
</td><td> Gets max exposure for this tonemap controller
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CToneMapControllerComponent.GetMinExposure" title="Dota 2 Workshop Tools/Scripting/API/CToneMapControllerComponent.GetMinExposure"> GetMinExposure</a>
</td><td> <code>float GetMinExposure() </code>
</td><td> Gets min exposure for this tonemap controller
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CToneMapControllerComponent.SetBloomScale" title="Dota 2 Workshop Tools/Scripting/API/CToneMapControllerComponent.SetBloomScale"> SetBloomScale</a>
</td><td> <code>void SetBloomScale(float a) </code>
</td><td> Sets bloom scale for this tonemap controller
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CToneMapControllerComponent.SetMaxExposure" title="Dota 2 Workshop Tools/Scripting/API/CToneMapControllerComponent.SetMaxExposure"> SetMaxExposure</a>
</td><td> <code>void SetMaxExposure(float a) </code>
</td><td> Sets max exposure for this tonemap controller
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CToneMapControllerComponent.SetMinExposure" title="Dota 2 Workshop Tools/Scripting/API/CToneMapControllerComponent.SetMinExposure"> SetMinExposure</a>
</td><td> <code>void SetMinExposure(float a) </code>
</td><td> Sets min exposure for this tonemap controller
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=47" title="Edit section: CDebugOverlayScriptHelper">编辑</a>]</span> <span class="mw-headline" id="CDebugOverlayScriptHelper"> CDebugOverlayScriptHelper </span></h3>
<p><i>无</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Axis" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.Axis"> Axis</a>
</td><td> <code>void Axis(Vector a, Quaternion b, float c, bool d, float e) </code>
</td><td> Draws an axis. Specify origin + orientation in world space.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Box" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.Box"> Box</a>
</td><td> <code>void Box(Vector a, Vector b, int c, int d, int e, int f, bool g, float h) </code>
</td><td> Draws a world-space axis-aligned box. Specify bounds in world space.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.BoxAngles" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.BoxAngles"> BoxAngles</a>
</td><td> <code>void BoxAngles(Vector a, Vector b, Vector c, Quaternion d, int e, int f, int g, int h, bool i, float j) </code>
</td><td> Draws an oriented box at the origin. Specify bounds in local space.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Capsule" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.Capsule"> Capsule</a>
</td><td> <code>void Capsule(Vector a, Quaternion b, float c, float d, int e, int f, int g, int h, bool i, float j) </code>
</td><td> Draws a capsule. Specify base in world space.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Circle" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.Circle"> Circle</a>
</td><td> <code>void Circle(Vector a, Quaternion b, float c, int d, int e, int f, int g, bool h, float i) </code>
</td><td> Draws a circle. Specify center in world space.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.CircleScreenOriented" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.CircleScreenOriented"> CircleScreenOriented</a>
</td><td> <code>void CircleScreenOriented(Vector a, float b, int c, int d, int e, int f, bool g, float h) </code>
</td><td> Draws a circle oriented to the screen. Specify center in world space.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Cone" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.Cone"> Cone</a>
</td><td> <code>void Cone(Vector a, Vector b, float c, float d, int e, int f, int g, int h, bool i, float j) </code>
</td><td> Draws a wireframe cone. Specify endpoint and direction in world space.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Cross" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.Cross"> Cross</a>
</td><td> <code>void Cross(Vector a, float b, int c, int d, int e, int f, bool g, float h) </code>
</td><td> Draws a screen-aligned cross. Specify origin in world space.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Cross3D" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.Cross3D"> Cross3D</a>
</td><td> <code>void Cross3D(Vector a, float b, int c, int d, int e, int f, bool g, float h) </code>
</td><td> Draws a world-aligned cross. Specify origin in world space.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Cross3DOriented" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.Cross3DOriented"> Cross3DOriented</a>
</td><td> <code>void Cross3DOriented(Vector a, Quaternion b, float c, int d, int e, int f, int g, bool h, float i) </code>
</td><td> Draws an oriented cross. Specify origin in world space.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.DrawTickMarkedLine" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.DrawTickMarkedLine"> DrawTickMarkedLine</a>
</td><td> <code>void DrawTickMarkedLine(Vector a, Vector b, float c, int d, int e, int f, int g, int h, bool i, float j) </code>
</td><td> Draws a dashed line. Specify endpoint's in world space.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.EntityAttachments" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.EntityAttachments"> EntityAttachments</a>
</td><td> <code>void EntityAttachments(ehandle a, float b) </code>
</td><td> Draws the attachments of the entity
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.EntityAxis" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.EntityAxis"> EntityAxis</a>
</td><td> <code>void EntityAxis(ehandle a, float b, bool c, float d) </code>
</td><td> Draws the axis of the entity origin
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.EntityBounds" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.EntityBounds"> EntityBounds</a>
</td><td> <code>void EntityBounds(ehandle a, int b, int c, int d, int e, bool f, float g) </code>
</td><td> Draws bounds of an entity
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.EntitySkeleton" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.EntitySkeleton"> EntitySkeleton</a>
</td><td> <code>void EntitySkeleton(ehandle a, float b) </code>
</td><td> Draws the skeleton of the entity
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.EntityText" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.EntityText"> EntityText</a>
</td><td> <code>void EntityText(ehandle a, int b, string c, int d, int e, int f, int g, float h) </code>
</td><td> Draws text on an entity
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.FilledRect2D" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.FilledRect2D"> FilledRect2D</a>
</td><td> <code>void FilledRect2D(Vector2D a, Vector2D b, int c, int d, int e, int f, float g) </code>
</td><td> Draws a screen-space filled 2D rectangle. Coordinates are in pixels.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.HorzArrow" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.HorzArrow"> HorzArrow</a>
</td><td> <code>void HorzArrow(Vector a, Vector b, float c, int d, int e, int f, int g, bool h, float i) </code>
</td><td> Draws a horizontal arrow. Specify endpoint's in world space.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Line" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.Line"> Line</a>
</td><td> <code>void Line(Vector a, Vector b, int c, int d, int e, int f, bool g, float h) </code>
</td><td> Draws a line between two point's
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Line2D" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.Line2D"> Line2D</a>
</td><td> <code>void Line2D(Vector2D a, Vector2D b, int c, int d, int e, int f, float g) </code>
</td><td> Draws a line between two point's in screenspace
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.PopDebugOverlayScope" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.PopDebugOverlayScope"> PopDebugOverlayScope</a>
</td><td> <code>void PopDebugOverlayScope() </code>
</td><td> Pops the identifier used to group overlays. Overlays marked with this identifier can be deleted in a big batch.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.PushAndClearDebugOverlayScope" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.PushAndClearDebugOverlayScope"> PushAndClearDebugOverlayScope</a>
</td><td> <code>void PushAndClearDebugOverlayScope(utlstringtoken a) </code>
</td><td> Pushes an identifier used to group overlays. Deletes all existing overlays using this overlay id.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.PushDebugOverlayScope" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.PushDebugOverlayScope"> PushDebugOverlayScope</a>
</td><td> <code>void PushDebugOverlayScope(utlstringtoken a) </code>
</td><td> Pushes an identifier used to group overlays. Overlays marked with this identifier can be deleted in a big batch.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.RemoveAllInScope" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.RemoveAllInScope"> RemoveAllInScope</a>
</td><td> <code>void RemoveAllInScope(utlstringtoken a) </code>
</td><td> Removes all overlays marked with a specific identifier, regardless of their lifetime.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.SolidCone" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.SolidCone"> SolidCone</a>
</td><td> <code>void SolidCone(Vector a, Vector b, float c, float d, int e, int f, int g, int h, bool i, float j) </code>
</td><td> Draws a solid cone. Specify endpoint and direction in world space.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Sphere" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.Sphere"> Sphere</a>
</td><td> <code>void Sphere(Vector a, float b, int c, int d, int e, int f, bool g, float h) </code>
</td><td> Draws a wireframe sphere. Specify center in world space.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.SweptBox" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.SweptBox"> SweptBox</a>
</td><td> <code>void SweptBox(Vector a, Vector b, Vector c, Vector d, Quaternion e, int f, int g, int h, int i, float j) </code>
</td><td> Draws a swept box. Specify endpoint's in world space and the bounds in local space.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Text" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.Text"> Text</a>
</td><td> <code>void Text(Vector a, int b, string c, float d, int e, int f, int g, int h, float i) </code>
</td><td> Draws 2D text. Specify origin in world space.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Texture" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.Texture"> Texture</a>
</td><td> <code>void Texture(string a, Vector2D b, Vector2D c, int d, int e, int f, int g, Vector2D h, Vector2D i, float j) </code>
</td><td> Draws a screen-space texture. Coordinates are in pixels.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Triangle" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.Triangle"> Triangle</a>
</td><td> <code>void Triangle(Vector a, Vector b, Vector c, int d, int e, int f, int g, bool h, float i) </code>
</td><td> Draws a filled triangle. Specify vertices in world space.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.UnitTestCycleOverlayRenderType" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.UnitTestCycleOverlayRenderType"> UnitTestCycleOverlayRenderType</a>
</td><td> <code>void UnitTestCycleOverlayRenderType() </code>
</td><td> Toggles the overlay render type, for unit tests
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.VectorText3D" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.VectorText3D"> VectorText3D</a>
</td><td> <code>void VectorText3D(Vector a, Quaternion b, string c, int d, int e, int f, int g, bool h, float i) </code>
</td><td> Draws 3D text. Specify origin + orientation in world space.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.VertArrow" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.VertArrow"> VertArrow</a>
</td><td> <code>void VertArrow(Vector a, Vector b, float c, int d, int e, int f, int g, bool h, float i) </code>
</td><td> Draws a vertical arrow. Specify endpoint's in world space.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.YawArrow" title="Dota 2 Workshop Tools/Scripting/API/CDebugOverlayScriptHelper.YawArrow"> YawArrow</a>
</td><td> <code>void YawArrow(Vector a, float b, float c, float d, int e, int f, int g, int h, bool i, float j) </code>
</td><td> Draws a arrow associated with a specific yaw. Specify endpoint's in world space.
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=48" title="Edit section: CBaseFlex">编辑</a>]</span> <span class="mw-headline" id="CBaseFlex"> CBaseFlex </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CBaseAnimating"> CBaseAnimating</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p><i>Animated characters who have vertex flex capability (Hi hex6)</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseFlex.GetCurrentScene" title="Dota 2 Workshop Tools/Scripting/API/CBaseFlex.GetCurrentScene"> GetCurrentScene</a>
</td><td> <code>handle GetCurrentScene() </code>
</td><td> Returns the instance of the oldest active scene entity <b>(if any).</b>
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseFlex.GetSceneByIndex" title="Dota 2 Workshop Tools/Scripting/API/CBaseFlex.GetSceneByIndex"> GetSceneByIndex</a>
</td><td> <code>handle GetSceneByIndex(int a) </code>
</td><td> Returns the instance of the scene entity at the specified index.
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=49" title="Edit section: CSceneEntity">编辑</a>]</span> <span class="mw-headline" id="CSceneEntity"> CSceneEntity </span></h3>
<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>继承 <a href="#CBaseEntity"> CBaseEntity</a>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
</dd></dl>
<p><i>Choreographed scene which controls animation and/or dialog on one or more actors.</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CSceneEntity.AddBroadcastTeamTarget" title="Dota 2 Workshop Tools/Scripting/API/CSceneEntity.AddBroadcastTeamTarget"> AddBroadcastTeamTarget</a>
</td><td> <code>void AddBroadcastTeamTarget(int a) </code>
</td><td> Adds a team (by index) to the broadcast list
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CSceneEntity.Cancel" title="Dota 2 Workshop Tools/Scripting/API/CSceneEntity.Cancel"> Cancel</a>
</td><td> <code>void Cancel() </code>
</td><td> Cancel scene playback
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CSceneEntity.EstimateLength" title="Dota 2 Workshop Tools/Scripting/API/CSceneEntity.EstimateLength"> EstimateLength</a>
</td><td> <code>float EstimateLength() </code>
</td><td> Returns length of this scene in seconds.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CSceneEntity.FindCamera" title="Dota 2 Workshop Tools/Scripting/API/CSceneEntity.FindCamera"> FindCamera</a>
</td><td> <code>handle FindCamera() </code>
</td><td> Get the camera
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CSceneEntity.FindNamedEntity" title="Dota 2 Workshop Tools/Scripting/API/CSceneEntity.FindNamedEntity"> FindNamedEntity</a>
</td><td> <code>handle FindNamedEntity(string a) </code>
</td><td> given an entity reference, such as&nbsp;!target, get actual entity from scene object
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CSceneEntity.IsPaused" title="Dota 2 Workshop Tools/Scripting/API/CSceneEntity.IsPaused"> IsPaused</a>
</td><td> <code>bool IsPaused() </code>
</td><td> If this scene is currently paused.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CSceneEntity.IsPlayingBack" title="Dota 2 Workshop Tools/Scripting/API/CSceneEntity.IsPlayingBack"> IsPlayingBack</a>
</td><td> <code>bool IsPlayingBack() </code>
</td><td> If this scene is currently playing.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CSceneEntity.LoadSceneFromString" title="Dota 2 Workshop Tools/Scripting/API/CSceneEntity.LoadSceneFromString"> LoadSceneFromString</a>
</td><td> <code>bool LoadSceneFromString(string a, string b) </code>
</td><td> given a dummy scene name and a vcd <i>string</i>, load the scene
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CSceneEntity.RemoveBroadcastTeamTarget" title="Dota 2 Workshop Tools/Scripting/API/CSceneEntity.RemoveBroadcastTeamTarget"> RemoveBroadcastTeamTarget</a>
</td><td> <code>void RemoveBroadcastTeamTarget(int a) </code>
</td><td> Removes a team (by index) from the broadcast list
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CSceneEntity.Start" title="Dota 2 Workshop Tools/Scripting/API/CSceneEntity.Start"> Start</a>
</td><td> <code>void Start(handle a) </code>
</td><td> Start scene playback, takes activatorEntity as param
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=50" title="Edit section: GridNav">编辑</a>]</span> <span class="mw-headline" id="GridNav"> GridNav </span></h3>
<p><i>A class that can communicate with the gridnav, useful for seeing if stuff should be able to move</i>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GridNav.GridPosToWorldCenterX" title="Dota 2 Workshop Tools/Scripting/API/GridNav.GridPosToWorldCenterX"> GridPosToWorldCenterX</a>
</td><td> <code>float GridPosToWorldCenterX(int a) </code>
</td><td> Get the X position of the center of a given X index
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GridNav.GridPosToWorldCenterY" title="Dota 2 Workshop Tools/Scripting/API/GridNav.GridPosToWorldCenterY"> GridPosToWorldCenterY</a>
</td><td> <code>float GridPosToWorldCenterY(int a) </code>
</td><td> Get the Y position of the center of a given Y index
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GridNav.IsBlocked" title="Dota 2 Workshop Tools/Scripting/API/GridNav.IsBlocked"> IsBlocked</a>
</td><td> <code>bool IsBlocked(Vector a) </code>
</td><td> Checks whether the given position is blocked
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GridNav.IsNearbyTree" title="Dota 2 Workshop Tools/Scripting/API/GridNav.IsNearbyTree"> IsNearbyTree</a>
</td><td> <code>bool IsNearbyTree(Vector position, float radius, bool c) </code>
</td><td>
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GridNav.IsTraversable" title="Dota 2 Workshop Tools/Scripting/API/GridNav.IsTraversable"> IsTraversable</a>
</td><td> <code>bool IsTraversable(Vector a) </code>
</td><td> Checks whether the given position is traversable
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GridNav.RegrowAllTrees" title="Dota 2 Workshop Tools/Scripting/API/GridNav.RegrowAllTrees"> RegrowAllTrees</a>
</td><td> <code>void RegrowAllTrees() </code>
</td><td>
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GridNav.WorldToGridPosX" title="Dota 2 Workshop Tools/Scripting/API/GridNav.WorldToGridPosX"> WorldToGridPosX</a>
</td><td> <code>int WorldToGridPosX(float a) </code>
</td><td> Get the X index of a given world X position
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GridNav.WorldToGridPosY" title="Dota 2 Workshop Tools/Scripting/API/GridNav.WorldToGridPosY"> WorldToGridPosY</a>
</td><td> <code>int WorldToGridPosY(float a) </code>
</td><td> Get the Y index of a given world Y position
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=51" title="Edit section: Convars">编辑</a>]</span> <span class="mw-headline" id="Convars"> Convars </span></h3>
<p><i>无</i>
</p><p><i>全局变量:</i> <code>ConVars</code>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Convars.GetBool" title="Dota 2 Workshop Tools/Scripting/API/Convars.GetBool"> GetBool</a>
</td><td> <code>table GetBool(string variableName) </code>
</td><td> GetBool(name)&nbsp;: returns the convar as a boolean flag.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Convars.GetCommandClient" title="Dota 2 Workshop Tools/Scripting/API/Convars.GetCommandClient"> GetCommandClient</a>
</td><td> <code>handle GetCommandClient() </code>
</td><td> GetCommandClient()&nbsp;: returns the player who issued this console command.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Convars.GetDOTACommandClient" title="Dota 2 Workshop Tools/Scripting/API/Convars.GetDOTACommandClient"> GetDOTACommandClient</a>
</td><td> <code>handle GetDOTACommandClient() </code>
</td><td> GetDOTACommandClient()&nbsp;: returns the DOTA player who issued this console command.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Convars.GetFloat" title="Dota 2 Workshop Tools/Scripting/API/Convars.GetFloat"> GetFloat</a>
</td><td> <code>table GetFloat(string name) </code>
</td><td> GetFloat(name)&nbsp;: returns the convar as a <i>float</i>. May return <i>nil</i> if no such convar.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Convars.GetInt" title="Dota 2 Workshop Tools/Scripting/API/Convars.GetInt"> GetInt</a>
</td><td> <code>table GetInt(string a) </code>
</td><td> GetInt(name)&nbsp;: returns the convar as an <i>int</i>. May return <i>nil</i> if no such convar.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Convars.GetStr" title="Dota 2 Workshop Tools/Scripting/API/Convars.GetStr"> GetStr</a>
</td><td> <code>table GetStr(string variableName) </code>
</td><td> GetStr(name)&nbsp;: returns the convar as a <i>string</i>. May return <i>nil</i> if no such convar.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Convars.RegisterCommand" title="Dota 2 Workshop Tools/Scripting/API/Convars.RegisterCommand"> RegisterCommand</a>
</td><td> <code>void RegisterCommand(string variableName, handle function, string helpText, int flags) </code>
</td><td> RegisterCommand(name, fn, helpString, flags)&nbsp;: register a console command.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Convars.RegisterConvar" title="Dota 2 Workshop Tools/Scripting/API/Convars.RegisterConvar"> RegisterConvar</a>
</td><td> <code>void RegisterConvar(string name, string defaultValue, string helpText, int flags) </code>
</td><td> RegisterConvar(name, defaultValue, helpString, flags): register a new console variable.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Convars.SetBool" title="Dota 2 Workshop Tools/Scripting/API/Convars.SetBool"> SetBool</a>
</td><td> <code>void SetBool(string variableName, bool value) </code>
</td><td> SetBool(name, val)&nbsp;: sets the value of the convar to the <i>bool</i>.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Convars.SetFloat" title="Dota 2 Workshop Tools/Scripting/API/Convars.SetFloat"> SetFloat</a>
</td><td> <code>void SetFloat(string variableName, float value) </code>
</td><td> SetFloat(name, val)&nbsp;: sets the value of the convar to the <i>float</i>.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Convars.SetInt" title="Dota 2 Workshop Tools/Scripting/API/Convars.SetInt"> SetInt</a>
</td><td> <code>void SetInt(string a, int b) </code>
</td><td> SetInt(name, val)&nbsp;: sets the value of the convar to the <i>int</i>.
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Convars.SetStr" title="Dota 2 Workshop Tools/Scripting/API/Convars.SetStr"> SetStr</a>
</td><td> <code>void SetStr(string a, string b) </code>
</td><td> SetStr(name, val)&nbsp;: sets the value of the convar to the <i>string</i>.
</td></tr></tbody></table>
<p><br>
</p>
<h3><span class="editsection">[<a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;section=52" title="Edit section: Vector">编辑</a>]</span> <span class="mw-headline" id="Vector"> Vector </span></h3>
<p><i>Vector class</i>
</p><p><i>全局变量:</i> <code>Vector(x,y,z)</code>
</p>
<table class="standard-table" style="width: 100%;">
<tbody><tr>
<th> 函数
</th><th> 函数原型
</th><th> 解释
</th></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector._add" title="Dota 2 Workshop Tools/Scripting/API/Vector. add"> __add</a>
</td><td> <code>Vector __add(Vector a, Vector b) </code>
</td><td> Overloaded +.  Adds vectors together
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector._div" title="Dota 2 Workshop Tools/Scripting/API/Vector. div"> __div</a>
</td><td> <code>Vector __div(Vector a, Vector b) </code>
</td><td> Overloaded /.  Divides vectors
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector._eq" title="Dota 2 Workshop Tools/Scripting/API/Vector. eq"> __eq</a>
</td><td> <code>bool __eq(Vector a, Vector b) </code>
</td><td> Overloaded ==.  Tests for Equality
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector._len" title="Dota 2 Workshop Tools/Scripting/API/Vector. len"> __len</a>
</td><td> <code>float __len() </code>
</td><td> Overloaded # returns the length of the vector
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector._mul" title="Dota 2 Workshop Tools/Scripting/API/Vector. mul"> __mul</a>
</td><td> <code>Vector __mul(Vector a, Vector b) </code>
</td><td> Overloaded * returns the vectors multiplied together
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector._sub" title="Dota 2 Workshop Tools/Scripting/API/Vector. sub"> __sub</a>
</td><td> <code>Vector __sub(Vector a, Vector b) </code>
</td><td> Overloaded -.  Subtracts vectors
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector._tostring" title="Dota 2 Workshop Tools/Scripting/API/Vector. tostring"> __tostring</a>
</td><td> <code>string __tostring() </code>
</td><td> Overloaded .. Converts vectors to strings
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector._unm" title="Dota 2 Workshop Tools/Scripting/API/Vector. unm"> _unm</a>
</td><td> <code>Vector _unm() </code>
</td><td> Overloaded - operator
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Cross" title="Dota 2 Workshop Tools/Scripting/API/Vector.Cross"> Cross</a>
</td><td> <code>Vector Cross(Vector a, Vector b) </code>
</td><td> Cross product of two vectors
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Dot" title="Dota 2 Workshop Tools/Scripting/API/Vector.Dot"> Dot</a>
</td><td> <code>float Dot(Vector a, Vector b) </code>
</td><td> Dot product of two vectors
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length" title="Dota 2 Workshop Tools/Scripting/API/Vector.Length"> Length</a>
</td><td> <code>float Length() </code>
</td><td> Length of the Vector
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length2D" title="Dota 2 Workshop Tools/Scripting/API/Vector.Length2D"> Length2D</a>
</td><td> <code>float Length2D() </code>
</td><td> Length of the Vector in the XY plane
</td></tr>
<tr>
<td> <a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Normalized" title="Dota 2 Workshop Tools/Scripting/API/Vector.Normalized"> Normalized</a>
</td><td> <code>Vector Normalized() </code>
</td><td> Returns the vector normalized
</td></tr></tbody></table>

<!-- 
NewPP limit report
Preprocessor node count: 233/1000000
Post-expand include size: 978/2097152 bytes
Template argument size: 311/2097152 bytes
Expensive parser function count: 0/100
-->
<div class="printfooter">
Retrieved from "<a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API">https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API</a>"</div>
                <!-- /bodytext -->
                                <!-- catlinks -->
                <div id="catlinks" class="catlinks catlinks-allhidden"></div>                <!-- /catlinks -->
                                                <div class="visualClear"></div>
            </div>
            <!-- /bodyContent -->
        </div>
        <!-- /content -->
        <!-- header -->
        <div id="mw-head" class="noprint">
            
<!-- 0 -->
<div id="p-personal" class="">
    <h5>Personal tools</h5>
    <ul>
                    <li id="pt-userpage"><a href="https://developer.valvesoftware.com/wiki/User:Tw980252" title="Your user page [alt-shift-.]" accesskey="." class="new">Tw980252</a></li>
                    <li id="pt-mytalk"><a href="https://developer.valvesoftware.com/wiki/User_talk:Tw980252" title="Your talk page [alt-shift-n]" accesskey="n" class="new">My talk</a></li>
                    <li id="pt-preferences"><a href="https://developer.valvesoftware.com/wiki/Special:Preferences" title="Your preferences">My preferences</a></li>
                    <li id="pt-watchlist"><a href="https://developer.valvesoftware.com/wiki/Special:Watchlist" title="The list of pages you are monitoring for changes [alt-shift-l]" accesskey="l">My watchlist</a></li>
                    <li id="pt-mycontris"><a href="https://developer.valvesoftware.com/wiki/Special:Contributions/Tw980252" title="List of your contributions [alt-shift-y]" accesskey="y">My contributions</a></li>
                    <li id="pt-logout"><a href="https://developer.valvesoftware.com/w/index.php?title=Special:UserLogout&amp;returnto=Dota_2_Workshop_Tools/Scripting/API" title="Log out">Log out</a></li>
            </ul>
</div>

<!-- /0 -->
            <div id="left-navigation">
                
<!-- 0 -->
<div id="p-namespaces" class="vectorTabs">
    <h5>Namespaces</h5>
    <ul>
                    <li id="ca-nstab-main" class="selected"><a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API" title="View the content page [alt-shift-c]" accesskey="c"><span>Page</span></a></li>
                    <li id="ca-talk" class="new"><a href="https://developer.valvesoftware.com/w/index.php?title=Talk:Dota_2_Workshop_Tools/Scripting/API&amp;action=edit&amp;redlink=1" title="Discussion about the content page [alt-shift-t]" accesskey="t"><span>Discussion</span></a></li>
            </ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-variants" class="vectorMenu emptyPortlet">
    <h5><span>Variants</span><a href="#"></a></h5>
    <div class="menu">
        <ul>
                    </ul>
    </div>
</div>

<!-- /1 -->
            </div>
            <div id="right-navigation">
                
<!-- 0 -->
<div id="p-views" class="vectorTabs">
    <h5>Views</h5>
    <ul>
                    <li id="ca-view" class="selected"><a href="https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API"><span>Read</span></a></li>
                    <li id="ca-edit"><a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=edit" title="You can edit this page. Please use the preview button before saving [alt-shift-e]" accesskey="e"><span>Edit</span></a></li>
                    <li id="ca-history" class="collapsible "><a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=history" title="Past revisions of this page [alt-shift-h]" accesskey="h"><span>View history</span></a></li>
            </ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-cactions" class="vectorMenu">
    <h5><span>Actions</span><a href="#"></a></h5>
    <div class="menu">
        <ul>
                            <li id="ca-watch"><a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;action=watch" title="Add this page to your watchlist [alt-shift-w]" accesskey="w">Watch</a></li>
                    </ul>
    </div>
</div>

<!-- /1 -->

<!-- 2 -->
<div id="p-search">
    <h5><label for="searchInput">Search</label></h5>
    <form action="/w/index.php" id="searchform">
        <input name="title" value="Special:Search" type="hidden">
                <input id="searchInput" name="search" title="Search Valve Developer Community [alt-shift-f]" accesskey="f" type="text">
        <input name="go" class="searchButton" id="searchGoButton" value="Go" title="Go to a page with this exact name if exists" type="submit">
        <input name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search the pages for this text" type="submit">
            </form>
</div>
</div>



<!-- /2 -->
            </div>
        </div>
        <!-- /header -->
        <!-- panel -->
            <div id="mw-panel" class="noprint">
                <!-- logo -->
                    <div id="p-logo"><a style="background-image: url(/w/skins/common/images/wiki.png);" href="https://developer.valvesoftware.com/wiki/Main_Page" title="Visit the main page"></a></div>
                <!-- /logo -->
                
<!-- navigation -->
<div class="portal" id="p-navigation">
    <h5>Navigation</h5>
    <div class="body">
                <ul>
                    <li id="n-mainpage"><a href="https://developer.valvesoftware.com/wiki/Main_Page" title="Visit the main page [alt-shift-z]" accesskey="z">Main Page</a></li>
                    <li id="n-Source-SDK-index"><a href="https://developer.valvesoftware.com/wiki/SDK_Docs">Source SDK index</a></li>
                    <li id="n-recentchanges"><a href="https://developer.valvesoftware.com/wiki/Special:RecentChanges" title="The list of recent changes in the wiki [alt-shift-r]" accesskey="r">Recent changes</a></li>
                    <li id="n-randompage"><a href="https://developer.valvesoftware.com/wiki/Special:Random" title="Load a random page [alt-shift-x]" accesskey="x">Random page</a></li>
                </ul>
            </div>
</div>

<!-- /navigation -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- Support -->
<div class="portal" id="p-Support">
    <h5>Support</h5>
    <div class="body">
                <ul>
                    <li id="n-Getting-help"><a href="https://developer.valvesoftware.com/wiki/Help:Contents">Getting help</a></li>
                    <li id="n-Source-SDK-FAQ"><a href="https://developer.valvesoftware.com/wiki/Category:Source_SDK_FAQ">Source SDK FAQ</a></li>
                    <li id="n-Level-Design-FAQ"><a href="https://developer.valvesoftware.com/wiki/Category:Level_Design_FAQ">Level Design FAQ</a></li>
                    <li id="n-SDK-Help-Forums"><a href="http://forums.steampowered.com/forums/forumdisplay.php?f=191">SDK Help Forums</a></li>
                </ul>
            </div>
</div>

<!-- /Support -->

<!-- Steam Community -->
<div class="portal" id="p-Steam_Community">
    <h5>Steam Community</h5>
    <div class="body">
                <ul>
                    <li id="n-Source-SDK-Hub"><a href="http://steamcommunity.com/app/211">Source SDK Hub</a></li>
                    <li id="n-Steam-Games"><a href="http://www.steampowered.com/">Steam Games</a></li>
                </ul>
            </div>
</div>

<!-- /Steam Community -->

<!-- TOOLBOX -->
<div class="portal" id="p-tb">
    <h5>Toolbox</h5>
    <div class="body">
        <ul>
                    <li id="t-whatlinkshere"><a href="https://developer.valvesoftware.com/wiki/Special:WhatLinksHere/Dota_2_Workshop_Tools/Scripting/API" title="List of all wiki pages that link here [alt-shift-j]" accesskey="j">What links here</a></li>
                        <li id="t-recentchangeslinked"><a href="https://developer.valvesoftware.com/wiki/Special:RecentChangesLinked/Dota_2_Workshop_Tools/Scripting/API" title="Recent changes in pages linked from this page [alt-shift-k]" accesskey="k">Related changes</a></li>
                                                                                                                                                                        <li id="t-specialpages"><a href="https://developer.valvesoftware.com/wiki/Special:SpecialPages" title="List of all special pages [alt-shift-q]" accesskey="q">Special pages</a></li>
                                    <li id="t-print"><a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;printable=yes" rel="alternate" title="Printable version of this page [alt-shift-p]" accesskey="p">Printable version</a></li>
                        <li id="t-permalink"><a href="https://developer.valvesoftware.com/w/index.php?title=Dota_2_Workshop_Tools/Scripting/API&amp;oldid=186491" title="Permanent link to this revision of the page">Permanent link</a></li>
                        </ul>
    </div>
</div>

<!-- /TOOLBOX -->

<!-- LANGUAGES -->

<!-- /LANGUAGES -->
            </div>
        <!-- /panel -->
        <!-- footer -->
        <div id="footer">
                                            <ul id="footer-info">
                                                                    <li id="footer-info-lastmod"> This page was last modified on 15 August 2014, at 23:11.</li>
                                                                                            <li id="footer-info-viewcount">This page has been accessed 9,711 times.</li>
                                                                                                        <ul id="footer-places">
                                                                    <li id="footer-places-about"><a href="https://developer.valvesoftware.com/wiki/Valve_Developer_Community:About" title="Valve Developer Community:About">About Valve Developer Community</a></li>
                                                                                            <li id="footer-places-disclaimer"><a href="https://developer.valvesoftware.com/wiki/Valve_Developer_Community:Terms_of_use" title="Valve Developer Community:Terms of use">Terms of Use</a></li>
                                                                        <!-- Added link to Third Party Legal notices -->
                  <li id="f-thirdparty"><a href="http://developer.valvesoftware.com/wiki/Third_Party_Legal_Notices">Third&nbsp;Party&nbsp;Legal&nbsp;Notices</a></li>
                </ul>
            <ul id="footer-icons" class="noprint">
                                <li id="footer-icon-poweredby"><a href="http://www.mediawiki.org/"><img src="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" height="31" width="88"></a></li>
                                            </ul>
            <div style="clear:both"></div>
        </ul></div>
    </div>
        <!-- /footer -->
        <!-- fixalpha -->
        <script type="text/javascript"> if ( window.isMSIE55 ) fixalpha(); </script>
        <!-- /fixalpha -->
        
<script>if (window.runOnloadHook) runOnloadHook();</script>
        <!-- Served in 1.178 secs. -->        </div>

    

</body><script type="application/x-javascript" src="Dota%202%20Workshop%20Tools_Scripting_API%20-%20Valve%20Developer%20Community_files/opt_content.js"></script></html>